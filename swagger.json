{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Syncro",
    "description": "Welcome to the official Syncro API Docs.\n\nTo use these docs, you will need an active Syncro account. You can sign up for one here: [Syncro](https://syncromsp.com)\n\nIf you already have an active account, fill in your subdomain below and then click \"Authorize\" and fill in your api-key. The key is specific to your user account so it is found on the your user profile page.\n\nPlease review the [API License Agreement](https://syncromsp.com/syncromsp-api-license-agreement/) before using our API. By accessing our API, you are agreeing to the API License Agreement.\n\nPlease note there is a rate limit of 180 requests per minute per IP address on API Usage.    ",
    "contact": {
      "email": "help@syncromsp.com",
      "name": "API Support",
      "url": "https://help.syncromsp.com/"
    }
  },
  "host": "your-subdomain.syncromsp.com",
  "basePath": "/api/v1",
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/appointment_types": {
      "get": {
        "description": "Required permission: Global Admin\n",
        "summary": "Returns a paginated list of Appointment Types",
        "tags": [
          "Appointment Type"
        ],
        "operationId": "ReturnsapaginatedlistofAppointmentTypes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/AppointmentTypesResponse"
            },
            "examples": {
              "application/json": {
                "appointment_types": [
                  {
                    "id": 1,
                    "account_id": 1,
                    "name": "Office Hours",
                    "email_instructions": "string",
                    "location_type": "manual_entry",
                    "location_hard_code": null,
                    "created_at": "2019-10-16T19:29:33.397Z",
                    "updated_at": "2019-10-16T19:29:33.397Z",
                    "buffer": null,
                    "appointment_reminders_schedule_id": null
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Global Admin\n",
        "summary": "Creates an Appointment Type",
        "tags": [
          "Appointment Type"
        ],
        "operationId": "CreatesanAppointmentType",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Appointment Type object that needs to be added",
            "schema": {
              "$ref": "#/definitions/AppointmentTypesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/AppointmentTypesResponse2"
            },
            "examples": {
              "application/json": {
                "appointment_type": {
                  "id": 1,
                  "account_id": 1,
                  "name": "Office Hours",
                  "email_instructions": "string",
                  "location_type": "manual_entry",
                  "location_hard_code": null,
                  "created_at": "2019-10-16T19:29:33.397Z",
                  "updated_at": "2019-10-16T19:29:33.397Z",
                  "buffer": null,
                  "appointment_reminders_schedule_id": null
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/AppointmentTypesResponse3"
            },
            "examples": {
              "application/json": {
                "record": {
                  "id": null,
                  "account_id": 1,
                  "name": "",
                  "email_instructions": null,
                  "location_type": null,
                  "location_hard_code": null,
                  "created_at": null,
                  "updated_at": null,
                  "buffer": null,
                  "appointment_reminders_schedule_id": null
                },
                "errors": "Name can't be blank,Location type can't be blank"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/appointment_types/{id}": {
      "get": {
        "description": "Required permission: Global Admin\n",
        "summary": "Retrieves an Appointment Type by ID",
        "tags": [
          "Appointment Type"
        ],
        "operationId": "RetrievesanAppointmentTypebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/AppointmentTypesResponse5"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "account_id": 1,
                "name": "Office Hours",
                "email_instructions": "string",
                "location_type": "manual_entry",
                "location_hard_code": null,
                "created_at": "2019-10-16T19:29:33.397Z",
                "updated_at": "2019-10-16T19:29:33.397Z",
                "buffer": null,
                "appointment_reminders_schedule_id": null
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Required permission: Global Admin\n",
        "summary": "Updates an existing Appointment Type by ID",
        "tags": [
          "Appointment Type"
        ],
        "operationId": "UpdatesanexistingAppointmentTypebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Appointment Type object that needs to be updated",
            "schema": {
              "$ref": "#/definitions/AppointmentTypesRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "Required permission: Global Admin\n",
        "summary": "Deletes an Appointment Type by ID",
        "tags": [
          "Appointment Type"
        ],
        "operationId": "DeletesanAppointmentTypebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/appointments": {
      "get": {
        "description": "Required permission: Appointments - View All (see-own never restricted)\n",
        "summary": "Returns a paginated list of Appointments",
        "tags": [
          "Appointment"
        ],
        "operationId": "ReturnsapaginatedlistofAppointments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Returns Appointments that start after the date. Example \"2019-01-25\""
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Returns Appointments that start before the date. Example \"2019-12-31\""
          },
          {
            "name": "mine",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Return only current user's appointments"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 25 results"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/AppointmentsResponse"
            },
            "examples": {
              "application/json": {
                "appointments": [
                  {
                    "appointment": {
                      "id": 3,
                      "summary": "Appointment API",
                      "description": "Notes:\n Appointment Description\n\n Contact: \nWalkin Customer \n\n Details: \nCustomer Information: \n Walkin Customer\n  Phone: 123 - walkin@somedomain.com",
                      "customer_id": 1,
                      "created_at": "2019-10-20T01:28:50.580Z",
                      "updated_at": "2019-10-20T01:28:50.580Z",
                      "start_at": "2019-10-21T01:28:00.000Z",
                      "end_at": "2019-10-21T05:28:00.000Z",
                      "duration": 4,
                      "location": "In Shop",
                      "ticket_id": null,
                      "appointment_location_type": null,
                      "start_at_label": "Sun 10-20-19 06:28 PM",
                      "all_day": null,
                      "ticket": null,
                      "do_not_email": "1",
                      "customer": {
                        "id": 1,
                        "firstname": "Walkin",
                        "lastname": "Customer",
                        "fullname": "Walkin Customer",
                        "business_name": null,
                        "email": "walkin@somedomain.com",
                        "phone": "123",
                        "mobile": null,
                        "created_at": "2019-10-20T01:28:37.187Z",
                        "updated_at": "2019-10-20T01:28:37.187Z",
                        "pdf_url": null,
                        "address": null,
                        "address_2": null,
                        "city": null,
                        "state": null,
                        "zip": null,
                        "latitude": null,
                        "longitude": null,
                        "notes": null,
                        "get_sms": false,
                        "opt_out": false,
                        "disabled": false,
                        "no_email": true,
                        "location_name": null,
                        "location_id": null,
                        "properties": {},
                        "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=dxbkw6x44de91dum7fua",
                        "tax_rate_id": null,
                        "notification_email": null,
                        "invoice_cc_emails": null,
                        "invoice_term_id": null,
                        "referred_by": null,
                        "ref_customer_id": null,
                        "business_and_full_name": "Walkin Customer",
                        "business_then_name": "Walkin Customer",
                        "contacts": []
                      }
                    }
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "No special permissions required.\n",
        "summary": "Creates an Appointment",
        "tags": [
          "Appointment"
        ],
        "operationId": "CreatesanAppointment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Appointment object that needs to be added",
            "schema": {
              "$ref": "#/definitions/AppointmentsRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/AppointmentsResponse2"
            },
            "examples": {
              "application/json": {
                "appointment": {
                  "id": 3,
                  "summary": "Appointment API",
                  "description": "Notes:\n Appointment Description\n\n Contact: \nWalkin Customer \n\n Details: \nCustomer Information: \n Walkin Customer\n  Phone: 123 - walkin@somedomain.com",
                  "customer_id": 1,
                  "created_at": "2019-10-20T01:28:50.580Z",
                  "updated_at": "2019-10-20T01:28:50.580Z",
                  "start_at": "2019-10-21T01:28:00.000Z",
                  "end_at": "2019-10-21T05:28:00.000Z",
                  "duration": 4,
                  "location": "In Shop",
                  "ticket_id": null,
                  "appointment_location_type": null,
                  "start_at_label": "Sun 10-20-19 06:28 PM",
                  "all_day": null,
                  "ticket": null,
                  "do_not_email": "1",
                  "customer": {
                    "id": 1,
                    "firstname": "Walkin",
                    "lastname": "Customer",
                    "fullname": "Walkin Customer",
                    "business_name": null,
                    "email": "walkin@somedomain.com",
                    "phone": "123",
                    "mobile": null,
                    "created_at": "2019-10-20T01:28:37.187Z",
                    "updated_at": "2019-10-20T01:28:37.187Z",
                    "pdf_url": null,
                    "address": null,
                    "address_2": null,
                    "city": null,
                    "state": null,
                    "zip": null,
                    "latitude": null,
                    "longitude": null,
                    "notes": null,
                    "get_sms": false,
                    "opt_out": false,
                    "disabled": false,
                    "no_email": true,
                    "location_name": null,
                    "location_id": null,
                    "properties": {},
                    "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=dxbkw6x44de91dum7fua",
                    "tax_rate_id": null,
                    "notification_email": null,
                    "invoice_cc_emails": null,
                    "invoice_term_id": null,
                    "referred_by": null,
                    "ref_customer_id": null,
                    "business_and_full_name": "Walkin Customer",
                    "business_then_name": "Walkin Customer",
                    "contacts": []
                  }
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/AppointmentsResponse3"
            },
            "examples": {
              "application/json": {
                "success": false,
                "error": "Summary can't be blank,Start at can't be blank,End at can't be blank",
                "message": "Summary can't be blank,Start at can't be blank,End at can't be blank",
                "params": {
                  "description": "Incomplete appointment"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/appointments/{id}": {
      "get": {
        "description": "No special permissions required.\n",
        "summary": "Retrieves an Appointment by ID",
        "tags": [
          "Appointment"
        ],
        "operationId": "RetrievesanAppointmentbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/AppointmentsResponse5"
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "No special permissions required.\n",
        "summary": "Updates an existing Appointment by ID",
        "tags": [
          "Appointment"
        ],
        "operationId": "UpdatesanexistingAppointmentbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Appointment object that needs to be added",
            "schema": {
              "$ref": "#/definitions/AppointmentsRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/AppointmentsResponse2"
            },
            "examples": {
              "application/json": {
                "appointment": {
                  "id": 3,
                  "summary": "Appointment API",
                  "description": "Notes:\n Appointment Description\n\n Contact: \nWalkin Customer \n\n Details: \nCustomer Information: \n Walkin Customer\n  Phone: 123 - walkin@somedomain.com",
                  "customer_id": 1,
                  "created_at": "2019-10-20T01:28:50.580Z",
                  "updated_at": "2019-10-20T01:28:50.580Z",
                  "start_at": "2019-10-21T01:28:00.000Z",
                  "end_at": "2019-10-21T05:28:00.000Z",
                  "duration": 4,
                  "location": "In Shop",
                  "ticket_id": null,
                  "appointment_location_type": null,
                  "start_at_label": "Sun 10-20-19 06:28 PM",
                  "all_day": null,
                  "ticket": null,
                  "do_not_email": "1",
                  "customer": {
                    "id": 1,
                    "firstname": "Walkin",
                    "lastname": "Customer",
                    "fullname": "Walkin Customer",
                    "business_name": null,
                    "email": "walkin@somedomain.com",
                    "phone": "123",
                    "mobile": null,
                    "created_at": "2019-10-20T01:28:37.187Z",
                    "updated_at": "2019-10-20T01:28:37.187Z",
                    "pdf_url": null,
                    "address": null,
                    "address_2": null,
                    "city": null,
                    "state": null,
                    "zip": null,
                    "latitude": null,
                    "longitude": null,
                    "notes": null,
                    "get_sms": false,
                    "opt_out": false,
                    "disabled": false,
                    "no_email": true,
                    "location_name": null,
                    "location_id": null,
                    "properties": {},
                    "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=dxbkw6x44de91dum7fua",
                    "tax_rate_id": null,
                    "notification_email": null,
                    "invoice_cc_emails": null,
                    "invoice_term_id": null,
                    "referred_by": null,
                    "ref_customer_id": null,
                    "business_and_full_name": "Walkin Customer",
                    "business_then_name": "Walkin Customer",
                    "contacts": []
                  }
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/AppointmentsResponse3"
            },
            "examples": {
              "application/json": {
                "success": false,
                "error": "Summary can't be blank",
                "message": "Summary can't be blank",
                "params": {
                  "summary": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "No special permissions required.\n",
        "summary": "Deletes an Appointment by ID",
        "tags": [
          "Appointment"
        ],
        "operationId": "DeletesanAppointmentbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customer_assets": {
      "get": {
        "description": "Required permission: Assets - List/Search\nSingle-Customer Users can only access own assets.\n",
        "summary": "Returns a paginated list of Assets",
        "tags": [
          "Asset"
        ],
        "operationId": "ReturnsapaginatedlistofAssets",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snmp_enabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Any assets with SNMP enabled"
          },
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Any assets attached to a Customer ID"
          },
          {
            "name": "asset_type_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Any assets attached to an Asset Type ID"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search query"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 25 results"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomerAssetsResponse"
            },
            "examples": {
              "application/json": {
                "assets": [
                  {
                    "id": 7,
                    "name": "New Name",
                    "customer_id": 1,
                    "contact_id": null,
                    "created_at": "2019-10-21T04:40:27.117Z",
                    "updated_at": "2019-10-21T04:40:27.190Z",
                    "properties": {
                      "OS": 4,
                      "Size": "Medium"
                    },
                    "asset_type": "Dodrio",
                    "asset_serial": "NewSerial",
                    "external_rmm_link": null,
                    "customer": {
                      "id": 1,
                      "firstname": "Walkin",
                      "lastname": "Customer",
                      "fullname": "Walkin Customer",
                      "business_name": null,
                      "email": "walkin@somedomain.com",
                      "phone": "123",
                      "mobile": null,
                      "created_at": "2019-10-21T04:40:14.156Z",
                      "updated_at": "2019-10-21T04:40:14.156Z",
                      "pdf_url": null,
                      "address": null,
                      "address_2": null,
                      "city": null,
                      "state": null,
                      "zip": null,
                      "latitude": null,
                      "longitude": null,
                      "notes": null,
                      "get_sms": false,
                      "opt_out": false,
                      "disabled": false,
                      "no_email": true,
                      "location_id": null,
                      "properties": {},
                      "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=j2apoteiivxcuygw1nvc",
                      "tax_rate_id": null,
                      "notification_email": null,
                      "invoice_cc_emails": null,
                      "invoice_term_id": null,
                      "referred_by": null,
                      "ref_customer_id": null,
                      "business_and_full_name": "Walkin Customer",
                      "business_then_name": "Walkin Customer"
                    },
                    "rmm_links": [],
                    "rmm_store": {
                      "id": 4,
                      "asset_id": 7,
                      "account_id": 1,
                      "triggers": {
                        "bsod_triggered": "false",
                        "time_triggered": "false",
                        "no_av_triggered": "false",
                        "defrag_triggered": "false",
                        "firewall_triggered": "false",
                        "app_crash_triggered": "false",
                        "low_hd_space_triggered": "false",
                        "smart_failure_triggered": "false",
                        "device_manager_triggered": "false",
                        "agent_offline_triggered": "false"
                      },
                      "windows_updates": {},
                      "emsisoft": {},
                      "general": {},
                      "created_at": "2019-10-21T04:40:27.201Z",
                      "updated_at": "2019-10-21T04:40:27.201Z",
                      "override_alert_agent_offline_mins": null,
                      "override_alert_agent_rearm_after_mins": null,
                      "override_low_hd_threshold": null,
                      "override_autoresolve_offline_alert": null
                    },
                    "address": {
                      "id": 1,
                      "name": "Home",
                      "customer_id": 1,
                      "address_type_id": 2,
                      "address1": "123 main st",
                      "address2": "address2",
                      "city": "city",
                      "state": "state",
                      "zip": "11111",
                      "latitude": null,
                      "longitude": null,
                      "created_at": "2019-10-21T04:40:27.201Z",
                      "updated_at": "2019-10-21T04:40:27.201Z",
                      "account_id": 1
                    }
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Assets - Create\nSingle-Customer Users can only access own assets.\n",
        "summary": "Creates an Asset",
        "tags": [
          "Asset"
        ],
        "operationId": "CreatesanAsset",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Asset object that needs to be added",
            "schema": {
              "$ref": "#/definitions/CustomerAssetsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomerAssetsResponse2"
            },
            "examples": {
              "application/json": {
                "asset": {
                  "id": 7,
                  "name": "New Name",
                  "customer_id": 1,
                  "contact_id": null,
                  "created_at": "2019-10-21T04:40:27.117Z",
                  "updated_at": "2019-10-21T04:40:27.190Z",
                  "properties": {
                    "OS": 4,
                    "Size": "Medium"
                  },
                  "asset_type": "Dodrio",
                  "asset_serial": "NewSerial",
                  "external_rmm_link": null,
                  "customer": {
                    "id": 1,
                    "firstname": "Walkin",
                    "lastname": "Customer",
                    "fullname": "Walkin Customer",
                    "business_name": null,
                    "email": "walkin@somedomain.com",
                    "phone": "123",
                    "mobile": null,
                    "created_at": "2019-10-21T04:40:14.156Z",
                    "updated_at": "2019-10-21T04:40:14.156Z",
                    "pdf_url": null,
                    "address": null,
                    "address_2": null,
                    "city": null,
                    "state": null,
                    "zip": null,
                    "latitude": null,
                    "longitude": null,
                    "notes": null,
                    "get_sms": false,
                    "opt_out": false,
                    "disabled": false,
                    "no_email": true,
                    "location_id": null,
                    "properties": {},
                    "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=j2apoteiivxcuygw1nvc",
                    "tax_rate_id": null,
                    "notification_email": null,
                    "invoice_cc_emails": null,
                    "invoice_term_id": null,
                    "referred_by": null,
                    "ref_customer_id": null,
                    "business_and_full_name": "Walkin Customer",
                    "business_then_name": "Walkin Customer"
                  },
                  "rmm_links": [],
                  "rmm_store": {
                    "id": 4,
                    "asset_id": 7,
                    "account_id": 1,
                    "triggers": {
                      "bsod_triggered": "false",
                      "time_triggered": "false",
                      "no_av_triggered": "false",
                      "defrag_triggered": "false",
                      "firewall_triggered": "false",
                      "app_crash_triggered": "false",
                      "low_hd_space_triggered": "false",
                      "smart_failure_triggered": "false",
                      "device_manager_triggered": "false",
                      "agent_offline_triggered": "false"
                    },
                    "windows_updates": {},
                    "emsisoft": {},
                    "general": {},
                    "created_at": "2019-10-21T04:40:27.201Z",
                    "updated_at": "2019-10-21T04:40:27.201Z",
                    "override_alert_agent_offline_mins": null,
                    "override_alert_agent_rearm_after_mins": null,
                    "override_low_hd_threshold": null,
                    "override_autoresolve_offline_alert": null
                  },
                  "address": {
                    "id": 1,
                    "name": "Home",
                    "customer_id": 1,
                    "address_type_id": 2,
                    "address1": "123 main st",
                    "address2": "address2",
                    "city": "city",
                    "state": "state",
                    "zip": "11111",
                    "latitude": null,
                    "longitude": null,
                    "created_at": "2019-10-21T04:40:27.201Z",
                    "updated_at": "2019-10-21T04:40:27.201Z",
                    "account_id": 1
                  }
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/CustomerAssetsResponse3"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Asset type can't be blank",
                  "Name You must have an asset type first, please go create one"
                ],
                "params": {
                  "name": "No type"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customer_assets/{id}": {
      "get": {
        "description": "Required permission: Assets - View Details\nSingle-Customer Users can only access own assets.\n",
        "summary": "Retrieves an Asset by ID",
        "tags": [
          "Asset"
        ],
        "operationId": "RetrievesanAssetbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomerAssetsResponse5"
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Required permission: Assets - Edit\nSingle-Customer Users can only access own assets.\n",
        "summary": "Updates an existing Asset by ID",
        "tags": [
          "Asset"
        ],
        "operationId": "UpdatesanexistingAssetbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Asset object that needs to be updated",
            "schema": {
              "$ref": "#/definitions/CustomerAssetsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomerAssetsResponse5"
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/CustomerAssetsResponse7"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Asset type can't be blank"
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/callerid": {
      "get": {
        "description": "Get Caller ID",
        "summary": "Get Caller ID",
        "tags": [
          "Call"
        ],
        "operationId": "GetCallerID",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Phone number"
          },
          {
            "name": "outbound",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CalleridResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "name": "Walking Customer",
                  "ticket_status": "Open"
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "description": "Required permission: Customers - View Detail\nSingle-Customer Users can only access own contacts.\n",
        "summary": "Returns a paginated list of Contacts",
        "tags": [
          "Contact"
        ],
        "operationId": "ReturnsapaginatedlistofContacts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Any contacts attached to a Customer ID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 25 results"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ContactsResponse"
            },
            "examples": {
              "application/json": {
                "contacts": [
                  {
                    "id": 1,
                    "name": "Boba Fett",
                    "address1": "8653 Ivan Flat",
                    "address2": "Apt. 436",
                    "city": "Tuanside",
                    "state": "Delaware",
                    "zip": "02293",
                    "email": "jarviscorwin@hanefeeney.io",
                    "phone": "657.325.3258 x330",
                    "mobile": "(133) 358-5295",
                    "latitude": 67.92905002829,
                    "longitude": 91.6028665875294,
                    "customer_id": 1,
                    "account_id": 1,
                    "notes": "Talk Jabba. (Tell that to Jabba.)",
                    "created_at": "2019-10-22T08:47:09.723Z",
                    "updated_at": "2019-10-22T08:47:09.723Z",
                    "vendor_id": null,
                    "properties": {},
                    "opt_out": false,
                    "extension": null
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_entries": 1,
                  "per_page": 50,
                  "page": 1
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Requires permission: Customers - View Detail",
            "schema": {
              "$ref": "#/definitions/ContactsResponse1"
            },
            "examples": {
              "application/json": {
                "error": "Not authorized. Please ask account admin to update your group permissions."
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Customers - Edit\nSingle-Customer Users can only access own contacts.\n",
        "summary": "Creates a Contact",
        "tags": [
          "Contact"
        ],
        "operationId": "CreatesaContact",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Contact object that needs to be added",
            "schema": {
              "$ref": "#/definitions/ContactsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ContactsResponse3"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "name": "Boba Fett",
                "address1": "8653 Ivan Flat",
                "address2": "Apt. 436",
                "city": "Tuanside",
                "state": "Delaware",
                "zip": "02293",
                "email": "jarviscorwin@hanefeeney.io",
                "phone": "657.325.3258 x330",
                "mobile": "(133) 358-5295",
                "latitude": 67.92905002829,
                "longitude": 91.6028665875294,
                "customer_id": 1,
                "account_id": 1,
                "notes": "Talk Jabba. (Tell that to Jabba.)",
                "created_at": "2019-10-22T08:47:09.723Z",
                "updated_at": "2019-10-22T08:47:09.723Z",
                "vendor_id": null,
                "properties": {},
                "opt_out": false,
                "extension": null
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Requires permission: Customers - Edit",
            "schema": {
              "$ref": "#/definitions/ContactsResponse1"
            },
            "examples": {
              "application/json": {
                "error": "Not authorized. Please ask account admin to update your group permissions."
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Customer not found",
            "schema": {
              "$ref": "#/definitions/ContactsResponse5"
            },
            "examples": {
              "application/json": {
                "message": "Not found"
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ContactsResponse6"
            },
            "examples": {
              "application/json": {
                "record": {
                  "id": null,
                  "name": "Bad Email",
                  "address1": null,
                  "address2": null,
                  "city": null,
                  "state": null,
                  "zip": null,
                  "email": "xxx",
                  "phone": null,
                  "mobile": null,
                  "latitude": null,
                  "longitude": null,
                  "customer_id": 1,
                  "account_id": 1,
                  "notes": null,
                  "created_at": null,
                  "updated_at": null,
                  "vendor_id": null,
                  "properties": {},
                  "opt_out": false,
                  "extension": null,
                  "processed_phone": null,
                  "processed_mobile": null
                },
                "errors": "Email is not an email"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contacts/{id}": {
      "get": {
        "description": "Required permission: Customers - View Detail\nSingle-Customer Users can only access own contacts.\n",
        "summary": "Retrieves a Contact by ID",
        "tags": [
          "Contact"
        ],
        "operationId": "RetrievesaContactbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ContactsResponse8"
            },
            "headers": {}
          },
          "401": {
            "description": "Requires permission: Customers - View Detail",
            "schema": {
              "$ref": "#/definitions/ContactsResponse1"
            },
            "examples": {
              "application/json": {
                "error": "Not authorized. Please ask account admin to update your group permissions."
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Single-Customer User cannot view other customers' contacts",
            "schema": {
              "$ref": "#/definitions/ContactsResponse5"
            },
            "examples": {
              "application/json": {
                "message": "Not found"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Required permission: Customers - Edit\nSingle-Customer Users can only access own contacts.\n",
        "summary": "Updates an existing Contact",
        "tags": [
          "Contact"
        ],
        "operationId": "UpdatesanexistingContact",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Contact object that needs to be updated",
            "schema": {
              "$ref": "#/definitions/ContactsRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ContactsResponse3"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "name": "Boba Fett",
                "address1": "8653 Ivan Flat",
                "address2": "Apt. 436",
                "city": "Tuanside",
                "state": "Delaware",
                "zip": "02293",
                "email": "jarviscorwin@hanefeeney.io",
                "phone": "657.325.3258 x330",
                "mobile": "(133) 358-5295",
                "latitude": 67.92905002829,
                "longitude": 91.6028665875294,
                "customer_id": 1,
                "account_id": 1,
                "notes": "Talk Jabba. (Tell that to Jabba.)",
                "created_at": "2019-10-22T08:47:09.723Z",
                "updated_at": "2019-10-22T08:47:09.723Z",
                "vendor_id": null,
                "properties": {},
                "opt_out": false,
                "extension": null
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Requires permission: Customers - Edit",
            "schema": {
              "$ref": "#/definitions/ContactsResponse1"
            },
            "examples": {
              "application/json": {
                "error": "Not authorized. Please ask account admin to update your group permissions."
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Single-Customer User cannot view other customers' contacts",
            "schema": {
              "$ref": "#/definitions/ContactsResponse5"
            },
            "examples": {
              "application/json": {
                "message": "Not found"
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ContactsResponse6"
            },
            "examples": {
              "application/json": {
                "record": {
                  "id": 1,
                  "name": "Boba Fett",
                  "address1": "8653 Ivan Flat",
                  "address2": "Apt. 436",
                  "city": "Tuanside",
                  "state": "Delaware",
                  "zip": "02293",
                  "email": "jarviscorwin@hanefeeney.io",
                  "phone": "657.325.3258 x330",
                  "mobile": "(133) 358-5295",
                  "latitude": 67.92905002829,
                  "longitude": 91.6028665875294,
                  "customer_id": 1,
                  "account_id": 1,
                  "notes": "Talk Jabba. (Tell that to Jabba.)",
                  "created_at": "2019-10-22T08:47:09.723Z",
                  "updated_at": "2019-10-22T08:47:09.723Z",
                  "vendor_id": null,
                  "properties": {},
                  "opt_out": false,
                  "extension": null
                },
                "errors": "Customer can't be blank"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "Required permission: Customers - Edit\nSingle-Customer Users can only access own contacts.\n",
        "summary": "Deletes a Contact",
        "tags": [
          "Contact"
        ],
        "operationId": "DeletesaContact",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {}
          },
          "401": {
            "description": "Requires permission: Customers - Edit",
            "schema": {
              "$ref": "#/definitions/ContactsResponse1"
            },
            "examples": {
              "application/json": {
                "error": "Not authorized. Please ask account admin to update your group permissions."
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contracts": {
      "get": {
        "description": "Required permission: Contracts - List/Search\n",
        "summary": "Returns a paginated list of Contracts",
        "tags": [
          "Contract"
        ],
        "operationId": "ReturnsapaginatedlistofContracts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 50 results"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ContractsResponse"
            },
            "examples": {
              "application/json": {
                "contracts": [
                  {
                    "id": 1,
                    "account_id": 1,
                    "customer_id": 1,
                    "name": "Support Tier 1",
                    "contract_amount": "30k",
                    "start_date": "2019-10-23T00:00:00.000Z",
                    "end_date": "2020-10-22T00:00:00.000Z",
                    "primary_contact": null,
                    "description": "Contract Description",
                    "created_at": "2019-10-22T10:00:55.392Z",
                    "updated_at": "2019-10-22T10:00:55.392Z",
                    "status": "Opportunity",
                    "likelihood": 30,
                    "apply_to_all": false,
                    "sla_id": null
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_entries": 1,
                  "per_page": 50,
                  "page": 1
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Contracts - Edit\n",
        "summary": "Creates a Contract",
        "tags": [
          "Contract"
        ],
        "operationId": "CreatesaContract",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Contract object that needs to be added",
            "schema": {
              "$ref": "#/definitions/ContractsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ContractsResponse2"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "account_id": 1,
                "customer_id": 1,
                "name": "Support Tier 1",
                "contract_amount": "30k",
                "start_date": "2019-10-23T00:00:00.000Z",
                "end_date": "2020-10-22T00:00:00.000Z",
                "primary_contact": null,
                "description": "Contract Description",
                "created_at": "2019-10-22T10:00:55.392Z",
                "updated_at": "2019-10-22T10:00:55.392Z",
                "status": "Opportunity",
                "likelihood": 30,
                "apply_to_all": false,
                "sla_id": null
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ContractsResponse3"
            },
            "examples": {
              "application/json": {
                "record": {
                  "id": null,
                  "account_id": 1,
                  "customer_id": null,
                  "name": "No Customer",
                  "contract_amount": null,
                  "start_date": null,
                  "end_date": null,
                  "primary_contact": null,
                  "description": "No Customer",
                  "created_at": null,
                  "updated_at": null,
                  "status": "Opportunity",
                  "likelihood": 0,
                  "apply_to_all": false,
                  "sla_id": null
                },
                "errors": "Customer can't be blank"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contracts/{id}": {
      "get": {
        "description": "Required permission: Contracts - Edit\n",
        "summary": "Retrieves a Contract by ID",
        "tags": [
          "Contract"
        ],
        "operationId": "RetrievesaContractbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ContractsResponse2"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "account_id": 1,
                "customer_id": 1,
                "name": "Support Tier 1",
                "contract_amount": "30k",
                "start_date": "2019-10-23T00:00:00.000Z",
                "end_date": "2020-10-22T00:00:00.000Z",
                "primary_contact": null,
                "description": "Contract Description",
                "created_at": "2019-10-22T10:00:55.392Z",
                "updated_at": "2019-10-22T10:00:55.392Z",
                "status": "Opportunity",
                "likelihood": 30,
                "apply_to_all": false,
                "sla_id": null
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Required permission: Contracts - Edit\n",
        "summary": "Updates an existing Contract by ID",
        "tags": [
          "Contract"
        ],
        "operationId": "UpdatesanexistingContractbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Contract object that needs to be updated",
            "schema": {
              "$ref": "#/definitions/ContractsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ContractsResponse2"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "account_id": 1,
                "customer_id": 1,
                "name": "Support Tier 1",
                "contract_amount": "30k",
                "start_date": "2019-10-23T00:00:00.000Z",
                "end_date": "2020-10-22T00:00:00.000Z",
                "primary_contact": null,
                "description": "Contract Description",
                "created_at": "2019-10-22T10:00:55.392Z",
                "updated_at": "2019-10-22T10:00:55.392Z",
                "status": "Opportunity",
                "likelihood": 30,
                "apply_to_all": false,
                "sla_id": null
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ContractsResponse3"
            },
            "examples": {
              "application/json": {
                "record": {
                  "id": 1,
                  "account_id": 1,
                  "customer_id": 1,
                  "name": "Support Tier 1",
                  "contract_amount": "30k",
                  "start_date": "2019-10-23T00:00:00.000Z",
                  "end_date": "2020-10-22T00:00:00.000Z",
                  "primary_contact": null,
                  "description": "Contract Description",
                  "created_at": "2019-10-22T10:00:55.392Z",
                  "updated_at": "2019-10-22T10:00:55.392Z",
                  "status": "Opportunity",
                  "likelihood": 30,
                  "apply_to_all": false,
                  "sla_id": null
                },
                "errors": "Customer can't be blank"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "Required permission: Contracts - Delete\n",
        "summary": "Deletes a Contract by ID",
        "tags": [
          "Contract"
        ],
        "operationId": "DeletesaContractbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customers": {
      "get": {
        "description": "Required permission: Customers - List/Search\nSingle-Customer Users can only access own customer (self).\n",
        "summary": "Returns a paginated list of customers",
        "tags": [
          "Customer"
        ],
        "operationId": "Returnsapaginatedlistofcustomers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A customer field to order by. Examples \"firstname ASC\", \"city DESC\"."
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search query"
          },
          {
            "name": "firstname",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Any customers with a first name like the parameter"
          },
          {
            "name": "lastname",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Any customers with a last name like the parameter"
          },
          {
            "name": "business_name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Any customers with a business name like the parameter"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Any customers with ID included in the list"
          },
          {
            "name": "not_id",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Any customers with ID not included in the list"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "include_disabled",
            "in": "query",
            "required": false,
            "default": "False",
            "type": "string",
            "description": "Whether or not the returned list of customers includes disabled customers"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 25 results"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomersResponse"
            },
            "examples": {
              "application/json": {
                "customers": [
                  {
                    "id": 1,
                    "firstname": "Walkin",
                    "lastname": "Customer",
                    "fullname": "Walkin Customer",
                    "business_name": null,
                    "email": "walkin@somedomain.com",
                    "phone": "123",
                    "mobile": null,
                    "created_at": "2019-10-21T08:33:21.053Z",
                    "updated_at": "2019-10-21T08:33:21.053Z",
                    "pdf_url": null,
                    "address": null,
                    "address_2": null,
                    "city": null,
                    "state": null,
                    "zip": null,
                    "latitude": null,
                    "longitude": null,
                    "notes": null,
                    "get_sms": false,
                    "opt_out": false,
                    "disabled": false,
                    "no_email": true,
                    "location_name": null,
                    "location_id": null,
                    "properties": {},
                    "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=81lcr4ua1parftzvbgk9",
                    "tax_rate_id": null,
                    "notification_email": null,
                    "invoice_cc_emails": null,
                    "invoice_term_id": null,
                    "referred_by": null,
                    "ref_customer_id": null,
                    "business_and_full_name": "Walkin Customer",
                    "business_then_name": "Walkin Customer",
                    "contacts": []
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_entries": 1,
                  "per_page": 100,
                  "page": 1
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Customers - Create\n",
        "summary": "Creates a Customer",
        "tags": [
          "Customer"
        ],
        "operationId": "CreatesaCustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Customer1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomersResponse2"
            },
            "examples": {
              "application/json": {
                "customer": {
                  "id": 1,
                  "firstname": "Walkin",
                  "lastname": "Customer",
                  "fullname": "Walkin Customer",
                  "business_name": null,
                  "email": "walkin@somedomain.com",
                  "phone": "123",
                  "mobile": null,
                  "created_at": "2019-10-21T08:33:21.053Z",
                  "updated_at": "2019-10-21T08:33:21.053Z",
                  "pdf_url": null,
                  "address": null,
                  "address_2": null,
                  "city": null,
                  "state": null,
                  "zip": null,
                  "latitude": null,
                  "longitude": null,
                  "notes": null,
                  "get_sms": false,
                  "opt_out": false,
                  "disabled": false,
                  "no_email": true,
                  "location_name": null,
                  "location_id": null,
                  "properties": {},
                  "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=81lcr4ua1parftzvbgk9",
                  "tax_rate_id": null,
                  "notification_email": null,
                  "invoice_cc_emails": null,
                  "invoice_term_id": null,
                  "referred_by": null,
                  "ref_customer_id": null,
                  "business_and_full_name": "Walkin Customer",
                  "business_then_name": "Walkin Customer",
                  "contacts": []
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/CustomersResponse3"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Email is not an email",
                  "Email Only able to parse up to \"it is not an email\""
                ],
                "params": {
                  "business_name": "Real Business",
                  "firstname": "First",
                  "lastname": "Last",
                  "email": "it is not an email"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customers/{id}": {
      "get": {
        "description": "Required permission: Customers - View Detail\nSingle-Customer Users can only access own customer (self).\n",
        "summary": "Retrieves a Customer by ID",
        "tags": [
          "Customer"
        ],
        "operationId": "RetrievesaCustomerbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomersResponse2"
            },
            "examples": {
              "application/json": {
                "customer": {
                  "id": 1,
                  "firstname": "Walkin",
                  "lastname": "Customer",
                  "fullname": "Walkin Customer",
                  "business_name": null,
                  "email": "walkin@somedomain.com",
                  "phone": "123",
                  "mobile": null,
                  "created_at": "2019-10-21T08:33:21.053Z",
                  "updated_at": "2019-10-21T08:33:21.053Z",
                  "pdf_url": null,
                  "address": null,
                  "address_2": null,
                  "city": null,
                  "state": null,
                  "zip": null,
                  "latitude": null,
                  "longitude": null,
                  "notes": null,
                  "get_sms": false,
                  "opt_out": false,
                  "disabled": false,
                  "no_email": true,
                  "location_name": null,
                  "location_id": null,
                  "properties": {},
                  "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=81lcr4ua1parftzvbgk9",
                  "tax_rate_id": null,
                  "notification_email": null,
                  "invoice_cc_emails": null,
                  "invoice_term_id": null,
                  "referred_by": null,
                  "ref_customer_id": null,
                  "business_and_full_name": "Walkin Customer",
                  "business_then_name": "Walkin Customer",
                  "contacts": []
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Required permission: Customers - Edit\nSingle-Customer Users can only access own customer (self).\n",
        "summary": "Updates an existing Customer by ID",
        "tags": [
          "Customer"
        ],
        "operationId": "UpdatesanexistingCustomerbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Customer1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomersResponse2"
            },
            "examples": {
              "application/json": {
                "customer": {
                  "id": 1,
                  "firstname": "Walkin",
                  "lastname": "Customer",
                  "fullname": "Walkin Customer",
                  "business_name": null,
                  "email": "walkin@somedomain.com",
                  "phone": "123",
                  "mobile": null,
                  "created_at": "2019-10-21T08:33:21.053Z",
                  "updated_at": "2019-10-21T08:33:21.053Z",
                  "pdf_url": null,
                  "address": null,
                  "address_2": null,
                  "city": null,
                  "state": null,
                  "zip": null,
                  "latitude": null,
                  "longitude": null,
                  "notes": null,
                  "get_sms": false,
                  "opt_out": false,
                  "disabled": false,
                  "no_email": true,
                  "location_name": null,
                  "location_id": null,
                  "properties": {},
                  "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=81lcr4ua1parftzvbgk9",
                  "tax_rate_id": null,
                  "notification_email": null,
                  "invoice_cc_emails": null,
                  "invoice_term_id": null,
                  "referred_by": null,
                  "ref_customer_id": null,
                  "business_and_full_name": "Walkin Customer",
                  "business_then_name": "Walkin Customer",
                  "contacts": []
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/CustomersResponse7"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Email is not an email",
                  "Email Only able to parse up to \"not an email\""
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "Required permission: Customers - Delete\n",
        "summary": "Deletes a Customer by ID",
        "tags": [
          "Customer"
        ],
        "operationId": "DeletesaCustomerbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomersResponse8"
            },
            "examples": {
              "application/json": {
                "message": "Customer was deleted from the system."
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customers/latest": {
      "get": {
        "description": "Required permission: Customers - Edit\nSingle-Customer Users can only access own customer (self).\n",
        "summary": "Returns latest Customer",
        "tags": [
          "Customer"
        ],
        "operationId": "ReturnslatestCustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomersLatestResponse"
            },
            "examples": {
              "application/json": {
                "customer": {
                  "id": 1,
                  "firstname": "Walkin",
                  "lastname": "Customer",
                  "fullname": "Walkin Customer",
                  "business_name": null,
                  "email": "walkin@somedomain.com",
                  "phone": "123",
                  "mobile": null,
                  "created_at": "2019-10-21T08:33:21.053Z",
                  "updated_at": "2019-10-21T08:33:21.053Z",
                  "pdf_url": null,
                  "address": null,
                  "address_2": null,
                  "city": null,
                  "state": null,
                  "zip": null,
                  "latitude": null,
                  "longitude": null,
                  "notes": null,
                  "get_sms": false,
                  "opt_out": false,
                  "disabled": false,
                  "no_email": true,
                  "location_name": null,
                  "location_id": null,
                  "properties": {},
                  "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=81lcr4ua1parftzvbgk9",
                  "tax_rate_id": null,
                  "notification_email": null,
                  "invoice_cc_emails": null,
                  "invoice_term_id": null,
                  "referred_by": null,
                  "ref_customer_id": null,
                  "business_and_full_name": "Walkin Customer",
                  "business_then_name": "Walkin Customer",
                  "contacts": []
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customers/autocomplete": {
      "get": {
        "description": "Returns a paginated list of customers for autocomplete query",
        "summary": "Returns a paginated list of customers for autocomplete query",
        "tags": [
          "Customer"
        ],
        "operationId": "Returnsapaginatedlistofcustomersforautocompletequery",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomersAutocompleteResponse"
            },
            "examples": {
              "application/json": {
                "customers": [
                  {
                    "id": 1,
                    "firstname": "Walkin",
                    "lastname": "Customer",
                    "fullname": "Walkin Customer",
                    "business_name": null,
                    "email": "walkin@somedomain.com",
                    "phone": "123",
                    "mobile": null,
                    "created_at": "2019-10-21T08:33:21.053Z",
                    "updated_at": "2019-10-21T08:33:21.053Z",
                    "pdf_url": null,
                    "address": null,
                    "address_2": null,
                    "city": null,
                    "state": null,
                    "zip": null,
                    "latitude": null,
                    "longitude": null,
                    "notes": null,
                    "get_sms": false,
                    "opt_out": false,
                    "disabled": false,
                    "no_email": true,
                    "location_name": null,
                    "location_id": null,
                    "properties": {},
                    "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=81lcr4ua1parftzvbgk9",
                    "tax_rate_id": null,
                    "notification_email": null,
                    "invoice_cc_emails": null,
                    "invoice_term_id": null,
                    "referred_by": null,
                    "ref_customer_id": null,
                    "business_and_full_name": "Walkin Customer",
                    "business_then_name": "Walkin Customer",
                    "contacts": []
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/estimates": {
      "get": {
        "description": "Required permission: Estimates - List/Search\n",
        "summary": "Returns a paginated list of Estimates",
        "tags": [
          "Estimate"
        ],
        "operationId": "ReturnsapaginatedlistofEstimates",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mine",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Returns estimates that belong to the current user"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Returns estimates with a given status. Possible values are 'approved' and 'declined'."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 50 results"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/EstimatesResponse"
            },
            "examples": {
              "application/json": {
                "estimates": [
                  {
                    "id": 1,
                    "customer_id": 1,
                    "customer_business_then_name": "Walkin Customer",
                    "number": "MyString",
                    "status": "Fresh",
                    "created_at": "2019-10-22T11:45:33.866Z",
                    "updated_at": "2019-10-22T11:45:33.866Z",
                    "date": "2013-10-08T14:16:10.000Z",
                    "subtotal": "9.99",
                    "total": "9.99",
                    "tax": "9.99",
                    "ticket_id": null,
                    "pdf_url": null,
                    "location_id": null,
                    "invoice_id": null,
                    "employee": "MyString"
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "page": 1
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Estimates - Create\n",
        "summary": "Creates an Estimate",
        "tags": [
          "Estimate"
        ],
        "operationId": "CreatesanEstimate",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EstimatesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/EstimatesResponse2"
            },
            "examples": {
              "application/json": {
                "estimate": {
                  "id": 1,
                  "customer_id": 1,
                  "customer_business_then_name": "Walkin Customer",
                  "number": "MyString",
                  "status": "Fresh",
                  "created_at": "2019-10-22T11:45:33.866Z",
                  "updated_at": "2019-10-22T11:45:33.866Z",
                  "date": "2013-10-08T14:16:10.000Z",
                  "subtotal": "9.99",
                  "total": "9.99",
                  "tax": "9.99",
                  "ticket_id": null,
                  "pdf_url": null,
                  "location_id": null,
                  "invoice_id": null,
                  "employee": "MyString"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/EstimatesResponse3"
            },
            "examples": {
              "application/json": {
                "customer_id": [
                  "can't be blank"
                ],
                "date": [
                  "can't be blank"
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/estimates/{id}": {
      "get": {
        "description": "Required permission: Estimates - View Details\n",
        "summary": "Retrieves an Estimate by ID or number",
        "tags": [
          "Estimate"
        ],
        "operationId": "RetrievesanEstimatebyIDornumber",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Estimate ID"
          },
          {
            "name": "number",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Estimate number is used when the server cannot find an Estimate by ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/EstimatesResponse2"
            },
            "examples": {
              "application/json": {
                "estimate": {
                  "id": 1,
                  "customer_id": 1,
                  "customer_business_then_name": "Walkin Customer",
                  "number": "MyString",
                  "status": "Fresh",
                  "created_at": "2019-10-22T11:45:33.866Z",
                  "updated_at": "2019-10-22T11:45:33.866Z",
                  "date": "2013-10-08T14:16:10.000Z",
                  "subtotal": "9.99",
                  "total": "9.99",
                  "tax": "9.99",
                  "ticket_id": null,
                  "pdf_url": null,
                  "location_id": null,
                  "invoice_id": null,
                  "employee": "MyString"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Required permission: Estimates - Edit\n",
        "summary": "Updates an existing Estimate by ID",
        "tags": [
          "Estimate"
        ],
        "operationId": "UpdatesanexistingEstimatebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EstimatesRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/EstimatesResponse2"
            },
            "examples": {
              "application/json": {
                "estimate": {
                  "id": 1,
                  "customer_id": 1,
                  "customer_business_then_name": "Walkin Customer",
                  "number": "MyString",
                  "status": "Fresh",
                  "created_at": "2019-10-22T11:45:33.866Z",
                  "updated_at": "2019-10-22T11:45:33.866Z",
                  "date": "2013-10-08T14:16:10.000Z",
                  "subtotal": "9.99",
                  "total": "9.99",
                  "tax": "9.99",
                  "ticket_id": null,
                  "pdf_url": null,
                  "location_id": null,
                  "invoice_id": null,
                  "employee": "MyString"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/EstimatesResponse7"
            },
            "examples": {
              "application/json": {
                "date": [
                  "can't be blank"
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "Required permission: Estimates - Delete\n",
        "summary": "Deletes an Estimate by ID",
        "tags": [
          "Estimate"
        ],
        "operationId": "DeletesanEstimatebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/EstimatesResponse8"
            },
            "examples": {
              "application/json": {
                "message": "1: We deleted # 123"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/estimates/{id}/print": {
      "post": {
        "description": "Required permission: Estimates - View Details\n",
        "summary": "Queues a print job for an Estimate",
        "tags": [
          "Estimate"
        ],
        "operationId": "QueuesaprintjobforanEstimate",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/EstimatesPrintResponse"
            },
            "examples": {
              "application/json": {
                "message": "We queued up a print job"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/estimates/{id}/email": {
      "post": {
        "description": "Required permission: Estimates - View Details\n",
        "summary": "Sends an Estimate to a Customer",
        "tags": [
          "Estimate"
        ],
        "operationId": "SendsanEstimatetoaCustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/EstimatesEmailResponse"
            },
            "examples": {
              "application/json": {
                "message": "We queued up a print job"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/estimates/{id}/line_items": {
      "post": {
        "description": "Required permission: Estimates - Edit\n",
        "summary": "Adds a Line Item to an Estimate",
        "tags": [
          "Estimate"
        ],
        "operationId": "AddsaLineItemtoanEstimate",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LineItem1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/EstimatesLineItemsResponse"
            },
            "examples": {
              "application/json": {
                "estimate": {
                  "account_id": 1,
                  "id": 11,
                  "updated_at": "2019-10-25T11:31:02.793Z",
                  "customer_id": 1,
                  "employee": "MyString",
                  "payment_type": "MyString",
                  "number": "MyString",
                  "labor": "9.99",
                  "total": "0.0",
                  "subtotal": "0.0",
                  "tax": "0.0",
                  "paid": false,
                  "date": "2013-10-08T14:16:10.000Z",
                  "status_date": "2013-10-08T14:16:10.000Z",
                  "status_changed_by": null,
                  "notax": false,
                  "ticket_id": null,
                  "note": "MyText",
                  "category": "MyString",
                  "hardwarecost": "0.0",
                  "location_id": null,
                  "pdf": {
                    "url": null
                  },
                  "signature_data": "MyText",
                  "signature_name": "MyString",
                  "created_at": "2019-10-25T11:31:02.688Z",
                  "invoice_id": null,
                  "contact_id": null,
                  "tax_rate_id": 1,
                  "converted_at": null,
                  "last_emailed": null,
                  "status": "Fresh",
                  "disabled": false,
                  "signature_date": null,
                  "multi_tax": null,
                  "name": null
                },
                "line_item": {
                  "id": 1,
                  "created_at": "2019-10-25T11:31:02.763Z",
                  "updated_at": "2019-10-25T11:31:02.763Z",
                  "invoice_id": null,
                  "item": "Manual Item",
                  "name": "Item Name",
                  "cost": "0.0",
                  "price": "0.0",
                  "quantity": "1.0",
                  "product_id": null,
                  "taxable": true,
                  "discount_percent": null,
                  "position": 1,
                  "invoice_bundle_id": null,
                  "discount_dollars": null
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/EstimatesLineItemsResponse1"
            },
            "examples": {
              "application/json": {
                "errors": "validation error: Item can't be blank"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/estimates/{id}/convert_to_invoice": {
      "post": {
        "description": "Required permissions: \"Estimates - View Details\" and \"Invoices - Create\"\n",
        "summary": "Convert an Estimate to an Invoice",
        "tags": [
          "Estimate"
        ],
        "operationId": "ConvertanEstimatetoanInvoice",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/EstimatesConvertToInvoiceResponse"
            },
            "examples": {
              "application/json": {
                "invoice": {
                  "id": 1,
                  "customer_id": 1,
                  "customer_business_then_name": "Walkin Customer",
                  "number": "1001",
                  "created_at": "2019-10-25T11:53:10.575Z",
                  "updated_at": "2019-10-25T11:53:10.609Z",
                  "date": "2019-10-25T00:00:00.000Z",
                  "due_date": "2019-10-25T00:00:00.000Z",
                  "subtotal": "0.0",
                  "total": "0.0",
                  "tax": "0.0",
                  "verified_paid": false,
                  "tech_marked_paid": false,
                  "ticket_id": null,
                  "pdf_url": null,
                  "is_paid": false,
                  "location_id": null,
                  "po_number": null,
                  "contact_id": null,
                  "note": null,
                  "hardwarecost": "0.0"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/EstimatesConvertToInvoiceResponse1"
            },
            "examples": {
              "application/json": {
                "error": "Validation failed: Item can't be blank, Name can't be blank"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/estimates/{id}/line_items/{line_item_id}": {
      "put": {
        "description": "Required permission: Estimates - Edit\n",
        "summary": "Updates a Line Item",
        "tags": [
          "Estimate"
        ],
        "operationId": "UpdatesaLineItem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "line_item_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LineItem1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/EstimatesLineItemsResponse2"
            },
            "examples": {
              "application/json": {
                "line_item": {
                  "id": 3,
                  "created_at": "2019-10-25T12:43:19.817Z",
                  "updated_at": "2019-10-25T12:43:19.839Z",
                  "invoice_id": null,
                  "item": "New Updated Item",
                  "name": "Some big thingy",
                  "cost": "10.0",
                  "price": "64.99",
                  "quantity": "1.0",
                  "product_id": null,
                  "taxable": true,
                  "discount_percent": null,
                  "position": 1,
                  "invoice_bundle_id": null,
                  "discount_dollars": null
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/EstimatesLineItemsResponse3"
            },
            "examples": {
              "application/json": {
                "item": [
                  "can't be blank"
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "Required permission: Estimates - Edit\n",
        "summary": "Deletes a Line Item",
        "tags": [
          "Estimate"
        ],
        "operationId": "DeletesaLineItem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "line_item_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/EstimatesLineItemsResponse4"
            },
            "examples": {
              "application/json": {
                "estimate": {
                  "id": 1,
                  "customer_id": 1,
                  "customer_business_then_name": "Walkin Customer",
                  "number": "MyString",
                  "status": "Fresh",
                  "created_at": "2019-10-22T11:45:33.866Z",
                  "updated_at": "2019-10-22T11:45:33.866Z",
                  "date": "2013-10-08T14:16:10.000Z",
                  "subtotal": "9.99",
                  "total": "9.99",
                  "tax": "9.99",
                  "ticket_id": null,
                  "pdf_url": null,
                  "location_id": null,
                  "invoice_id": null,
                  "employee": "MyString"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/invoices": {
      "get": {
        "description": "Required permission: Invoices - List/Search\n",
        "summary": "Returns a paginated list of Invoices",
        "tags": [
          "Invoice"
        ],
        "operationId": "ReturnsapaginatedlistofInvoices",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "paid",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Whether or not the returned list of invoices has been marked as paid"
          },
          {
            "name": "unpaid",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Whether or not the returned list of invoices has been marked as unpaid"
          },
          {
            "name": "ticket_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Any invoices attached to a Ticket ID"
          },
          {
            "name": "since_updated_at",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Any invoices updated since a date"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 25 results"
          }
        ],
        "responses": {
          "200": {
            "description": "Invoices found",
            "schema": {
              "$ref": "#/definitions/InvoicesResponse"
            },
            "examples": {
              "application/json": {
                "invoices": [
                  {
                    "id": 6,
                    "customer_id": 2,
                    "customer_business_then_name": "Wonk Donk",
                    "number": "4444",
                    "created_at": "2019-11-06T08:24:20.821Z",
                    "updated_at": "2019-11-06T08:24:20.821Z",
                    "date": "2019-11-06T00:00:00.000Z",
                    "due_date": "2019-11-06T00:00:00.000Z",
                    "subtotal": "0.0",
                    "total": "0.0",
                    "tax": "0.0",
                    "verified_paid": false,
                    "tech_marked_paid": false,
                    "ticket_id": 1,
                    "pdf_url": null,
                    "is_paid": false,
                    "location_id": null,
                    "po_number": null,
                    "contact_id": null,
                    "note": null,
                    "hardwarecost": null,
                    "user_id": null
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "page": 1
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Invoices - Create\n",
        "summary": "Creates an Invoice",
        "tags": [
          "Invoice"
        ],
        "operationId": "CreatesanInvoice",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Invoice object that needs to be added",
            "schema": {
              "$ref": "#/definitions/InvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice created",
            "schema": {
              "$ref": "#/definitions/InvoicesResponse2"
            },
            "examples": {
              "application/json": {
                "invoice": {
                  "id": 1,
                  "customer_id": 1,
                  "customer_business_then_name": "Walkin Customer",
                  "number": "9999",
                  "created_at": "2019-06-19T07:45:43.345Z",
                  "updated_at": "2019-06-19T07:45:43.345Z",
                  "date": "2019-06-19T00:00:00.000Z",
                  "due_date": "2019-06-19T00:00:00.000Z",
                  "subtotal": "0.0",
                  "total": "0.0",
                  "tax": "0.0",
                  "verified_paid": false,
                  "tech_marked_paid": false,
                  "ticket_id": null,
                  "pdf_url": null,
                  "is_paid": false,
                  "location_id": null,
                  "po_number": null,
                  "contact_id": null,
                  "note": null,
                  "hardwarecost": null,
                  "user_id": 1
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/invoices/{id}": {
      "get": {
        "description": "Required permission: Invoices - View Details\n",
        "summary": "Retrieves an Invoice by ID or Number",
        "tags": [
          "Invoice"
        ],
        "operationId": "RetrievesanInvoicebyIDorNumber",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "ID or Number of Invoice to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice found",
            "schema": {
              "$ref": "#/definitions/InvoicesResponse4"
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "This updates an existing Invoice, all parameters overwrite existing params",
        "summary": "Updates an existing invoice by ID",
        "tags": [
          "Invoice"
        ],
        "operationId": "UpdatesanexistinginvoicebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "ID of Invoice to update"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Invoice properties to update",
            "schema": {
              "$ref": "#/definitions/InvoicesRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice Updated",
            "schema": {
              "$ref": "#/definitions/InvoicesResponse2"
            },
            "examples": {
              "application/json": {
                "invoice": {
                  "id": 3,
                  "customer_id": 2,
                  "customer_business_then_name": "Wonk Donk",
                  "number": "1233",
                  "created_at": "2019-07-01T21:37:26.051Z",
                  "updated_at": "2019-07-01T21:37:26.204Z",
                  "date": "2019-07-01T00:00:00.000Z",
                  "due_date": "2019-07-01T00:00:00.000Z",
                  "subtotal": "0.0",
                  "total": "0.0",
                  "tax": "0.0",
                  "verified_paid": false,
                  "tech_marked_paid": false,
                  "ticket_id": null,
                  "pdf_url": null,
                  "is_paid": false,
                  "location_id": null,
                  "po_number": null,
                  "contact_id": null,
                  "note": null,
                  "hardwarecost": "0.0"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "Returns 200 even if the delete fails",
        "summary": "Deletes an invoice by ID",
        "tags": [
          "Invoice"
        ],
        "operationId": "DeletesaninvoicebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "ID of Invoice to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/invoices/{id}/ticket": {
      "get": {
        "description": "Required permissions: \"Invoices - View Details\" and \"Tickets - View Details\"\n",
        "summary": "Returns the associated ticket for an invoice",
        "tags": [
          "Invoice"
        ],
        "operationId": "Returnstheassociatedticketforaninvoice",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "ID of Invoice whose Ticket will be returned"
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice's ticket found",
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/invoices/{id}/print": {
      "post": {
        "description": "Required permission: Invoices - View Details\n",
        "summary": "Queues a print job for an invoice",
        "tags": [
          "Invoice"
        ],
        "operationId": "Queuesaprintjobforaninvoice",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The ID of the Invoice to print"
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice print job queued",
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/invoices/{id}/email": {
      "post": {
        "description": "Required permission: Invoices - View Details\n",
        "summary": "Sends invoice to customer",
        "tags": [
          "Invoice"
        ],
        "operationId": "Sendsinvoicetocustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "ID of Invoice which will be emailed"
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice email sent",
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/invoices/{id}/line_items/{line_item_id}": {
      "put": {
        "description": "This updates an existing Invoice's line item, all parameters overwrite existing params",
        "summary": "Updates an a line item of an invoice by ID",
        "tags": [
          "Invoice/Line item"
        ],
        "operationId": "UpdatesanalineitemofaninvoicebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "ID of Invoice to update"
          },
          {
            "name": "line_item_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "ID of line item to update"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "ID of line item to update",
            "schema": {
              "$ref": "#/definitions/LineItem21"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice is already paid",
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "This deletes an existing Invoice's line item",
        "summary": "Deletes an a line item of an invoice by ID",
        "tags": [
          "Invoice/Line item"
        ],
        "operationId": "DeletesanalineitemofaninvoicebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "ID of Invoice to delete"
          },
          {
            "name": "line_item_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "ID of line item to update"
          }
        ],
        "responses": {
          "200": {
            "description": "Line item deleted",
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/invoices/{id}/line_items": {
      "post": {
        "description": "Required permission: Invoices - Edit\n",
        "summary": "Creates a new line item",
        "tags": [
          "Invoice/Line item"
        ],
        "operationId": "Createsanewlineitem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "ID of Invoice to update"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "ID of line item to update",
            "schema": {
              "$ref": "#/definitions/LineItem21"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Line item created",
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/items": {
      "get": {
        "description": "Required permission: Parts Orders - List/Search\n",
        "summary": "Returns a paginated list of Part Orders",
        "tags": [
          "Item"
        ],
        "operationId": "ReturnsapaginatedlistofPartOrders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "completed",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Returns only completed part orders"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search query"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 50 results"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ItemsResponse"
            },
            "examples": {
              "application/json": {
                "items": [
                  {
                    "id": 1,
                    "requestedon": "2019-09-28T13:18:39.513Z",
                    "ticketnum": "123",
                    "parturl": "https://amazon.com/",
                    "shipping": null,
                    "deststore": null,
                    "orderedby": null,
                    "orderedon": null,
                    "trackingnum": "12345",
                    "receivedon": null,
                    "price": "0.0",
                    "account_id": 1,
                    "description": null,
                    "destination_location_id": null,
                    "from_location_id": null,
                    "from_name": null,
                    "received_at": null,
                    "user_id": null,
                    "created_at": "2019-10-28T14:18:39.515Z",
                    "updated_at": "2019-10-28T14:18:39.515Z",
                    "due_at": null,
                    "ticket_id": null,
                    "logistic_state": null,
                    "product_id": null,
                    "quantity": null,
                    "round_trip": false,
                    "trip_leg": null,
                    "retail_cents": null,
                    "taxable": true,
                    "converted": false,
                    "notes": null,
                    "refurb_id": null,
                    "invoice_id": null
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "page": 1
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/leads": {
      "get": {
        "description": "Required permission: Leads - List/Search\n",
        "summary": "Returns a paginated list of Leads",
        "tags": [
          "Lead"
        ],
        "operationId": "ReturnsapaginatedlistofLeads",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of statuses. Possible values are \"New\", \"Lead\", \"First Contact\", \"Opportunity\", \"Prospect\", \"Waiting on Client\", \"In Negotiation\", \"Pending\", \"Won\", \"Lost\"."
          },
          {
            "name": "status_list",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Comma separated list of statuses."
          },
          {
            "name": "users",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Array of user IDs."
          },
          {
            "name": "mailbox_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Array of Mailbox IDs"
          },
          {
            "name": "has_ticket",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search query"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 25 results"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/LeadsResponse"
            },
            "examples": {
              "application/json": {
                "leads": [
                  {
                    "id": 1,
                    "first_name": "Susy",
                    "last_name": "Ratke",
                    "email": "walkin@somedomain.com",
                    "phone": "",
                    "mobile": "",
                    "created_at": "2019-10-23T06:49:14.560Z",
                    "updated_at": "2019-10-23T06:49:14.560Z",
                    "address": "",
                    "city": "",
                    "state": "",
                    "zip": "",
                    "ticket_subject": null,
                    "ticket_description": null,
                    "ticket_problem_type": null,
                    "ticket_id": null,
                    "customer_id": 1,
                    "contact_id": null,
                    "mailbox_id": null,
                    "mailbox_name": null,
                    "business_then_name": "Klocko-Stracke",
                    "has_attachments": false,
                    "message_read": false,
                    "status": "New",
                    "user_id": null,
                    "location_id": null
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_entries": 1,
                  "per_page": 25,
                  "page": 1
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: None\n",
        "summary": "Creates a Lead",
        "tags": [
          "Lead"
        ],
        "operationId": "CreatesaLead",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Lead object that needs to be added",
            "schema": {
              "$ref": "#/definitions/LeadsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/LeadsResponse2"
            },
            "examples": {
              "application/json": {
                "lead": {
                  "id": 1,
                  "first_name": "Susy",
                  "last_name": "Ratke",
                  "email": "walkin@somedomain.com",
                  "phone": "",
                  "mobile": "",
                  "created_at": "2019-10-23T06:49:14.560Z",
                  "updated_at": "2019-10-23T06:49:14.560Z",
                  "address": "",
                  "city": "",
                  "state": "",
                  "zip": "",
                  "ticket_subject": null,
                  "ticket_description": null,
                  "ticket_problem_type": null,
                  "ticket_id": null,
                  "customer_id": 1,
                  "contact_id": null,
                  "mailbox_id": null,
                  "mailbox_name": null,
                  "business_then_name": "Klocko-Stracke",
                  "has_attachments": false,
                  "message_read": false,
                  "status": "New",
                  "user_id": null,
                  "location_id": null
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/LeadsResponse3"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Ticket description can't be blank"
                ],
                "params": {
                  "from_check_in": true
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/leads/{id}": {
      "get": {
        "description": "Required permission: Leads - List/Search\n",
        "summary": "Retrieves a Lead by ID",
        "tags": [
          "Lead"
        ],
        "operationId": "RetrievesaLeadbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/LeadsResponse2"
            },
            "examples": {
              "application/json": {
                "lead": {
                  "id": 1,
                  "first_name": "Susy",
                  "last_name": "Ratke",
                  "email": "walkin@somedomain.com",
                  "phone": "",
                  "mobile": "",
                  "created_at": "2019-10-23T06:49:14.560Z",
                  "updated_at": "2019-10-23T06:49:14.560Z",
                  "address": "",
                  "city": "",
                  "state": "",
                  "zip": "",
                  "ticket_subject": null,
                  "ticket_description": null,
                  "ticket_problem_type": null,
                  "ticket_id": null,
                  "customer_id": 1,
                  "contact_id": null,
                  "mailbox_id": null,
                  "mailbox_name": null,
                  "business_then_name": "Klocko-Stracke",
                  "has_attachments": false,
                  "message_read": false,
                  "status": "New",
                  "user_id": null,
                  "location_id": null
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Required permission: None\n",
        "summary": "Updates an existing Lead by ID",
        "tags": [
          "Lead"
        ],
        "operationId": "UpdatesanexistingLeadbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Lead object that needs to be updated",
            "schema": {
              "$ref": "#/definitions/LeadsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/LeadsResponse2"
            },
            "examples": {
              "application/json": {
                "lead": {
                  "id": 1,
                  "first_name": "Susy",
                  "last_name": "Ratke",
                  "email": "walkin@somedomain.com",
                  "phone": "",
                  "mobile": "",
                  "created_at": "2019-10-23T06:49:14.560Z",
                  "updated_at": "2019-10-23T06:49:14.560Z",
                  "address": "",
                  "city": "",
                  "state": "",
                  "zip": "",
                  "ticket_subject": null,
                  "ticket_description": null,
                  "ticket_problem_type": null,
                  "ticket_id": null,
                  "customer_id": 1,
                  "contact_id": null,
                  "mailbox_id": null,
                  "mailbox_name": null,
                  "business_then_name": "Klocko-Stracke",
                  "has_attachments": false,
                  "message_read": false,
                  "status": "New",
                  "user_id": null,
                  "location_id": null
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/LeadsResponse3"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Ticket description can't be blank"
                ],
                "params": {
                  "ticket_description": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/line_items": {
      "get": {
        "description": "Required permission: Global Admin\n",
        "summary": "Returns a paginated list of Line Items",
        "tags": [
          "Line Item"
        ],
        "operationId": "ReturnsapaginatedlistofLineItems",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns Line Items that belong to an Invoice ID"
          },
          {
            "name": "estimate_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns Line Items that belong to an Estimate ID"
          },
          {
            "name": "invoice_id_not_null",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Returns Line Items that belong to any Invoice"
          },
          {
            "name": "estimate_id_not_null",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Returns Line Items that belong to any Estimate"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/LineItemsResponse"
            },
            "examples": {
              "application/json": {
                "line_items": [
                  {
                    "id": 1,
                    "created_at": "2019-10-28T14:38:47.864Z",
                    "updated_at": "2019-10-28T14:38:47.864Z",
                    "invoice_id": 1,
                    "item": "Test Item",
                    "name": "Some big thingy",
                    "cost": "10.0",
                    "price": "64.99",
                    "quantity": "1.0",
                    "product_id": null,
                    "taxable": true,
                    "discount_percent": null,
                    "position": 1,
                    "invoice_bundle_id": null,
                    "discount_dollars": null
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_entries": 1,
                  "per_page": 100,
                  "page": 1
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/new_ticket_forms": {
      "get": {
        "description": "Required permission: Ticket Workflows - Manage\n",
        "summary": "Returns a paginated list of Ticket Forms",
        "tags": [
          "New Ticket Form"
        ],
        "operationId": "ReturnsapaginatedlistofTicketForms",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/NewTicketFormsResponse"
            },
            "examples": {
              "application/json": {
                "new_ticket_forms": [
                  {
                    "id": 1,
                    "name": "Phone Repair",
                    "default": false,
                    "disabled": false,
                    "data": {
                      "customer_details": {
                        "fields": {
                          "firstname": "require",
                          "lastname": "require",
                          "business_name": "show",
                          "email": "show",
                          "phone": "show",
                          "address": "hide",
                          "referred_by": "show",
                          "tax_rate_id": "hide",
                          "get_sms": "hide",
                          "opt_out": "hide",
                          "no_email": "hide",
                          "send_portal_invitation": "hide",
                          "notification_email": "hide",
                          "invoice_cc_emails": "hide",
                          "invoice_term_id": "hide",
                          "custom_fields": "show"
                        },
                        "defaults": {
                          "placeholder": ""
                        },
                        "position": "1"
                      },
                      "ticket_details": {
                        "fields": {
                          "subject": "require",
                          "description": "require",
                          "user_id": "show",
                          "priority": "hide",
                          "due_date": "hide",
                          "problem_type": "require",
                          "notify_emails": "hide",
                          "category": "hide",
                          "address_id": "hide",
                          "contract_id": "hide",
                          "sla_id": "hide",
                          "ticket_type_id": "show",
                          "do_not_email": "show",
                          "isapproved": "hide",
                          "pre_diagnosed": "hide"
                        },
                        "defaults": {
                          "placeholder": "",
                          "isapproved": "true",
                          "pre_diagnosed": "true"
                        },
                        "disabled": [
                          "subject",
                          "problem_type"
                        ],
                        "position": "2"
                      },
                      "worksheets": {
                        "position": "3"
                      },
                      "related_assets": {
                        "position": "4"
                      }
                    }
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/new_ticket_forms/{id}": {
      "get": {
        "description": "Required permission: Tickets - Create\n",
        "summary": "Retrieves a Ticket Form",
        "tags": [
          "New Ticket Form"
        ],
        "operationId": "RetrievesaTicketForm",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/NewTicketFormsResponse2"
            },
            "examples": {
              "application/json": {
                "new_ticket_form": {
                  "id": 1,
                  "name": "Phone Repair",
                  "default": false,
                  "disabled": false,
                  "data": {
                    "customer_details": {
                      "fields": {
                        "firstname": "require",
                        "lastname": "require",
                        "business_name": "show",
                        "email": "show",
                        "phone": "show",
                        "address": "hide",
                        "referred_by": "show",
                        "tax_rate_id": "hide",
                        "get_sms": "hide",
                        "opt_out": "hide",
                        "no_email": "hide",
                        "send_portal_invitation": "hide",
                        "notification_email": "hide",
                        "invoice_cc_emails": "hide",
                        "invoice_term_id": "hide",
                        "custom_fields": "show"
                      },
                      "defaults": {
                        "placeholder": ""
                      },
                      "position": "1"
                    },
                    "ticket_details": {
                      "fields": {
                        "subject": "require",
                        "description": "require",
                        "user_id": "show",
                        "priority": "hide",
                        "due_date": "hide",
                        "problem_type": "require",
                        "notify_emails": "hide",
                        "category": "hide",
                        "address_id": "hide",
                        "contract_id": "hide",
                        "sla_id": "hide",
                        "ticket_type_id": "show",
                        "do_not_email": "show",
                        "isapproved": "hide",
                        "pre_diagnosed": "hide"
                      },
                      "defaults": {
                        "placeholder": "",
                        "isapproved": "true",
                        "pre_diagnosed": "true"
                      },
                      "disabled": [
                        "subject",
                        "problem_type"
                      ],
                      "position": "2"
                    },
                    "worksheets": {
                      "position": "3"
                    },
                    "related_assets": {
                      "position": "4"
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/new_ticket_forms/{id}/process_form": {
      "post": {
        "description": "Required permission: Tickets - Create\n",
        "summary": "Creates a new Ticket for a Ticket Form",
        "tags": [
          "New Ticket Form"
        ],
        "operationId": "CreatesanewTicketforaTicketForm",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NewTicketFormsProcessFormRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/NewTicketFormsProcessFormResponse"
            },
            "examples": {
              "application/json": {
                "ticket": {
                  "id": 1,
                  "customer_id": 2,
                  "subject": "Ticket Subject",
                  "status": "New",
                  "problem_type": "Hardware",
                  "created_at": "2019-10-29T12:05:24.322Z",
                  "updated_at": "2019-10-29T12:05:24.382Z",
                  "category": "Standard",
                  "referredby": null,
                  "isapproved": false,
                  "memory": null,
                  "upgradeoffered": false,
                  "password": null,
                  "cancelled": false,
                  "power_adapter": false,
                  "start_at": null,
                  "end_at": null,
                  "user_id": 1,
                  "account_id": 1,
                  "checkbox_results": null,
                  "textbox_results": null,
                  "due_date": "2019-11-01T12:05:24.314Z",
                  "number": 4201,
                  "location_id": null,
                  "pdf": {
                    "url": null
                  },
                  "signature_name": null,
                  "signature_data": "",
                  "gevent_id": null,
                  "intake_form_pdf": {
                    "url": null
                  },
                  "contact_id": null,
                  "properties": {},
                  "ticket_type_id": null,
                  "priority": null,
                  "notify_emails": null,
                  "disabled": false,
                  "ticket_recurring_schedule_id": null,
                  "time_to_resolve_minutes": null,
                  "original_customer_id": 2,
                  "original_ticket_id": null,
                  "sla_id": null,
                  "contract_id": null,
                  "address_id": null,
                  "creator_id": null,
                  "signature_date": null,
                  "resolved_at": null,
                  "all_notify_emails": null,
                  "outtake_form_name": null,
                  "outtake_form_data": null,
                  "outtake_form_date": null,
                  "custom_fields_cache": " ",
                  "with_initial_issue_body": null,
                  "with_items_any": null
                },
                "invoice": null,
                "redirect": "/tickets/1",
                "message": "Ticket created.."
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/NewTicketFormsProcessFormResponse1"
            },
            "examples": {
              "application/json": {
                "success": false,
                "errors": {
                  "appointments": {
                    "summary": [
                      "can't be blank"
                    ],
                    "start_at": [
                      "can't be blank"
                    ],
                    "end_at": [
                      "can't be blank"
                    ]
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/payment_methods": {
      "get": {
        "description": "All Users except Single Customer Users may use this action.\n",
        "summary": "Returns a paginated list of Payment Methods",
        "tags": [
          "Payment Method"
        ],
        "operationId": "ReturnsapaginatedlistofPaymentMethods",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/PaymentMethodsResponse"
            },
            "examples": {
              "application/json": {
                "payment_methods": [
                  {
                    "id": 1,
                    "name": "Credit Card",
                    "created_at": "2019-10-28T09:55:44.304Z",
                    "updated_at": "2019-10-28T09:55:44.304Z",
                    "uses_card_processing": false
                  },
                  {
                    "id": 2,
                    "name": "Cash",
                    "created_at": "2019-10-28T09:55:44.307Z",
                    "updated_at": "2019-10-28T09:55:44.307Z",
                    "uses_card_processing": false
                  },
                  {
                    "id": 3,
                    "name": "Check",
                    "created_at": "2019-10-28T09:55:44.309Z",
                    "updated_at": "2019-10-28T09:55:44.309Z",
                    "uses_card_processing": false
                  },
                  {
                    "id": 4,
                    "name": "Offline CC",
                    "created_at": "2019-10-28T09:55:44.312Z",
                    "updated_at": "2019-10-28T09:55:44.312Z",
                    "uses_card_processing": false
                  },
                  {
                    "id": 5,
                    "name": "Quick",
                    "created_at": "2019-10-28T09:55:44.316Z",
                    "updated_at": "2019-10-28T09:55:44.316Z",
                    "uses_card_processing": false
                  },
                  {
                    "id": 6,
                    "name": "Other",
                    "created_at": "2019-10-28T09:55:44.319Z",
                    "updated_at": "2019-10-28T09:55:44.319Z",
                    "uses_card_processing": false
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customers/{customer_id}/payment_profiles": {
      "get": {
        "description": "Returns a paginated list of Payment Profiles",
        "summary": "Returns a paginated list of Payment Profiles",
        "tags": [
          "Payment Profile"
        ],
        "operationId": "ReturnsapaginatedlistofPaymentProfiles",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomersPaymentProfilesResponse"
            },
            "examples": {
              "application/json": {
                "payment_profiles": [
                  {
                    "id": 1,
                    "customer_id": 1,
                    "expiration": "MyString",
                    "customer_external_id": null,
                    "used_gateway": "authorize_net",
                    "payment_profile_id": 1,
                    "last_four": "MyString",
                    "created_at": "2019-10-25T07:11:31.903Z",
                    "updated_at": "2019-10-25T07:11:31.903Z"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Creates a Payment Profile",
        "summary": "Creates a Payment Profile",
        "tags": [
          "Payment Profile"
        ],
        "operationId": "CreatesaPaymentProfile",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomersPaymentProfilesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomersPaymentProfilesResponse1"
            },
            "examples": {
              "application/json": {
                "payment_profile": {
                  "id": 1,
                  "customer_id": 1,
                  "expiration": "MyString",
                  "customer_external_id": null,
                  "used_gateway": "authorize_net",
                  "payment_profile_id": 1,
                  "last_four": "MyString",
                  "created_at": "2019-10-25T07:11:31.903Z",
                  "updated_at": "2019-10-25T07:11:31.903Z"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/CustomersPaymentProfilesResponse2"
            },
            "examples": {
              "application/json": {
                "message": "Account not configured to use integrated processing."
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customers/{customer_id}/payment_profiles/{id}": {
      "get": {
        "description": "Retrieves a Payment Profile by ID",
        "summary": "Retrieves a Payment Profile by ID",
        "tags": [
          "Payment Profile"
        ],
        "operationId": "RetrievesaPaymentProfilebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomersPaymentProfilesResponse1"
            },
            "examples": {
              "application/json": {
                "payment_profile": {
                  "id": 1,
                  "customer_id": 1,
                  "expiration": "MyString",
                  "customer_external_id": null,
                  "used_gateway": "authorize_net",
                  "payment_profile_id": 1,
                  "last_four": "MyString",
                  "created_at": "2019-10-25T07:11:31.903Z",
                  "updated_at": "2019-10-25T07:11:31.903Z"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Updates a Payment Profile",
        "summary": "Updates a Payment Profile",
        "tags": [
          "Payment Profile"
        ],
        "operationId": "UpdatesaPaymentProfile",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomersPaymentProfilesRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomersPaymentProfilesResponse1"
            },
            "examples": {
              "application/json": {
                "payment_profile": {
                  "id": 1,
                  "customer_id": 1,
                  "expiration": "MyString",
                  "customer_external_id": null,
                  "used_gateway": "authorize_net",
                  "payment_profile_id": 1,
                  "last_four": "MyString",
                  "created_at": "2019-10-25T07:11:31.903Z",
                  "updated_at": "2019-10-25T07:11:31.903Z"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "Deletes a Payment Profile",
        "summary": "Deletes a Payment Profile",
        "tags": [
          "Payment Profile"
        ],
        "operationId": "DeletesaPaymentProfile",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomersPaymentProfilesResponse5"
            },
            "examples": {
              "application/json": {
                "success": true
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/payments": {
      "get": {
        "description": "Required permission: Payments - View List\n",
        "summary": "Returns a paginated list of Payments",
        "tags": [
          "Payment"
        ],
        "operationId": "ReturnsapaginatedlistofPayments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search query"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 25 results"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/PaymentsResponse"
            },
            "examples": {
              "application/json": {
                "payments": [
                  {
                    "id": 1,
                    "created_at": "2019-10-28T07:00:00.000Z",
                    "updated_at": "2019-10-28T10:18:14.061Z",
                    "success": true,
                    "payment_amount": 100,
                    "invoice_ids": [
                      null
                    ],
                    "ref_num": "11006",
                    "applied_at": "2019-10-26T00:00:00.000Z",
                    "payment_method": "Check",
                    "transaction_response": null,
                    "signature_date": null,
                    "customer": {
                      "id": 1,
                      "firstname": "Walkin",
                      "lastname": "Customer",
                      "fullname": "Walkin Customer",
                      "business_name": null,
                      "email": "walkin@somedomain.com",
                      "phone": "123",
                      "mobile": null,
                      "created_at": "2019-10-28T10:17:58.224Z",
                      "updated_at": "2019-10-28T10:17:58.224Z",
                      "pdf_url": null,
                      "address": null,
                      "address_2": null,
                      "city": null,
                      "state": null,
                      "zip": null,
                      "latitude": null,
                      "longitude": null,
                      "notes": null,
                      "get_sms": false,
                      "opt_out": false,
                      "disabled": false,
                      "no_email": true,
                      "location_name": null,
                      "location_id": null,
                      "properties": {},
                      "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=xw6sk8693f35nzgcb66o",
                      "tax_rate_id": null,
                      "notification_email": null,
                      "invoice_cc_emails": null,
                      "invoice_term_id": null,
                      "referred_by": null,
                      "ref_customer_id": null,
                      "business_and_full_name": "Walkin Customer",
                      "business_then_name": "Walkin Customer",
                      "contacts": []
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "page": 1
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Payments - Create\n",
        "summary": "Creates a Payment",
        "tags": [
          "Payment"
        ],
        "operationId": "CreatesaPayment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/PaymentsResponse2"
            },
            "examples": {
              "application/json": {
                "payment": {
                  "id": 3,
                  "created_at": "2019-10-28T12:45:24.315Z",
                  "updated_at": "2019-10-28T12:45:24.315Z",
                  "success": true,
                  "payment_amount": 10,
                  "invoice_ids": [
                    1
                  ],
                  "ref_num": null,
                  "applied_at": "2019-10-28T00:00:00.000Z",
                  "payment_method": null,
                  "transaction_response": null,
                  "tickets": []
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/payments/{id}": {
      "get": {
        "description": "Required permission: Payments - View List\n",
        "summary": "Retrieves a Payment by ID",
        "tags": [
          "Payment"
        ],
        "operationId": "RetrievesaPaymentbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/PaymentsResponse2"
            },
            "examples": {
              "application/json": {
                "payment": {
                  "id": 5,
                  "created_at": "2019-10-28T07:00:00.000Z",
                  "updated_at": "2019-10-28T13:05:27.257Z",
                  "success": true,
                  "payment_amount": 100,
                  "invoice_ids": [
                    null
                  ],
                  "ref_num": "11006",
                  "applied_at": "2019-10-26T00:00:00.000Z",
                  "payment_method": "Check",
                  "transaction_response": null,
                  "signature_date": null,
                  "customer": {
                    "id": 1,
                    "firstname": "Walkin",
                    "lastname": "Customer",
                    "fullname": "Walkin Customer",
                    "business_name": null,
                    "email": "walkin@somedomain.com",
                    "phone": "123",
                    "mobile": null,
                    "created_at": "2019-10-28T13:05:13.781Z",
                    "updated_at": "2019-10-28T13:05:13.781Z",
                    "pdf_url": null,
                    "address": null,
                    "address_2": null,
                    "city": null,
                    "state": null,
                    "zip": null,
                    "latitude": null,
                    "longitude": null,
                    "notes": null,
                    "get_sms": false,
                    "opt_out": false,
                    "disabled": false,
                    "no_email": true,
                    "location_name": null,
                    "location_id": null,
                    "properties": {},
                    "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=9rmh69dx953bbxmyxx3u",
                    "tax_rate_id": null,
                    "notification_email": null,
                    "invoice_cc_emails": null,
                    "invoice_term_id": null,
                    "referred_by": null,
                    "ref_customer_id": null,
                    "business_and_full_name": "Walkin Customer",
                    "business_then_name": "Walkin Customer",
                    "contacts": []
                  }
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customers/{customer_id}/phones": {
      "get": {
        "description": "Required permission: Customers - View Detail\nSingle-Customer Users can only access own.\n",
        "summary": "Returns a paginated list of Phones",
        "tags": [
          "Phone"
        ],
        "operationId": "ReturnsapaginatedlistofPhones",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomersPhonesResponse"
            },
            "examples": {
              "application/json": {
                "phones": [
                  {
                    "id": 2,
                    "label": "Mobile",
                    "number": "111222333",
                    "customer_id": 1,
                    "created_at": "2019-10-28T15:07:49.764Z",
                    "updated_at": "2019-10-28T15:07:49.764Z",
                    "extension": null
                  },
                  {
                    "id": 1,
                    "label": "Phone",
                    "number": "123",
                    "customer_id": 1,
                    "created_at": "2019-10-28T15:07:32.225Z",
                    "updated_at": "2019-10-28T15:07:32.225Z",
                    "extension": null
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Customers - Edit\nSingle-Customer Users can only access own.\n",
        "summary": "Creates a Phone",
        "tags": [
          "Phone"
        ],
        "operationId": "CreatesaPhone",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Phone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomersPhonesResponse1"
            },
            "examples": {
              "application/json": {
                "id": 4,
                "label": null,
                "number": "222000222",
                "customer_id": 1,
                "created_at": "2019-10-28T15:07:50.138Z",
                "updated_at": "2019-10-28T15:07:50.138Z",
                "extension": null
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/CustomersPhonesResponse2"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Number can't be blank"
                ],
                "params": {
                  "customer_id": "1",
                  "number": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customers/{customer_id}/phones/{id}": {
      "put": {
        "description": "Required permission: Customers - Edit\nSingle-Customer Users can only access own.\n",
        "summary": "Updates an existing Phone by ID",
        "tags": [
          "Phone"
        ],
        "operationId": "UpdatesanexistingPhonebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Phone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/CustomersPhonesResponse1"
            },
            "examples": {
              "application/json": {
                "id": 4,
                "label": null,
                "number": "222000222",
                "customer_id": 1,
                "created_at": "2019-10-28T15:07:50.138Z",
                "updated_at": "2019-10-28T15:07:50.138Z",
                "extension": null
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/CustomersPhonesResponse2"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Number can't be blank"
                ],
                "params": {
                  "customer_id": "1",
                  "id": "9",
                  "number": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "Required permission: Customers - Edit\nSingle-Customer Users can only access own.\n",
        "summary": "Deletes a Phone by ID",
        "tags": [
          "Phone"
        ],
        "operationId": "DeletesaPhonebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/portal_users": {
      "get": {
        "description": "Required permission: Global Admin\n",
        "summary": "Returns a paginated list of Portal Users",
        "tags": [
          "Portal User"
        ],
        "operationId": "ReturnsapaginatedlistofPortalUsers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns Portal Users that belong to a Customer ID"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Portal User email"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 100 results"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/PortalUsersResponse"
            },
            "examples": {
              "application/json": {
                "portal_users": [
                  {
                    "id": 1,
                    "email": "katelyn@okuneva.name",
                    "account_id": 1,
                    "customer_id": 1,
                    "contact_id": 1,
                    "created_at": "2019-10-25T13:36:47.165Z",
                    "updated_at": "2019-10-25T13:36:47.165Z",
                    "portal_group_id": 4
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_entries": 1,
                  "per_page": 100,
                  "page": 1
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Global Admin\n",
        "summary": "Creates a Portal User",
        "tags": [
          "Portal User"
        ],
        "operationId": "CreatesaPortalUser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PortalUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/PortalUsersResponse2"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "email": "katelyn@okuneva.name",
                "account_id": 1,
                "customer_id": 1,
                "contact_id": 1,
                "created_at": "2019-10-25T13:36:47.165Z",
                "updated_at": "2019-10-25T13:36:47.165Z",
                "portal_group_id": 4
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/PortalUsersResponse3"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Email can't be blank",
                  "Password confirmation doesn't match Password"
                ],
                "params": {
                  "customer_id": 1,
                  "password": "does not match",
                  "password_confirmation": "confirmation"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/portal_users/{id}": {
      "put": {
        "description": "Required permission: Global Admin\n",
        "summary": "Updates an existing Portal User by ID",
        "tags": [
          "Portal User"
        ],
        "operationId": "UpdatesanexistingPortalUserbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PortalUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/PortalUsersResponse2"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "email": "katelyn@okuneva.name",
                "account_id": 1,
                "customer_id": 1,
                "contact_id": 1,
                "created_at": "2019-10-25T13:36:47.165Z",
                "updated_at": "2019-10-25T13:36:47.165Z",
                "portal_group_id": 4
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/PortalUsersResponse3"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Password confirmation doesn't match Password"
                ],
                "params": {
                  "password": "does not match",
                  "password_confirmation": "the confirmation"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "Required permission: Global Admin\n",
        "summary": "Deletes a Portal User by ID",
        "tags": [
          "Portal User"
        ],
        "operationId": "DeletesaPortalUserbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/PortalUsersResponse2"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "email": "katelyn@okuneva.name",
                "account_id": 1,
                "customer_id": 1,
                "contact_id": 1,
                "created_at": "2019-10-25T13:36:47.165Z",
                "updated_at": "2019-10-25T13:36:47.165Z",
                "portal_group_id": 4
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/portal_users/create_invitation": {
      "post": {
        "description": "Required permission: Global Admin\n",
        "summary": "Creates an Invitation for a Portal User",
        "tags": [
          "Portal User"
        ],
        "operationId": "CreatesanInvitationforaPortalUser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Portal User ID",
            "schema": {
              "$ref": "#/definitions/PortalUsersCreateInvitationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/PortalUsersCreateInvitationResponse"
            },
            "examples": {
              "application/json": {
                "success": true,
                "message": "All set, we BCC'd you on that invitation."
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/PortalUsersCreateInvitationResponse"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": "Invalid email, correct the contact's email and try to resend."
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products/{product_id}/product_serials": {
      "get": {
        "description": "Required permission: Products - List/Search\n",
        "summary": "Returns a paginated list of Product_serials",
        "tags": [
          "Product Serial"
        ],
        "operationId": "ReturnsapaginatedlistofProduct_serials",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Possible values are reserved, sold, returned, in_transfer, breakage, used_in_refurb, in_stock"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 100 result"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ProductsProductSerialsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Products - Edit\n",
        "summary": "Creates a Product Serial",
        "tags": [
          "Product Serial"
        ],
        "operationId": "CreatesaProductSerial",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Product Serial object that needs to be added",
            "schema": {
              "$ref": "#/definitions/ProductsProductSerialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ProductsProductSerialsResponse1"
            },
            "examples": {
              "application/json": {
                "product_serial": {
                  "id": 1,
                  "created_at": "2019-10-24T07:32:07.656Z",
                  "updated_at": "2019-10-24T07:32:07.656Z",
                  "product_location_quantity_id": null,
                  "line_item_id": null,
                  "serial_number": "abcde345332z1",
                  "status": "In Stock",
                  "instance_price_cost": 0.01,
                  "instance_price_retail": 0.01,
                  "location_id": null
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ProductsProductSerialsResponse2"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Serial number scientific-notation not allowed, may have been introduced by a spreadsheet program inferring Numerical from a csv."
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products/{product_id}/product_serials/{id}": {
      "put": {
        "description": "Required permission: Products - Edit\n",
        "summary": "Updates an existing Product Serial by ID",
        "tags": [
          "Product Serial"
        ],
        "operationId": "UpdatesanexistingProductSerialbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Product Serial object that needs to be updated",
            "schema": {
              "$ref": "#/definitions/ProductsProductSerialsRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ProductsProductSerialsResponse1"
            },
            "examples": {
              "application/json": {
                "product_serial": {
                  "id": 1,
                  "created_at": "2019-10-24T07:32:07.656Z",
                  "updated_at": "2019-10-24T07:32:07.656Z",
                  "product_location_quantity_id": null,
                  "line_item_id": null,
                  "serial_number": "abcde345332z1",
                  "status": "In Stock",
                  "instance_price_cost": 0.01,
                  "instance_price_retail": 0.01,
                  "location_id": null
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ProductsProductSerialsResponse2"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Serial number has already been taken"
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products/{product_id}/product_serials/attach_to_line_item": {
      "post": {
        "description": "Required permission: Products - List/Search\nAdditional permissions required depending on \"record_type\":\n- LineItem: \"Invoices - Edit\" or \"Estimates - Edit\"\n- TicketLineItem: Tickets - Edit\n",
        "summary": "Adds Product Serials to a Line Item",
        "tags": [
          "Product Serial"
        ],
        "operationId": "AddsProductSerialstoaLineItem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductsProductSerialsAttachToLineItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ProductsProductSerialsAttachToLineItemResponse"
            },
            "examples": {
              "application/json": {
                "status": "attached"
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ProductsProductSerialsAttachToLineItemResponse1"
            },
            "examples": {
              "application/json": {
                "status": "attached",
                "errors": "One of the serial numbers has already been used. Please try again."
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products": {
      "get": {
        "description": "Required permission: Products - List/Search\n",
        "summary": "Returns a paginated list of Products",
        "tags": [
          "Product"
        ],
        "operationId": "ReturnsapaginatedlistofProducts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Product field to order by. Example \"name ASC\"."
          },
          {
            "name": "sku",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Returns Products with the SKU."
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Returns Products with the name."
          },
          {
            "name": "upc_code",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Returns Products with the UPC Code."
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns Products from the Category."
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Any product with ID included in the list."
          },
          {
            "name": "id_not",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Any product with ID not included in the list."
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search query."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 25 results."
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ProductsResponse"
            },
            "examples": {
              "application/json": {
                "products": [
                  {
                    "id": 1,
                    "price_cost": 0.01,
                    "price_retail": 0.01,
                    "condition": null,
                    "description": "Description #1",
                    "maintain_stock": false,
                    "name": "Product #1",
                    "quantity": 100,
                    "warranty": null,
                    "sort_order": null,
                    "reorder_at": null,
                    "disabled": false,
                    "taxable": true,
                    "product_category": null,
                    "category_path": null,
                    "upc_code": null,
                    "discount_percent": null,
                    "warranty_template_id": null,
                    "qb_item_id": 1,
                    "desired_stock_level": null,
                    "price_wholesale": 0,
                    "notes": null,
                    "tax_rate_id": null,
                    "physical_location": null,
                    "serialized": false,
                    "vendor_ids": [],
                    "long_description": null,
                    "location_quantities": [],
                    "photos": []
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Products - Create\n",
        "summary": "Creates a Product",
        "tags": [
          "Product"
        ],
        "operationId": "CreatesaProduct",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Product object that needs to be added",
            "schema": {
              "$ref": "#/definitions/ProductsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ProductsResponse2"
            },
            "examples": {
              "application/json": {
                "product": {
                  "id": 1,
                  "price_cost": 0.01,
                  "price_retail": 0.01,
                  "condition": null,
                  "description": "Description #1",
                  "maintain_stock": false,
                  "name": "Product #1",
                  "quantity": 100,
                  "warranty": null,
                  "sort_order": null,
                  "reorder_at": null,
                  "disabled": false,
                  "taxable": true,
                  "product_category": null,
                  "category_path": null,
                  "upc_code": null,
                  "discount_percent": null,
                  "warranty_template_id": null,
                  "qb_item_id": 1,
                  "desired_stock_level": null,
                  "price_wholesale": 0,
                  "notes": null,
                  "tax_rate_id": null,
                  "physical_location": null,
                  "serialized": false,
                  "vendor_ids": [],
                  "long_description": null,
                  "location_quantities": [],
                  "photos": []
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ProductsResponse3"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Name can't be blank",
                  "Description can't be blank"
                ],
                "params": {
                  "name": "",
                  "maintain_stock": false
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "description": "Required permission: Products - List/Search\n",
        "summary": "Retrieves a Product by ID",
        "tags": [
          "Product"
        ],
        "operationId": "RetrievesaProductbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ProductsResponse2"
            },
            "examples": {
              "application/json": {
                "product": {
                  "id": 1,
                  "price_cost": 0.01,
                  "price_retail": 0.01,
                  "condition": null,
                  "description": "Description #1",
                  "maintain_stock": false,
                  "name": "Product #1",
                  "quantity": 100,
                  "warranty": null,
                  "sort_order": null,
                  "reorder_at": null,
                  "disabled": false,
                  "taxable": true,
                  "product_category": null,
                  "category_path": null,
                  "upc_code": null,
                  "discount_percent": null,
                  "warranty_template_id": null,
                  "qb_item_id": 1,
                  "desired_stock_level": null,
                  "price_wholesale": 0,
                  "notes": null,
                  "tax_rate_id": null,
                  "physical_location": null,
                  "serialized": false,
                  "vendor_ids": [],
                  "long_description": null,
                  "location_quantities": [],
                  "photos": []
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Required permission: Products - Edit\n",
        "summary": "Updates an existing Product by ID",
        "tags": [
          "Product"
        ],
        "operationId": "UpdatesanexistingProductbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Product object that needs to be updated",
            "schema": {
              "$ref": "#/definitions/ProductsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ProductsResponse2"
            },
            "examples": {
              "application/json": {
                "product": {
                  "id": 1,
                  "price_cost": 0.01,
                  "price_retail": 0.01,
                  "condition": null,
                  "description": "Description #1",
                  "maintain_stock": false,
                  "name": "Product #1",
                  "quantity": 100,
                  "warranty": null,
                  "sort_order": null,
                  "reorder_at": null,
                  "disabled": false,
                  "taxable": true,
                  "product_category": null,
                  "category_path": null,
                  "upc_code": null,
                  "discount_percent": null,
                  "warranty_template_id": null,
                  "qb_item_id": 1,
                  "desired_stock_level": null,
                  "price_wholesale": 0,
                  "notes": null,
                  "tax_rate_id": null,
                  "physical_location": null,
                  "serialized": false,
                  "vendor_ids": [],
                  "long_description": null,
                  "location_quantities": [],
                  "photos": []
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ProductsResponse7"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Name can't be blank"
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products/barcode": {
      "get": {
        "description": "Required permission: Products - List/Search\n",
        "summary": "Returns a Product by Barcode",
        "tags": [
          "Product"
        ],
        "operationId": "ReturnsaProductbyBarcode",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "barcode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Product Barcode string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ProductsBarcodeResponse"
            },
            "examples": {
              "application/json": {
                "product": {
                  "id": 1,
                  "price_cost": 0.01,
                  "price_retail": 0.01,
                  "condition": null,
                  "description": "Description #1",
                  "maintain_stock": false,
                  "name": "Product #1",
                  "quantity": 100,
                  "warranty": null,
                  "sort_order": null,
                  "reorder_at": null,
                  "disabled": false,
                  "taxable": true,
                  "product_category": null,
                  "category_path": null,
                  "upc_code": null,
                  "discount_percent": null,
                  "warranty_template_id": null,
                  "qb_item_id": 1,
                  "desired_stock_level": null,
                  "price_wholesale": 0,
                  "notes": null,
                  "tax_rate_id": null,
                  "physical_location": null,
                  "serialized": false,
                  "vendor_ids": [],
                  "long_description": null,
                  "location_quantities": [],
                  "photos": []
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products/categories": {
      "get": {
        "description": "Required permission: Products - List/Search\n",
        "summary": "Returns a paginated list of Product Categories",
        "tags": [
          "Product"
        ],
        "operationId": "ReturnsapaginatedlistofProductCategories",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ProductsCategoriesResponse"
            },
            "examples": {
              "application/json": {
                "categories": [
                  {
                    "id": 1,
                    "account_id": 1,
                    "ancestry": null,
                    "name": "Root Category",
                    "description": "Root Category",
                    "device_product_id": null,
                    "names_depth_cache": "Root Category"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products/{id}/add_images": {
      "post": {
        "description": "Required permission: Products - Edit\n",
        "summary": "Creates a Product Image",
        "tags": [
          "Product"
        ],
        "operationId": "CreatesaProductImage",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Files"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ProductsAddImagesResponse"
            },
            "examples": {
              "application/json": {
                "message": "Success! Those will be added shortly in background workers."
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ProductsAddImagesResponse1"
            },
            "examples": {
              "application/json": {
                "error": "Please pass 'url' & 'filename' or 'files([{}])' parameter."
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products/{id}/delete_image": {
      "delete": {
        "description": "Deletes a Product Image",
        "summary": "Deletes a Product Image",
        "tags": [
          "Product"
        ],
        "operationId": "DeletesaProductImage",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "photo_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ProductsDeleteImageResponse"
            },
            "examples": {
              "application/json": {
                "message": "Success! Image removed."
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ProductsDeleteImageResponse"
            },
            "examples": {
              "application/json": {
                "message": "Photo Not Found."
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products/{id}/location_quantities": {
      "put": {
        "description": "Required permission: Products - Edit Quantities\n",
        "summary": "Updates a Location Quantity",
        "tags": [
          "Product"
        ],
        "operationId": "UpdatesaLocationQuantity",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductsLocationQuantitiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/ProductsLocationQuantitiesResponse"
            },
            "examples": {
              "application/json": {
                "product_id": 15,
                "id": 1,
                "quantity": 100,
                "price_cost_cents": null,
                "price_retail_cents": null,
                "location_id": 1,
                "tax_rate_id": null,
                "created_at": "2019-10-25T10:08:05.205Z",
                "updated_at": "2019-10-25T10:08:05.227Z",
                "reorder_at": null,
                "desired_stock_level": 0
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/purchase_orders": {
      "get": {
        "description": "Required permission: Purchase Orders - List/Search\n",
        "summary": "Returns a paginated list of Purchase Orders",
        "tags": [
          "Purchase Order"
        ],
        "operationId": "ReturnsapaginatedlistofPurchaseOrders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 20 results"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/PurchaseOrdersResponse"
            },
            "examples": {
              "application/json": {
                "purchase_orders": [
                  {
                    "id": 1,
                    "account_subdomain": "testsubdomainwi1",
                    "created_at": "2019-11-15T16:44:28.521Z",
                    "updated_at": "2019-11-15T16:44:28.530Z",
                    "expected_date": "2013-04-07T01:07:34.000Z",
                    "number": "MyString",
                    "other": 0.01,
                    "shipping": 0.01,
                    "shipping_notes": "MyText",
                    "status": "MyString",
                    "total": 0.02,
                    "user_id": 0,
                    "vendor_id": 1,
                    "location_id": null,
                    "due_date": "2019-11-22T00:00:00.000Z",
                    "paid_date": "2019-11-15T00:00:00.000Z",
                    "delivery_tracking": "yourdevivery.com/tracking/link/1",
                    "vendor": {
                      "id": 1,
                      "name": "C & S Wholesalers",
                      "rep_first_name": "Bill",
                      "rep_last_name": "Sales",
                      "email": "info@candswholes.com",
                      "phone": "603-344-5555",
                      "account_number": null,
                      "created_at": "2019-11-15T16:44:28.494Z",
                      "updated_at": "2019-11-15T16:44:28.494Z",
                      "address": "44 Billings Circle",
                      "city": "Keene",
                      "state": "NH",
                      "zip": "03455",
                      "website": "www.candswholes.com",
                      "notes": "Trucks"
                    },
                    "location": null,
                    "line_items": []
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Purchase Orders - Edit\n",
        "summary": "Creates a Purchase Order",
        "tags": [
          "Purchase Order"
        ],
        "operationId": "CreatesaPurchaseOrder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurchaseOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/PurchaseOrdersResponse2"
            },
            "examples": {
              "application/json": {
                "purchase_order": {
                  "id": 1,
                  "account_subdomain": "testsubdomainwi1",
                  "created_at": "2019-11-15T16:44:28.521Z",
                  "updated_at": "2019-11-15T16:44:28.530Z",
                  "expected_date": "2013-04-07T01:07:34.000Z",
                  "number": "MyString",
                  "other": 0.01,
                  "shipping": 0.01,
                  "shipping_notes": "MyText",
                  "status": "MyString",
                  "total": 0.02,
                  "user_id": 0,
                  "vendor_id": 1,
                  "location_id": null,
                  "due_date": "2019-11-22T00:00:00.000Z",
                  "paid_date": "2019-11-15T00:00:00.000Z",
                  "delivery_tracking": "yourdevivery.com/tracking/link/1",
                  "vendor": {
                    "id": 1,
                    "name": "C & S Wholesalers",
                    "rep_first_name": "Bill",
                    "rep_last_name": "Sales",
                    "email": "info@candswholes.com",
                    "phone": "603-344-5555",
                    "account_number": null,
                    "created_at": "2019-11-15T16:44:28.494Z",
                    "updated_at": "2019-11-15T16:44:28.494Z",
                    "address": "44 Billings Circle",
                    "city": "Keene",
                    "state": "NH",
                    "zip": "03455",
                    "website": "www.candswholes.com",
                    "notes": "Trucks"
                  },
                  "location": null,
                  "line_items": []
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/purchase_orders/{id}": {
      "get": {
        "description": "Required permission: Purchase Orders - View Details\n",
        "summary": "Retrieves a Purchase Order by ID",
        "tags": [
          "Purchase Order"
        ],
        "operationId": "RetrievesaPurchaseOrderbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/PurchaseOrdersResponse2"
            },
            "examples": {
              "application/json": {
                "purchase_order": {
                  "id": 1,
                  "account_subdomain": "testsubdomainwi1",
                  "created_at": "2019-11-15T16:44:28.521Z",
                  "updated_at": "2019-11-15T16:44:28.530Z",
                  "expected_date": "2013-04-07T01:07:34.000Z",
                  "number": "MyString",
                  "other": 0.01,
                  "shipping": 0.01,
                  "shipping_notes": "MyText",
                  "status": "MyString",
                  "total": 0.02,
                  "user_id": 0,
                  "vendor_id": 1,
                  "location_id": null,
                  "due_date": "2019-11-22T00:00:00.000Z",
                  "paid_date": "2019-11-15T00:00:00.000Z",
                  "delivery_tracking": "yourdevivery.com/tracking/link/1",
                  "vendor": {
                    "id": 1,
                    "name": "C & S Wholesalers",
                    "rep_first_name": "Bill",
                    "rep_last_name": "Sales",
                    "email": "info@candswholes.com",
                    "phone": "603-344-5555",
                    "account_number": null,
                    "created_at": "2019-11-15T16:44:28.494Z",
                    "updated_at": "2019-11-15T16:44:28.494Z",
                    "address": "44 Billings Circle",
                    "city": "Keene",
                    "state": "NH",
                    "zip": "03455",
                    "website": "www.candswholes.com",
                    "notes": "Trucks"
                  },
                  "location": null,
                  "line_items": []
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/purchase_orders/{id}/receive": {
      "post": {
        "description": "Required permission: Purchase Orders - Edit\n",
        "summary": "receive purchase_order",
        "tags": [
          "Purchase Order"
        ],
        "operationId": "receivepurchase_order",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurchaseOrdersReceiveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/PurchaseOrdersReceiveResponse"
            },
            "examples": {
              "application/json": {
                "purchase_order": {
                  "id": 1,
                  "account_subdomain": "testsubdomainwi1",
                  "created_at": "2019-11-15T16:44:28.521Z",
                  "updated_at": "2019-11-15T16:44:28.530Z",
                  "expected_date": "2013-04-07T01:07:34.000Z",
                  "number": "MyString",
                  "other": 0.01,
                  "shipping": 0.01,
                  "shipping_notes": "MyText",
                  "status": "MyString",
                  "total": 0.02,
                  "user_id": 0,
                  "vendor_id": 1,
                  "location_id": null,
                  "due_date": "2019-11-22T00:00:00.000Z",
                  "paid_date": "2019-11-15T00:00:00.000Z",
                  "delivery_tracking": "yourdevivery.com/tracking/link/1",
                  "vendor": {
                    "id": 1,
                    "name": "C & S Wholesalers",
                    "rep_first_name": "Bill",
                    "rep_last_name": "Sales",
                    "email": "info@candswholes.com",
                    "phone": "603-344-5555",
                    "account_number": null,
                    "created_at": "2019-11-15T16:44:28.494Z",
                    "updated_at": "2019-11-15T16:44:28.494Z",
                    "address": "44 Billings Circle",
                    "city": "Keene",
                    "state": "NH",
                    "zip": "03455",
                    "website": "www.candswholes.com",
                    "notes": "Trucks"
                  },
                  "location": null,
                  "line_items": []
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/purchase_orders/{id}/create_po_line_item": {
      "post": {
        "description": "Required permission: Purchase Orders - Edit\n",
        "summary": "Adds a Product to a Purchase Order",
        "tags": [
          "Purchase Order"
        ],
        "operationId": "AddsaProducttoaPurchaseOrder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurchaseOrdersCreatePoLineItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/PurchaseOrdersCreatePoLineItemResponse"
            },
            "examples": {
              "application/json": {
                "po_line_item": {
                  "id": 2,
                  "purchase_order_id": 7,
                  "product_id": 2,
                  "quantity": 10,
                  "cost_cents": 1,
                  "total_cents": 10,
                  "created_at": "2019-10-30T12:00:11.764Z",
                  "updated_at": "2019-10-30T12:00:11.764Z",
                  "received": false,
                  "position": null,
                  "received_quantity": 10,
                  "parent_po_line_item_id": null,
                  "old_cost_cents": null
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/PurchaseOrdersCreatePoLineItemResponse1"
            },
            "examples": {
              "application/json": {
                "errors": "Error adding that item  - please ensure that the item you are trying to add is set to ‘Maintain Stock’."
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/rmm_alerts": {
      "get": {
        "description": "Required permission: RMM Alerts - List\nSingle-Customer Users can only access own RMM Alerts.\n",
        "summary": "Returns a paginated list of RMM Alerts",
        "tags": [
          "RMM Alert"
        ],
        "operationId": "ReturnsapaginatedlistofRMMAlerts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "default": "active",
            "type": "string",
            "description": "Possible values resolved, all, active."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 25 results"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/RmmAlertsResponse"
            },
            "examples": {
              "application/json": {
                "rmm_alerts": [
                  {
                    "id": 1,
                    "customer_id": 0,
                    "ticket_number": null,
                    "ticket_status": null,
                    "computer_name": "MyString",
                    "properties": {},
                    "resolved": false,
                    "check_id": 1,
                    "status": "MyString",
                    "formatted_output": "MyText",
                    "description": "MyText",
                    "created_at": "2019-10-31T08:22:35.058Z",
                    "updated_at": "2019-10-31T08:22:35.058Z",
                    "asset_id": 1
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "page": 1
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: RMM Alerts - Create\nSingle-Customer Users can only access own RMM Alerts.\n",
        "summary": "Creates an RMM Alert",
        "tags": [
          "RMM Alert"
        ],
        "operationId": "CreatesanRMMAlert",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RmmAlertsRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/RmmAlertsResponse2"
            },
            "examples": {
              "application/json": {
                "success": true,
                "alert": {
                  "id": 3,
                  "account_id": 1,
                  "customer_id": 1,
                  "computer_name": null,
                  "properties": {},
                  "resolved": false,
                  "check_id": null,
                  "status": null,
                  "formatted_output": null,
                  "description": "RMM Alert Description",
                  "created_at": "2020-08-04T12:19:25.754Z",
                  "updated_at": "2020-08-04T12:19:25.754Z",
                  "ticket_id": null,
                  "asset_id": 2
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/rmm_alerts/{id}/mute": {
      "post": {
        "description": "Required permission: RMM Alerts - Clear/Manage\nSingle-Customer Users can only access own RMM Alerts.\n",
        "summary": "Mutes an RMM Alert by ID",
        "tags": [
          "RMM Alert"
        ],
        "operationId": "MutesanRMMAlertbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "mute_for",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Length of time to mute alert for. Accepted values: '1-hour', '1-day', '2-days', '1-week', '2-weeks', '1-month', 'forever'"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/RmmAlertsMuteResponse"
            },
            "examples": {
              "application/json": {
                "success": "true"
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          },
          "422": {
            "description": "Invalid Request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/rmm_alerts/{id}": {
      "get": {
        "description": "Required permission: RMM Alerts - List\nSingle-Customer Users can only access own RMM Alerts.\n",
        "summary": "Retrieves an RMM Alert by ID",
        "tags": [
          "RMM Alert"
        ],
        "operationId": "RetrievesanRMMAlertbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/RmmAlertsResponse4"
            },
            "examples": {
              "application/json": {
                "rmm_alert": {
                  "id": 1,
                  "customer_id": 0,
                  "ticket_number": null,
                  "ticket_status": null,
                  "computer_name": "MyString",
                  "properties": {},
                  "resolved": false,
                  "check_id": 1,
                  "status": "MyString",
                  "formatted_output": "MyText",
                  "description": "MyText",
                  "created_at": "2019-10-31T08:22:35.058Z",
                  "updated_at": "2019-10-31T08:22:35.058Z",
                  "asset_id": 1
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "Required permission: RMM Alerts - Delete\nSingle-Customer Users can only access own RMM Alerts.\n",
        "summary": "Deletes/Clears an RMM Alert by ID",
        "tags": [
          "RMM Alert"
        ],
        "operationId": "Deletes/ClearsanRMMAlertbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/RmmAlertsResponse5"
            },
            "examples": {
              "application/json": {
                "success": "true"
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/schedules": {
      "get": {
        "description": "Required permission: Recurring Invoices - List\n",
        "summary": "Returns a paginated list of Invoice Schedules",
        "tags": [
          "Schedule"
        ],
        "operationId": "ReturnsapaginatedlistofInvoiceSchedules",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns a list of Schedules that belong to a Customer ID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 25 results"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/SchedulesResponse"
            },
            "examples": {
              "application/json": {
                "schedules": [
                  {
                    "id": 1,
                    "account_id": 1,
                    "customer_id": 1,
                    "email_customer": false,
                    "frequency": "Daily",
                    "name": "MyString",
                    "next_run": "2016-01-01T00:00:00.000Z",
                    "snail_mail": false,
                    "charge_mop": false,
                    "subtotal": 0,
                    "invoice_unbilled_ticket_charges": false,
                    "paused": false,
                    "last_invoice_paid": null,
                    "lines": []
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Recurring Invoices - New\n",
        "summary": "Creates an Invoice Schedule",
        "tags": [
          "Schedule"
        ],
        "operationId": "CreatesanInvoiceSchedule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/SchedulesResponse2"
            },
            "examples": {
              "application/json": {
                "schedule": {
                  "id": 1,
                  "account_id": 1,
                  "customer_id": 1,
                  "email_customer": false,
                  "frequency": "Daily",
                  "name": "MyString",
                  "next_run": "2016-01-01T00:00:00.000Z",
                  "snail_mail": false,
                  "charge_mop": false,
                  "subtotal": 0,
                  "invoice_unbilled_ticket_charges": false,
                  "paused": false,
                  "last_invoice_paid": null,
                  "lines": []
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/SchedulesResponse3"
            },
            "examples": {
              "application/json": {
                "error": [
                  "Frequency Must be a valid selection",
                  "Frequency can't be blank",
                  "Next run can't be blank",
                  "Name can't be blank",
                  "Customer can't be blank"
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/schedules/{id}": {
      "get": {
        "description": "Required permission: Recurring Invoices - List\n",
        "summary": "Retrieves a Schedule by ID",
        "tags": [
          "Schedule"
        ],
        "operationId": "RetrievesaSchedulebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/SchedulesResponse2"
            },
            "examples": {
              "application/json": {
                "schedule": {
                  "id": 1,
                  "account_id": 1,
                  "customer_id": 1,
                  "email_customer": false,
                  "frequency": "Daily",
                  "name": "MyString",
                  "next_run": "2016-01-01T00:00:00.000Z",
                  "snail_mail": false,
                  "charge_mop": false,
                  "subtotal": 0,
                  "invoice_unbilled_ticket_charges": false,
                  "paused": false,
                  "last_invoice_paid": null,
                  "lines": []
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Required permission: Recurring Invoices - Edit\n",
        "summary": "Updates an existing Invoice Schedule by ID",
        "tags": [
          "Schedule"
        ],
        "operationId": "UpdatesanexistingInvoiceSchedulebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/SchedulesResponse2"
            },
            "examples": {
              "application/json": {
                "schedule": {
                  "id": 1,
                  "account_id": 1,
                  "customer_id": 1,
                  "email_customer": false,
                  "frequency": "Daily",
                  "name": "MyString",
                  "next_run": "2016-01-01T00:00:00.000Z",
                  "snail_mail": false,
                  "charge_mop": false,
                  "subtotal": 0,
                  "invoice_unbilled_ticket_charges": false,
                  "paused": false,
                  "last_invoice_paid": null,
                  "lines": []
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/SchedulesResponse3"
            },
            "examples": {
              "application/json": {
                "error": [
                  "Next run can't be blank"
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "Required permission: Recurring Invoices - Delete\n",
        "summary": "Deletes a Schedule by ID",
        "tags": [
          "Schedule"
        ],
        "operationId": "DeletesaSchedulebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/schedules/{id}/add_line_item": {
      "post": {
        "description": "Required permission: Recurring Invoices - Edit\n",
        "summary": "Adds a Line Item to an Invoice Schedule",
        "tags": [
          "Schedule"
        ],
        "operationId": "AddsaLineItemtoanInvoiceSchedule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ScheduleLineItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/SchedulesAddLineItemResponse"
            },
            "examples": {
              "application/json": {
                "schedule_line_item": {
                  "id": 1,
                  "cost_cents": 0,
                  "description": "Description",
                  "name": "Name",
                  "position": 0,
                  "product_id": null,
                  "quantity": "0.0",
                  "retail_cents": 0,
                  "schedule_id": 11,
                  "taxable": false,
                  "user_id": 1,
                  "price_cost": 0,
                  "price_retail": 0,
                  "product_category": null,
                  "asset_type_id": null,
                  "recurring_type_id": null,
                  "device_ids": [],
                  "one_time_charge": false
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/SchedulesAddLineItemResponse1"
            },
            "examples": {
              "application/json": {
                "error": [
                  "Name can't be blank"
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/schedules/{id}/remove_line_item": {
      "post": {
        "description": "Required permission: Recurring Invoices - Edit\n",
        "summary": "Removes a Line Item from an Invoice Schedule",
        "tags": [
          "Schedule"
        ],
        "operationId": "RemovesaLineItemfromanInvoiceSchedule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/schedules/{id}/line_items/{schedule_line_item_id}": {
      "put": {
        "description": "Required permission: Recurring Invoices - Edit\n",
        "summary": "Updates a Line Item",
        "tags": [
          "Schedule"
        ],
        "operationId": "PutUpdatesaLineItem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "schedule_line_item_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "ID of line item to update"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ScheduleLineItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/SchedulesLineItemsResponse"
            },
            "examples": {
              "application/json": {
                "schedule_line_item": {
                  "id": 3,
                  "cost_cents": 1,
                  "description": "MyText",
                  "name": "Updated Name",
                  "position": 1,
                  "product_id": 1,
                  "quantity": "9.99",
                  "retail_cents": 1,
                  "schedule_id": 15,
                  "taxable": false,
                  "user_id": 1,
                  "price_cost": 0.01,
                  "price_retail": 0.01,
                  "product_category": null,
                  "asset_type_id": null,
                  "recurring_type_id": null,
                  "device_ids": [],
                  "one_time_charge": false
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/SchedulesLineItemsResponse1"
            },
            "examples": {
              "application/json": {
                "error": [
                  "Name can't be blank"
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/search": {
      "get": {
        "description": "Additional permissions required depending on search results type:\n- Customer, Contact, Asset: \"Customers - List/Search\"\n- Lead: Leads - List/Search\n- Invoice: Invoices - List/Search\n- Estimate: Estimates - List/Search\n- Ticket: Tickets - List/Search\n- Product: Products - List/Search\n- Purchase Order, Vendor: Purchase Orders - List/Search\n- Report: Reports - View\n- Wiki: Documentation - Allow Usage\n",
        "summary": "Search all the things",
        "tags": [
          "Search"
        ],
        "operationId": "Searchallthethings",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Search query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/SearchResponse"
            },
            "examples": {
              "application/json": {
                "quick_result": null,
                "results": [
                  {
                    "table": {
                      "_id": 1,
                      "_type": "customer",
                      "_index": "customers",
                      "_source": {
                        "table": {
                          "firstname": "Walkin",
                          "lastname": "Customer",
                          "email": "walkin@somedomain.com",
                          "business_name": null,
                          "phones": [
                            {
                              "id": 1,
                              "label": "Phone",
                              "number": "123",
                              "customer_id": 1,
                              "created_at": "2019-11-01T09:13:58.626Z",
                              "updated_at": "2019-11-01T09:13:58.626Z",
                              "extension": null
                            }
                          ]
                        }
                      }
                    }
                  }
                ],
                "error": null
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/settings": {
      "get": {
        "description": "Returns a list of Account Settings",
        "summary": "Returns a list of Account Settings",
        "tags": [
          "Setting"
        ],
        "operationId": "ReturnsalistofAccountSettings",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/SettingsResponse"
            },
            "examples": {
              "application/json": {
                "customers": {
                  "required_fields": null,
                  "customer_fields": [],
                  "customer_field_answers": []
                },
                "assets": {
                  "asset_types": [],
                  "asset_type_fields": [],
                  "asset_type_field_answers": []
                },
                "locale": {
                  "iso_code": "en",
                  "currency_symbol": "$",
                  "date_format": "mm-dd-yy",
                  "time_format": "hh:mm tt",
                  "time_zone": "America/Los_Angeles",
                  "time_offset": "-08:00"
                },
                "ticket": {
                  "ticket_types": [],
                  "ticket_type_fields": [],
                  "ticket_type_field_answers": [],
                  "problem_types": [
                    "Virus",
                    "TuneUp",
                    "Hardware",
                    "Software",
                    "Other"
                  ],
                  "priorities": [
                    "",
                    "0 Urgent",
                    "1 High",
                    "2 Normal",
                    "3 Low"
                  ]
                },
                "business_hours_enabled": true,
                "business_hours": [
                  {
                    "day": "Sunday",
                    "start": "09:00",
                    "end": "17:00",
                    "closed": false
                  },
                  {
                    "day": "Monday",
                    "start": "09:00",
                    "end": "17:00",
                    "closed": false
                  },
                  {
                    "day": "Tuesday",
                    "start": "09:00",
                    "end": "17:00",
                    "closed": false
                  },
                  {
                    "day": "Wednesday",
                    "start": "09:00",
                    "end": "17:00",
                    "closed": false
                  },
                  {
                    "day": "Thursday",
                    "start": "09:00",
                    "end": "17:00",
                    "closed": false
                  },
                  {
                    "day": "Friday",
                    "start": "09:00",
                    "end": "17:00",
                    "closed": false
                  },
                  {
                    "day": "Saturday",
                    "start": "09:00",
                    "end": "17:00",
                    "closed": false
                  }
                ],
                "default_holiday_calendar": "USA",
                "msp_addon": null
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/settings/tabs": {
      "get": {
        "description": "Returns Tabs Settings",
        "summary": "Returns Tabs Settings",
        "tags": [
          "Setting"
        ],
        "operationId": "ReturnsTabsSettings",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/SettingsTabsResponse"
            },
            "examples": {
              "application/json": {
                "tabs": {
                  "msp_dashboard": true,
                  "customers": true,
                  "assets": false,
                  "alerts": false,
                  "contracts": false,
                  "invoices": true,
                  "customer_purchases": false,
                  "refurbs": false,
                  "estimates": true,
                  "tickets": true,
                  "parts": true,
                  "products": true,
                  "purchase_orders": false,
                  "field_jobs": true,
                  "kabuto_policies": true,
                  "scripts": true,
                  "sales": true,
                  "leads": true,
                  "domo": false,
                  "marketr": true,
                  "recur": false,
                  "reports": false,
                  "wiki": false,
                  "app_center": false,
                  "pax8": false
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/settings/printing": {
      "get": {
        "description": "Returns Printing Settings",
        "summary": "Returns Printing Settings",
        "tags": [
          "Setting"
        ],
        "operationId": "ReturnsPrintingSettings",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/SettingsPrintingResponse"
            },
            "examples": {
              "application/json": {
                "messaging_channel": "100000000000000000001",
                "registers": []
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ticket_timers": {
      "get": {
        "description": "Required permission: Ticket Timers - Overview\n",
        "summary": "Returns a paginated list of Ticket Timers",
        "tags": [
          "Ticket Timer"
        ],
        "operationId": "ReturnsapaginatedlistofTicketTimers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "created_at_lt",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Returns Ticket Timers created before the date. Example \"2019-01-22\""
          },
          {
            "name": "created_at_gt",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Returns Ticket Timers created after the date. Example \"2019-12-22\""
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 25 results"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketTimersResponse"
            },
            "examples": {
              "application/json": {
                "ticket_timers": [
                  {
                    "id": 1,
                    "ticket_id": 1,
                    "user_id": 1,
                    "start_time": "2013-08-06T13:41:15.000Z",
                    "end_time": "2013-08-06T14:41:15.000Z",
                    "recorded": false,
                    "created_at": "2019-11-05T15:18:43.727Z",
                    "updated_at": "2019-11-05T15:18:43.727Z",
                    "billable": false,
                    "notes": null,
                    "toggl_id": null,
                    "product_id": null,
                    "comment_id": null,
                    "ticket_line_item_id": null,
                    "active_duration": null
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "page": 1
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tickets": {
      "get": {
        "description": "Required permission: Tickets - List/Search\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Returns a paginated list of Tickets",
        "tags": [
          "Ticket"
        ],
        "operationId": "ReturnsapaginatedlistofTickets",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Any Ticket with customer_id equal to the parameter."
          },
          {
            "name": "contact_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Any Ticket with contact_id equal to the parameter."
          },
          {
            "name": "number",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Any Ticket with number equal to the parameter."
          },
          {
            "name": "resolved_after",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Returns Tickets resolved after the date. Example \"2019-01-23\"."
          },
          {
            "name": "created_after",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Returns Tickets created after the date. Example \"2019-02-25\"."
          },
          {
            "name": "since_updated_at",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Returns Tickets updated after the date. Example \"2019-02-25\"."
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Any Ticket with status equal to the parameter. Examples \"New\", \"In Progress\", \"Resolved\", \"Invoiced\", \"Waiting for Parts\", \"Waiting on Customer\", \"Scheduled\", \"Customer Reply\", \"Not Closed\"."
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search query"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Any Ticket assigned to a User ID"
          },
          {
            "name": "mine",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Any Ticket assigned to the current user"
          },
          {
            "name": "ticket_search_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns results of a Ticket Search"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 25 results"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsResponse"
            },
            "examples": {
              "application/json": {
                "tickets": [
                  {
                    "id": 1,
                    "number": 1,
                    "subject": "Some major problem",
                    "created_at": "2019-11-04T08:59:31.034Z",
                    "customer_id": 1,
                    "customer_business_then_name": "Walkin Customer",
                    "due_date": "2019-11-04T08:59:31.016Z",
                    "resolved_at": null,
                    "start_at": null,
                    "end_at": null,
                    "location_id": null,
                    "problem_type": "Virus",
                    "status": "New",
                    "ticket_type_id": null,
                    "properties": {},
                    "user_id": null,
                    "updated_at": "2019-11-04T08:59:31.034Z",
                    "pdf_url": null,
                    "priority": null,
                    "comments": [],
                    "user": null
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "page": 1
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Tickets - Create\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Creates a Ticket",
        "tags": [
          "Ticket"
        ],
        "operationId": "CreatesaTicket",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Ticket"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsResponse2"
            },
            "examples": {
              "application/json": {
                "ticket": {
                  "id": 3,
                  "number": 2012,
                  "subject": "Ticket Subject",
                  "created_at": "2019-11-04T14:55:01.883Z",
                  "customer_id": 1,
                  "customer_business_then_name": "Walkin Customer",
                  "due_date": "2025-10-10T08:00:00.000Z",
                  "start_at": null,
                  "end_at": "2025-10-10T18:45:00.000Z",
                  "location_id": null,
                  "problem_type": "Virus",
                  "status": "New",
                  "properties": {
                    "Device Type": "Hard Drive",
                    "Maker": "Text field"
                  },
                  "user_id": 1,
                  "updated_at": "2019-11-04T14:55:01.928Z",
                  "pdf_url": null,
                  "intake_form_html": null,
                  "signature_name": "Joe",
                  "signature_date": null,
                  "asset_ids": [
                    1
                  ],
                  "priority": "High",
                  "resolved_at": null,
                  "outtake_form_name": null,
                  "outtake_form_date": null,
                  "outtake_form_html": null,
                  "comments": [
                    {
                      "id": 1,
                      "created_at": "2019-11-04T14:55:01.884Z",
                      "updated_at": "2019-11-04T14:55:01.884Z",
                      "ticket_id": 3,
                      "subject": "Comment Subject",
                      "body": "Comment Body",
                      "tech": null,
                      "hidden": true,
                      "user_id": null
                    }
                  ],
                  "attachments": [],
                  "ticket_timers": [],
                  "line_items": [],
                  "worksheet_results": [],
                  "assets": [
                    {
                      "id": 1,
                      "name": "Vileplume",
                      "customer_id": 1,
                      "created_at": "2019-11-04T14:55:01.790Z",
                      "updated_at": "2019-11-04T14:55:01.790Z",
                      "properties": {},
                      "asset_type": "Sandshrew",
                      "asset_serial": null,
                      "external_rmm_link": null,
                      "customer": {
                        "id": 1,
                        "firstname": "Walkin",
                        "lastname": "Customer",
                        "fullname": "Walkin Customer",
                        "business_name": null,
                        "email": "walkin@somedomain.com",
                        "phone": "123",
                        "mobile": null,
                        "created_at": "2019-11-04T14:54:50.735Z",
                        "updated_at": "2019-11-04T14:54:50.735Z",
                        "pdf_url": null,
                        "address": null,
                        "address_2": null,
                        "city": null,
                        "state": null,
                        "zip": null,
                        "latitude": null,
                        "longitude": null,
                        "notes": null,
                        "get_sms": false,
                        "opt_out": false,
                        "disabled": false,
                        "no_email": true,
                        "location_id": null,
                        "properties": {},
                        "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=3g85nj295ar5u4c9zq1o",
                        "tax_rate_id": null,
                        "notification_email": null,
                        "invoice_cc_emails": null,
                        "invoice_term_id": null,
                        "referred_by": null,
                        "ref_customer_id": null,
                        "business_and_full_name": "Walkin Customer",
                        "business_then_name": "Walkin Customer"
                      },
                      "rmm_links": [],
                      "rmm_store": {
                        "id": 1,
                        "asset_id": 1,
                        "account_id": 1,
                        "triggers": {
                          "bsod_triggered": "false",
                          "time_triggered": "false",
                          "no_av_triggered": "false",
                          "defrag_triggered": "false",
                          "firewall_triggered": "false",
                          "app_crash_triggered": "false",
                          "low_hd_space_triggered": "false",
                          "smart_failure_triggered": "false",
                          "device_manager_triggered": "false",
                          "agent_offline_triggered": "false"
                        },
                        "windows_updates": {},
                        "emsisoft": {},
                        "general": {},
                        "created_at": "2019-11-04T14:55:01.991Z",
                        "updated_at": "2019-11-04T14:55:01.991Z",
                        "override_alert_agent_offline_mins": null,
                        "override_alert_agent_rearm_after_mins": null,
                        "override_low_hd_threshold": null,
                        "override_autoresolve_offline_alert": null
                      }
                    }
                  ],
                  "appointments": [],
                  "ticket_fields": [
                    {
                      "id": 2,
                      "name": "Maker",
                      "field_type": "text_field",
                      "required": null,
                      "account_id": 1,
                      "created_at": "2019-11-04T14:55:01.761Z",
                      "updated_at": "2019-11-04T14:55:01.761Z",
                      "ticket_type_id": 1,
                      "hidden": false,
                      "position": null,
                      "answers": []
                    },
                    {
                      "id": 1,
                      "name": "Device Type",
                      "field_type": "select_box",
                      "required": null,
                      "account_id": 1,
                      "created_at": "2019-11-04T14:55:01.743Z",
                      "updated_at": "2019-11-04T14:55:01.743Z",
                      "ticket_type_id": 1,
                      "hidden": false,
                      "position": null,
                      "answers": [
                        {
                          "id": 1,
                          "ticket_field_id": 1,
                          "content": "Hard Drive",
                          "created_at": "2019-11-04T14:55:01.758Z",
                          "updated_at": "2019-11-04T14:55:01.758Z",
                          "account_id": null
                        }
                      ]
                    }
                  ],
                  "ticket_answers": [
                    {
                      "id": 1,
                      "ticket_field_id": 1,
                      "content": "Hard Drive",
                      "created_at": "2019-11-04T14:55:01.758Z",
                      "updated_at": "2019-11-04T14:55:01.758Z",
                      "account_id": null
                    }
                  ],
                  "customer": {
                    "id": 1,
                    "firstname": "Walkin",
                    "lastname": "Customer",
                    "fullname": "Walkin Customer",
                    "business_name": null,
                    "email": "walkin@somedomain.com",
                    "phone": "123",
                    "mobile": null,
                    "created_at": "2019-11-04T14:54:50.735Z",
                    "updated_at": "2019-11-04T14:54:50.735Z",
                    "pdf_url": null,
                    "address": null,
                    "address_2": null,
                    "city": null,
                    "state": null,
                    "zip": null,
                    "latitude": null,
                    "longitude": null,
                    "notes": null,
                    "get_sms": false,
                    "opt_out": false,
                    "disabled": false,
                    "no_email": true,
                    "location_name": null,
                    "location_id": null,
                    "properties": {},
                    "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=cfrwzra6wo3ybuj598pa",
                    "tax_rate_id": null,
                    "notification_email": null,
                    "invoice_cc_emails": null,
                    "invoice_term_id": null,
                    "referred_by": null,
                    "ref_customer_id": null,
                    "business_and_full_name": "Walkin Customer",
                    "business_then_name": "Walkin Customer",
                    "contacts": []
                  },
                  "contact": null,
                  "user": {
                    "id": 1,
                    "email": "bat1man44128@man.com",
                    "full_name": "Bat Man",
                    "created_at": "2019-11-04T14:54:51.081Z",
                    "updated_at": "2019-11-04T14:54:51.081Z",
                    "group": "Admins",
                    "admin": true,
                    "color": "1e3e96"
                  },
                  "ticket_type": {
                    "id": 1,
                    "name": "Devices",
                    "account_id": 1,
                    "created_at": "2019-11-04T14:55:01.722Z",
                    "updated_at": "2019-11-04T14:55:01.722Z",
                    "disabled": false,
                    "intake_terms": null,
                    "skip_intake": false,
                    "outtake_terms": null,
                    "skip_outtake": false,
                    "ticket_fields": [
                      {
                        "id": 2,
                        "name": "Maker",
                        "field_type": "text_field",
                        "required": null,
                        "account_id": 1,
                        "created_at": "2019-11-04T14:55:01.761Z",
                        "updated_at": "2019-11-04T14:55:01.761Z",
                        "ticket_type_id": 1,
                        "hidden": false,
                        "position": null,
                        "answers": []
                      },
                      {
                        "id": 1,
                        "name": "Device Type",
                        "field_type": "select_box",
                        "required": null,
                        "account_id": 1,
                        "created_at": "2019-11-04T14:55:01.743Z",
                        "updated_at": "2019-11-04T14:55:01.743Z",
                        "ticket_type_id": 1,
                        "hidden": false,
                        "position": null,
                        "answers": [
                          {
                            "id": 1,
                            "ticket_field_id": 1,
                            "content": "Hard Drive",
                            "created_at": "2019-11-04T14:55:01.758Z",
                            "updated_at": "2019-11-04T14:55:01.758Z",
                            "account_id": null
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/TicketsResponse3"
            },
            "examples": {
              "application/json": {
                "error": "Customer required field"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tickets/{id}": {
      "get": {
        "description": "Required permissions: \"Tickets - View Details\" or \"Tickets - View 'Their Ticket' Details (assigned to them)\"\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Retrieves a Ticket by ID",
        "tags": [
          "Ticket"
        ],
        "operationId": "RetrievesaTicketbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsResponse2"
            },
            "examples": {
              "application/json": {
                "ticket": {
                  "id": 5,
                  "number": 4,
                  "subject": "Some major problem",
                  "created_at": "2019-11-05T07:40:54.824Z",
                  "customer_id": 1,
                  "customer_business_then_name": "Walkin Customer",
                  "due_date": "2019-11-05T07:40:54.820Z",
                  "start_at": null,
                  "end_at": null,
                  "location_id": null,
                  "problem_type": "Virus",
                  "status": "New",
                  "properties": {},
                  "user_id": null,
                  "updated_at": "2019-11-05T07:40:54.824Z",
                  "pdf_url": null,
                  "intake_form_html": null,
                  "signature_name": null,
                  "signature_date": null,
                  "asset_ids": [],
                  "priority": null,
                  "resolved_at": null,
                  "outtake_form_name": null,
                  "outtake_form_date": null,
                  "outtake_form_html": null,
                  "comments": [],
                  "attachments": [],
                  "ticket_timers": [],
                  "line_items": [],
                  "worksheet_results": [],
                  "assets": [],
                  "appointments": [],
                  "ticket_fields": [],
                  "ticket_answers": [],
                  "customer": {
                    "id": 1,
                    "firstname": "Walkin",
                    "lastname": "Customer",
                    "fullname": "Walkin Customer",
                    "business_name": null,
                    "email": "walkin@somedomain.com",
                    "phone": "123",
                    "mobile": null,
                    "created_at": "2019-11-05T07:40:44.365Z",
                    "updated_at": "2019-11-05T07:40:44.365Z",
                    "pdf_url": null,
                    "address": null,
                    "address_2": null,
                    "city": null,
                    "state": null,
                    "zip": null,
                    "latitude": null,
                    "longitude": null,
                    "notes": null,
                    "get_sms": false,
                    "opt_out": false,
                    "disabled": false,
                    "no_email": true,
                    "location_name": null,
                    "location_id": null,
                    "properties": {},
                    "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=2ry2wdlnaybl86oetmbr",
                    "tax_rate_id": null,
                    "notification_email": null,
                    "invoice_cc_emails": null,
                    "invoice_term_id": null,
                    "referred_by": null,
                    "ref_customer_id": null,
                    "business_and_full_name": "Walkin Customer",
                    "business_then_name": "Walkin Customer",
                    "contacts": []
                  },
                  "contact": null,
                  "user": {
                    "id": 1,
                    "email": "bat1man44128@man.com",
                    "full_name": "Bat Man",
                    "created_at": "2019-11-04T14:54:51.081Z",
                    "updated_at": "2019-11-04T14:54:51.081Z",
                    "group": "Admins",
                    "admin": true,
                    "color": "1e3e96"
                  },
                  "ticket_type": {
                    "id": 1,
                    "name": "Devices",
                    "account_id": 1,
                    "created_at": "2019-11-04T14:55:01.722Z",
                    "updated_at": "2019-11-04T14:55:01.722Z",
                    "disabled": false,
                    "intake_terms": null,
                    "skip_intake": false,
                    "outtake_terms": null,
                    "skip_outtake": false,
                    "ticket_fields": []
                  },
                  "address": null
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Required permission: Tickets - Edit\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Updates an existing Ticket by ID",
        "tags": [
          "Ticket"
        ],
        "operationId": "UpdatesanexistingTicketbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Ticket"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsResponse2"
            },
            "examples": {
              "application/json": {
                "ticket": {
                  "id": 5,
                  "number": 4,
                  "subject": "Some major problem",
                  "created_at": "2019-11-05T07:40:54.824Z",
                  "customer_id": 1,
                  "customer_business_then_name": "Walkin Customer",
                  "due_date": "2019-11-05T07:40:54.820Z",
                  "start_at": null,
                  "end_at": null,
                  "location_id": null,
                  "problem_type": "Virus",
                  "status": "New",
                  "properties": {},
                  "user_id": null,
                  "updated_at": "2019-11-05T07:40:54.824Z",
                  "pdf_url": null,
                  "intake_form_html": null,
                  "signature_name": null,
                  "signature_date": null,
                  "asset_ids": [],
                  "priority": null,
                  "resolved_at": null,
                  "outtake_form_name": null,
                  "outtake_form_date": null,
                  "outtake_form_html": null,
                  "comments": [],
                  "attachments": [],
                  "ticket_timers": [],
                  "line_items": [],
                  "worksheet_results": [],
                  "assets": [],
                  "appointments": [],
                  "ticket_fields": [],
                  "ticket_answers": [],
                  "customer": {
                    "id": 1,
                    "firstname": "Walkin",
                    "lastname": "Customer",
                    "fullname": "Walkin Customer",
                    "business_name": null,
                    "email": "walkin@somedomain.com",
                    "phone": "123",
                    "mobile": null,
                    "created_at": "2019-11-05T07:40:44.365Z",
                    "updated_at": "2019-11-05T07:40:44.365Z",
                    "pdf_url": null,
                    "address": null,
                    "address_2": null,
                    "city": null,
                    "state": null,
                    "zip": null,
                    "latitude": null,
                    "longitude": null,
                    "notes": null,
                    "get_sms": false,
                    "opt_out": false,
                    "disabled": false,
                    "no_email": true,
                    "location_name": null,
                    "location_id": null,
                    "properties": {},
                    "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=2ry2wdlnaybl86oetmbr",
                    "tax_rate_id": null,
                    "notification_email": null,
                    "invoice_cc_emails": null,
                    "invoice_term_id": null,
                    "referred_by": null,
                    "ref_customer_id": null,
                    "business_and_full_name": "Walkin Customer",
                    "business_then_name": "Walkin Customer",
                    "contacts": []
                  },
                  "contact": null,
                  "user": {
                    "id": 1,
                    "email": "bat1man44128@man.com",
                    "full_name": "Bat Man",
                    "created_at": "2019-11-04T14:54:51.081Z",
                    "updated_at": "2019-11-04T14:54:51.081Z",
                    "group": "Admins",
                    "admin": true,
                    "color": "1e3e96"
                  },
                  "ticket_type": {
                    "id": 1,
                    "name": "Devices",
                    "account_id": 1,
                    "created_at": "2019-11-04T14:55:01.722Z",
                    "updated_at": "2019-11-04T14:55:01.722Z",
                    "disabled": false,
                    "intake_terms": null,
                    "skip_intake": false,
                    "outtake_terms": null,
                    "skip_outtake": false,
                    "ticket_fields": []
                  },
                  "address": null
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/TicketsResponse7"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Subject can't be blank"
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "Required permission: Tickets - Delete\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Deletes a Ticket by ID",
        "tags": [
          "Ticket"
        ],
        "operationId": "DeletesaTicketbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsResponse8"
            },
            "examples": {
              "application/json": {
                "message": "Ticket was successfully deleted. "
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/TicketsResponse8"
            },
            "examples": {
              "application/json": {
                "message": "Not found"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tickets/settings": {
      "get": {
        "description": "Returns Tickets Settings",
        "summary": "Returns Tickets Settings",
        "tags": [
          "Ticket"
        ],
        "operationId": "ReturnsTicketsSettings",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsSettingsResponse"
            },
            "examples": {
              "application/json": {
                "ticket_status_list": [
                  "New",
                  "In Progress",
                  "Resolved",
                  "Invoiced",
                  "Waiting for Parts",
                  "Waiting on Customer",
                  "Scheduled",
                  "Customer Reply"
                ],
                "default_labor_product_id": null,
                "ticket_timer_charge_by_default": null,
                "saved_searches": [],
                "ticket_types": [],
                "ticket_type_fields": [],
                "ticket_type_field_answers": [],
                "appointment_types": [],
                "users": [
                  {
                    "id": 1,
                    "name": "Bat Man"
                  }
                ],
                "dashboard_settings": null,
                "worksheet_templates": [],
                "require_ticket_type": null,
                "require_intake_form_with_ticket": null,
                "require_outtake_form_with_ticket": null,
                "ticket_workflow_default_id": null
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tickets/{id}/print": {
      "post": {
        "description": "Required permission: Tickets - View Details\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Prints a Ticket by ID",
        "tags": [
          "Ticket"
        ],
        "operationId": "PrintsaTicketbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tickets/{id}/comment": {
      "post": {
        "description": "Required permission: Tickets - Edit\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Adds a Comment to a Ticket",
        "tags": [
          "Ticket"
        ],
        "operationId": "AddsaCommenttoaTicket",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TicketsCommentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsCommentResponse"
            },
            "examples": {
              "application/json": {
                "comment": {
                  "id": 2,
                  "created_at": "2019-11-05T09:13:33.422Z",
                  "updated_at": "2019-11-05T09:13:33.422Z",
                  "ticket_id": 13,
                  "subject": "Comment Subject",
                  "body": "Comment Body",
                  "tech": "Joe",
                  "hidden": true,
                  "user_id": 1
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/TicketsCommentResponse1"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Body can't be blank",
                  "Subject can't be blank"
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tickets/{id}/timer_entry": {
      "post": {
        "description": "Required permission: Ticket Timers - Overview\n",
        "summary": "Create a Ticket Timer for a Ticket",
        "tags": [
          "Ticket"
        ],
        "operationId": "CreateaTicketTimerforaTicket",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TicketsTimerEntryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsTimerEntryResponse"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "ticket_id": 15,
                "user_id": 1,
                "start_time": "2019-11-05T12:15:59.000Z",
                "end_time": "2019-11-05T12:25:59.000Z",
                "recorded": false,
                "created_at": "2019-11-05T12:15:59.365Z",
                "updated_at": "2019-11-05T12:15:59.365Z",
                "billable": false,
                "notes": "API Timer",
                "toggl_id": null,
                "product_id": null,
                "comment_id": null,
                "ticket_line_item_id": null,
                "active_duration": 600
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/TicketsTimerEntryResponse1"
            },
            "examples": {
              "application/json": {
                "error": "no implicit conversion of nil into String"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tickets/{id}/add_line_item": {
      "post": {
        "description": "Required permission: Tickets - Edit\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Creates a Ticket Line Item",
        "tags": [
          "Ticket"
        ],
        "operationId": "CreatesaTicketLineItem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TicketsAddLineItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsAddLineItemResponse"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "ticket_id": 17,
                "user_id": 1,
                "product_id": null,
                "name": "Manual Item",
                "description": "No Product",
                "quantity": "1.0",
                "product_category": null,
                "upc_code": null,
                "taxable": true,
                "cost_cents": 1000,
                "retail_cents": 1500,
                "created_at": "2019-11-05T11:46:20.347Z",
                "updated_at": "2019-11-05T11:46:20.347Z",
                "converted": false,
                "item_id": null,
                "position": 2,
                "estimate_line_item_id": null,
                "old_price": null,
                "line_discount_percent": null,
                "discount_dollars": null,
                "original_ticket_line_item_id": null,
                "price_cost": 10,
                "price_retail": 15
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/TicketsAddLineItemResponse1"
            },
            "examples": {
              "application/json": {
                "errors": "Name can't be blank, Description can't be blank",
                "params": {}
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tickets/{id}/attach_file_url": {
      "post": {
        "description": "Required permission: Tickets - Edit\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Attach a file to a Ticket",
        "tags": [
          "Ticket"
        ],
        "operationId": "AttachafiletoaTicket",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Files"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsAttachFileUrlResponse"
            },
            "examples": {
              "application/json": {
                "message": "Processing - refresh ticket in a moment to see if it worked."
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/TicketsAttachFileUrlResponse1"
            },
            "examples": {
              "application/json": {
                "error": "Missing files param - or not an array like [{'url':'http://foo','filename': 'test'}]"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tickets/{id}/remove_line_item": {
      "post": {
        "description": "Required permission: Tickets - Edit\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Deletes a Ticket Line Item",
        "tags": [
          "Ticket"
        ],
        "operationId": "DeletesaTicketLineItem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TicketsRemoveLineItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsRemoveLineItemResponse"
            },
            "examples": {
              "application/json": {
                "success": true,
                "message": ""
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tickets/{id}/update_line_item": {
      "put": {
        "description": "Required permission: Tickets - Edit\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Updates an existing Ticket Line Item",
        "tags": [
          "Ticket"
        ],
        "operationId": "UpdatesanexistingTicketLineItem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TicketsUpdateLineItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsUpdateLineItemResponse"
            },
            "examples": {
              "application/json": {
                "ticket_line_item": {
                  "id": 3,
                  "ticket_id": 23,
                  "user_id": null,
                  "product_id": null,
                  "name": "Updated Line Name",
                  "description": "Description",
                  "quantity": "1.0",
                  "product_category": null,
                  "upc_code": null,
                  "taxable": true,
                  "cost_cents": null,
                  "retail_cents": 10000,
                  "created_at": "2019-11-05T14:20:25.673Z",
                  "updated_at": "2019-11-05T14:20:25.692Z",
                  "converted": false,
                  "item_id": null,
                  "position": 3,
                  "estimate_line_item_id": null,
                  "old_price": null,
                  "line_discount_percent": null,
                  "discount_dollars": null,
                  "original_ticket_line_item_id": null,
                  "price_cost": 0,
                  "price_retail": 100
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tickets/{id}/delete_attachment": {
      "post": {
        "description": "Required permission: Tickets - Edit\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Deletes a Ticket Attachment",
        "tags": [
          "Ticket"
        ],
        "operationId": "DeletesaTicketAttachment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TicketsDeleteAttachmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsDeleteAttachmentResponse"
            },
            "examples": {
              "application/json": {
                "success": true
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tickets/{id}/delete_timer_entry": {
      "post": {
        "description": "Required permission: Ticket Timers - Overview\n",
        "summary": "Deletes a Ticket Timer",
        "tags": [
          "Ticket"
        ],
        "operationId": "DeletesaTicketTimer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TimerEntryId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsDeleteTimerEntryResponse"
            },
            "examples": {
              "application/json": {
                "success": true
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tickets/{id}/update_timer_entry": {
      "put": {
        "description": "Required permission: Ticket Timers - Overview\n",
        "summary": "Updates an existing Ticket Timer",
        "tags": [
          "Ticket"
        ],
        "operationId": "UpdatesanexistingTicketTimer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TicketsUpdateTimerEntryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsUpdateTimerEntryResponse"
            },
            "examples": {
              "application/json": {
                "ticket_id": 29,
                "id": 3,
                "notes": "Updated Notes",
                "user_id": 1,
                "toggl_id": null,
                "start_time": "2013-08-06T13:41:15.000Z",
                "end_time": "2013-08-06T14:41:15.000Z",
                "recorded": false,
                "created_at": "2019-11-05T14:58:58.047Z",
                "updated_at": "2019-11-05T14:58:58.062Z",
                "billable": false,
                "product_id": 2,
                "comment_id": null,
                "ticket_line_item_id": null,
                "active_duration": null
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tickets/{id}/charge_timer_entry": {
      "post": {
        "description": "Required permission: Ticket Timers - Overview\n",
        "summary": "Charges a Ticket Timer",
        "tags": [
          "Ticket"
        ],
        "operationId": "ChargesaTicketTimer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TimerEntryId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsChargeTimerEntryResponse"
            },
            "examples": {
              "application/json": {
                "ticket_id": 29,
                "id": 3,
                "notes": "Updated Notes",
                "user_id": 1,
                "toggl_id": null,
                "start_time": "2013-08-06T13:41:15.000Z",
                "end_time": "2013-08-06T14:41:15.000Z",
                "recorded": true,
                "created_at": "2019-11-05T14:58:58.047Z",
                "updated_at": "2019-11-05T14:58:58.062Z",
                "billable": false,
                "product_id": 2,
                "comment_id": null,
                "ticket_line_item_id": null,
                "active_duration": null
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/timelogs": {
      "get": {
        "description": "Users with permission \"Timelogs - Manage\" may see timelogs for any/all users.\nOtherwise, results scoped to current user.\n",
        "summary": "Returns a paginated list of Timelogs",
        "tags": [
          "Timelog"
        ],
        "operationId": "ReturnsapaginatedlistofTimelogs",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns Timelogs that belong to a User"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TimelogsResponse"
            },
            "examples": {
              "application/json": {
                "timelogs": [
                  {
                    "id": 1,
                    "in_at": "2019-11-01T12:50:26.882Z",
                    "out_at": null,
                    "account_id": 1,
                    "user_id": 1,
                    "in_note": null,
                    "out_note": null,
                    "created_at": "2019-11-01T12:50:26.934Z",
                    "updated_at": "2019-11-01T12:50:26.934Z",
                    "lunch": null,
                    "manually_updated": null
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Users with permission \"Timelogs - Manage\" may see timelogs for any/all users.\nOtherwise, results scoped to current user.\n",
        "summary": "Updates a Timelog",
        "tags": [
          "Timelog"
        ],
        "operationId": "UpdatesaTimelog",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TimelogsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TimelogsResponse2"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "in_at": "2019-11-01T12:50:26.882Z",
                "out_at": null,
                "account_id": 1,
                "user_id": 1,
                "in_note": null,
                "out_note": null,
                "created_at": "2019-11-01T12:50:26.934Z",
                "updated_at": "2019-11-01T12:50:26.934Z",
                "lunch": null,
                "manually_updated": null
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/timelogs/last": {
      "get": {
        "description": "Users with permission \"Timelogs - Manage\" may see timelogs for any/all users.\nOtherwise, results scoped to current user.\n",
        "summary": "Returns last Timelog",
        "tags": [
          "Timelog"
        ],
        "operationId": "ReturnslastTimelog",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns Timelogs that belong to a User. The default is current user ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TimelogsLastResponse"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "in_at": "2019-11-01T12:50:26.882Z",
                "out_at": null,
                "account_id": 1,
                "user_id": 1,
                "in_note": null,
                "out_note": null,
                "created_at": "2019-11-01T12:50:26.934Z",
                "updated_at": "2019-11-01T12:50:26.934Z",
                "lunch": null,
                "manually_updated": null
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user_devices": {
      "post": {
        "description": "Creates a User Device",
        "summary": "Creates a User Device",
        "tags": [
          "User Device"
        ],
        "operationId": "CreatesaUserDevice",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDevicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/UserDevicesResponse"
            },
            "examples": {
              "application/json": {
                "user_id": 1,
                "registration_token_gcm": "new_token",
                "id": 5,
                "device_uuid": "u12345",
                "account_id": null,
                "name": null,
                "device_name": null,
                "system_name": null,
                "model": null,
                "screen_size": null,
                "disabled": false,
                "created_at": "2019-11-04T08:18:32.476Z",
                "updated_at": "2019-11-04T08:18:32.490Z"
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/UserDevicesResponse1"
            },
            "examples": {
              "application/json": {
                "message": "Missing params device_uuid"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user_devices/{id}": {
      "get": {
        "description": "Retrieves an existing User Device by UUID",
        "summary": "Retrieves an existing User Device by UUID",
        "tags": [
          "User Device"
        ],
        "operationId": "RetrievesanexistingUserDevicebyUUID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "User Device UUID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/UserDevicesResponse"
            },
            "examples": {
              "application/json": {
                "user_id": 1,
                "registration_token_gcm": "new_token",
                "id": 5,
                "device_uuid": "u12345",
                "account_id": null,
                "name": null,
                "device_name": null,
                "system_name": null,
                "model": null,
                "screen_size": null,
                "disabled": false,
                "created_at": "2019-11-04T08:18:32.476Z",
                "updated_at": "2019-11-04T08:18:32.490Z"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Updates an existing User Device by UUID",
        "summary": "Updates an existing User Device by UUID",
        "tags": [
          "User Device"
        ],
        "operationId": "UpdatesanexistingUserDevicebyUUID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Device UUID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDevicesRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/UserDevicesResponse"
            },
            "examples": {
              "application/json": {
                "user_id": 1,
                "registration_token_gcm": "new_token",
                "id": 5,
                "device_uuid": "u12345",
                "account_id": null,
                "name": null,
                "device_name": null,
                "system_name": null,
                "model": null,
                "screen_size": null,
                "disabled": false,
                "created_at": "2019-11-04T08:18:32.476Z",
                "updated_at": "2019-11-04T08:18:32.490Z"
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/me": {
      "get": {
        "description": "Returns the current user",
        "summary": "Returns the current user",
        "tags": [
          "User"
        ],
        "operationId": "Returnsthecurrentuser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/MeResponse"
            },
            "examples": {
              "application/json": {
                "user_token": "3746f72b-9852-4d1a-84e9-eedb5c50abcd",
                "user_email": "joedoe@example.com",
                "user_name": "Joe Doe",
                "user_id": 1,
                "admin": true,
                "can_use_app": true,
                "two_factor_required": false,
                "subdomain": "testsubdomainwi1",
                "default_location": null,
                "enable_multi_locations": false,
                "locations_allowed": [],
                "permissions": {
                  "asset": {
                    "read": true,
                    "write": true,
                    "delete": true
                  },
                  "customer": {
                    "read": true,
                    "write": true,
                    "delete": true
                  },
                  "ticket": {
                    "read": true,
                    "write": true,
                    "delete": true
                  },
                  "invoice": {
                    "read": true,
                    "write": true,
                    "delete": true
                  },
                  "payment": {
                    "read": true,
                    "write": true,
                    "delete": true
                  },
                  "worksheet": {
                    "add": true,
                    "manage": true,
                    "delete": true
                  },
                  "script": {
                    "execute": true
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "description": "Returns a paginated list of Users",
        "summary": "Returns a paginated list of Users",
        "tags": [
          "User"
        ],
        "operationId": "ReturnsapaginatedlistofUsers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/UsersResponse"
            },
            "examples": {
              "application/json": {
                "users": [
                  [
                    1,
                    "Joe Doe"
                  ]
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/otp_login": {
      "post": {
        "description": "Authorize a User with One Time Password",
        "summary": "Authorize a User with One Time Password",
        "tags": [
          "User"
        ],
        "operationId": "AuthorizeaUserwithOneTimePassword",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Time-based one-time password from your authentication application.",
            "schema": {
              "$ref": "#/definitions/OtpLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/OtpLoginResponse"
            },
            "examples": {
              "application/json": {
                "login": true,
                "session_token": "1cbe0553-9fcd-4035-8e69-52792e16d489",
                "token_expiration": "2019-12-01T11:39:33.042Z",
                "instructions": "Save the session token somewhere safe and send that with the api_key for all future web requests. It goes in a header called Authorization2FAToken."
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/OtpLoginResponse1"
            },
            "examples": {
              "application/json": {
                "login": false,
                "instructions": "Your multi-factor authentication attempt failed for the 6th time, please open Syncro in browser and recover MFA."
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Retrieves an existing User by ID",
        "summary": "Retrieves an existing User by ID",
        "tags": [
          "User"
        ],
        "operationId": "RetrievesanexistingUserbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/UsersResponse2"
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 1,
                  "email": "username@example.com",
                  "full_name": "User Name",
                  "created_at": "2019-11-01T11:39:20.554Z",
                  "updated_at": "2019-11-01T11:39:20.554Z",
                  "group": "Admins",
                  "admin": true,
                  "color": "55b932"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/vendors": {
      "get": {
        "description": "Required permission: Vendors - List\n",
        "summary": "Returns a paginated list of Vendors",
        "tags": [
          "Vendor"
        ],
        "operationId": "ReturnsapaginatedlistofVendors",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 100 result"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/VendorsResponse"
            },
            "examples": {
              "application/json": {
                "vendors": [
                  {
                    "id": 1,
                    "name": "Vendor Name",
                    "rep_first_name": "Bill",
                    "rep_last_name": "Sales",
                    "email": "info@candswholes.com",
                    "phone": "603-344-5555",
                    "account_number": null,
                    "created_at": "2019-11-05T16:11:12.409Z",
                    "updated_at": "2019-11-05T16:11:12.409Z",
                    "address": "44 Billings Circle",
                    "city": "Keene",
                    "state": "NH",
                    "zip": "03455",
                    "website": "www.candswholes.com",
                    "notes": "White label trucks"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Vendors - New\n",
        "summary": "Creates a Vendor",
        "tags": [
          "Vendor"
        ],
        "operationId": "CreatesaVendor",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/VendorsResponse2"
            },
            "examples": {
              "application/json": {
                "vendor": {
                  "id": 1,
                  "name": "Vendor Name",
                  "rep_first_name": "Bill",
                  "rep_last_name": "Sales",
                  "email": "info@candswholes.com",
                  "phone": "603-344-5555",
                  "account_number": null,
                  "created_at": "2019-11-05T16:11:12.409Z",
                  "updated_at": "2019-11-05T16:11:12.409Z",
                  "address": "44 Billings Circle",
                  "city": "Keene",
                  "state": "NH",
                  "zip": "03455",
                  "website": "www.candswholes.com",
                  "notes": "White label trucks"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/VendorsResponse3"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Email is not an email"
                ],
                "params": {
                  "name": "Vendor1",
                  "email": "broken_emailmail.com"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/vendors/{id}": {
      "get": {
        "description": "Required permission: Vendors - View Details\n",
        "summary": "Retrieves a Vendor Page",
        "tags": [
          "Vendor"
        ],
        "operationId": "RetrievesaVendorPage",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/VendorsResponse5"
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Required permission: Vendors - Edit\n",
        "summary": "Updates an existing Vendor page by ID",
        "tags": [
          "Vendor"
        ],
        "operationId": "UpdatesanexistingVendorpagebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/VendorsResponse2"
            },
            "examples": {
              "application/json": {
                "vendor": {
                  "id": 7,
                  "name": "New name",
                  "rep_first_name": "Bill",
                  "rep_last_name": "Sales",
                  "email": "info@candswholes.com",
                  "phone": "603-344-5555",
                  "account_number": null,
                  "created_at": "2019-11-06T08:52:42.139Z",
                  "updated_at": "2019-11-06T08:52:42.169Z",
                  "address": "44 Billings Circle",
                  "city": "Keene",
                  "state": "NH",
                  "zip": "03455",
                  "website": "www.candswholes.com",
                  "notes": "White label trucks"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Not found",
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/VendorsResponse7"
            },
            "examples": {
              "application/json": {
                "success": false,
                "message": [
                  "Email is not an email"
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/wiki_pages": {
      "get": {
        "description": "Required permission: Documentation - Allow Usage\n",
        "summary": "Returns a paginated list of Wiki Pages",
        "tags": [
          "Wiki Page"
        ],
        "operationId": "ReturnsapaginatedlistofWikiPages",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 100 result"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/WikiPagesResponse"
            },
            "examples": {
              "application/json": {
                "wiki_pages": [
                  {
                    "id": 1,
                    "account_id": 1,
                    "name": "API Doc",
                    "slug": "api-doc",
                    "body": "a sample body",
                    "interpolated_body": "a sample body"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permission: Documentation - Create\n",
        "summary": "Creates a Wiki Page",
        "tags": [
          "Wiki Page"
        ],
        "operationId": "CreatesaWikiPage",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Wiki Page object that needs to be added",
            "schema": {
              "$ref": "#/definitions/WikiPagesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/WikiPagesResponse2"
            },
            "examples": {
              "application/json": {
                "wiki_page": {
                  "id": 1,
                  "account_id": 1,
                  "name": "API Doc",
                  "slug": "api-doc",
                  "body": "a sample body",
                  "interpolated_body": "a sample body"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/WikiPagesResponse3"
            },
            "examples": {
              "application/json": {
                "success": false,
                "errors": [
                  "Body can't be blank",
                  "Name can't be blank"
                ],
                "params": {
                  "name": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/wiki_pages/{id}": {
      "get": {
        "description": "Required permission: Documentation - Allow Usage\n",
        "summary": "Retrieves a Wiki Page",
        "tags": [
          "Wiki Page"
        ],
        "operationId": "RetrievesaWikiPage",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/WikiPagesResponse5"
            },
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Required permission: Documentation - Edit\n",
        "summary": "Updates an existing Wiki Page by ID",
        "tags": [
          "Wiki Page"
        ],
        "operationId": "UpdatesanexistingWikiPagebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Wiki Page object that needs to be updated",
            "schema": {
              "$ref": "#/definitions/WikiPagesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/WikiPagesResponse2"
            },
            "examples": {
              "application/json": {
                "wiki_page": {
                  "id": 1,
                  "account_id": 1,
                  "name": "API Doc",
                  "slug": "api-doc",
                  "body": "a sample body",
                  "interpolated_body": "a sample body"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/WikiPagesResponse3"
            },
            "examples": {
              "application/json": {
                "success": false,
                "errors": [
                  "Name can't be blank"
                ],
                "params": {
                  "name": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "Required permission: Documentation - Delete\n",
        "summary": "Deletes a Wiki Page by ID",
        "tags": [
          "Wiki Page"
        ],
        "operationId": "DeletesaWikiPagebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {}
          },
          "404": {
            "description": "Invalid request",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tickets/{ticket_id}/worksheet_results": {
      "get": {
        "description": "Required permissions: \"Tickets - View Details\" or \"Tickets - View 'Their Ticket' Details (assigned to them)\"\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Returns a paginated list of Worksheet Results",
        "tags": [
          "Worksheet Result"
        ],
        "operationId": "ReturnsapaginatedlistofWorksheetResults",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ticket_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Returns provided page of results, each 'page' contains 25 results"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsWorksheetResultsResponse"
            },
            "examples": {
              "application/json": {
                "worksheet_results": [
                  {
                    "id": 1,
                    "worksheet_template_id": 1,
                    "name": "Worksheet Result from a Template",
                    "public": true,
                    "complete": null,
                    "required": false,
                    "field_list": [
                      {
                        "name": "section",
                        "slug": "section",
                        "id": 1,
                        "position": 0,
                        "history": []
                      },
                      {
                        "name": "check",
                        "slug": "check",
                        "id": 2,
                        "position": 1,
                        "history": []
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Required permissions: \"Tickets - View Details\" or \"Tickets - View 'Their Ticket' Details (assigned to them)\"\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Creates Worksheet Result",
        "tags": [
          "Worksheet Result"
        ],
        "operationId": "CreatesWorksheetResult",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ticket_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TicketsWorksheetResultsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsWorksheetResultsResponse1"
            },
            "examples": {
              "application/json": {
                "worksheet_result": {
                  "id": 1,
                  "worksheet_template_id": 1,
                  "name": "Worksheet Result from a Template",
                  "public": true,
                  "complete": null,
                  "required": false,
                  "field_list": [
                    {
                      "name": "section",
                      "slug": "section",
                      "id": 1,
                      "position": 0,
                      "history": []
                    },
                    {
                      "name": "check",
                      "slug": "check",
                      "id": 2,
                      "position": 1,
                      "history": []
                    }
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tickets/{ticket_id}/worksheet_results/{id}": {
      "get": {
        "description": "Required permissions: \"Tickets - View Details\" or \"Tickets - View 'Their Ticket' Details (assigned to them)\"\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Retrieves a Worksheet Result by ID",
        "tags": [
          "Worksheet Result"
        ],
        "operationId": "RetrievesaWorksheetResultbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ticket_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TicketsWorksheetResultsResponse1"
            },
            "examples": {
              "application/json": {
                "worksheet_result": {
                  "id": 1,
                  "worksheet_template_id": 1,
                  "name": "Worksheet Result from a Template",
                  "public": true,
                  "complete": null,
                  "required": false,
                  "field_list": [
                    {
                      "name": "section",
                      "slug": "section",
                      "id": 1,
                      "position": 0,
                      "history": []
                    },
                    {
                      "name": "check",
                      "slug": "check",
                      "id": 2,
                      "position": 1,
                      "history": []
                    }
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Required permissions: \"Tickets - View Details\" or \"Tickets - View 'Their Ticket' Details (assigned to them)\"\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Updates a Worksheet Result",
        "tags": [
          "Worksheet Result"
        ],
        "operationId": "UpdatesaWorksheetResult",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ticket_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TicketsWorksheetResultsRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "Required permissions: \"Tickets - View Details\" or \"Tickets - View 'Their Ticket' Details (assigned to them)\"\nSingle-Customer Users can only access own tickets.\n",
        "summary": "Deletes a Worksheet Result",
        "tags": [
          "Worksheet Result"
        ],
        "operationId": "DeletesaWorksheetResult",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ticket_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "AppointmentTypesResponse": {
      "title": "AppointmentTypesResponse",
      "example": {
        "appointment_types": [
          {
            "id": 1,
            "account_id": 1,
            "name": "Office Hours",
            "email_instructions": "string",
            "location_type": "manual_entry",
            "location_hard_code": null,
            "created_at": "2019-10-16T19:29:33.397Z",
            "updated_at": "2019-10-16T19:29:33.397Z",
            "buffer": null,
            "appointment_reminders_schedule_id": null
          }
        ]
      },
      "type": "object",
      "properties": {
        "appointment_types": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "appointment_types"
      ]
    },
    "AppointmentTypesRequest": {
      "title": "AppointmentTypesRequest",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email_instructions": {
          "type": "string"
        },
        "location_type": {
          "type": "integer",
          "format": "int32"
        },
        "location_hard_code": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "AppointmentTypesResponse2": {
      "title": "AppointmentTypesResponse2",
      "example": {
        "appointment_type": {
          "id": 1,
          "account_id": 1,
          "name": "Office Hours",
          "email_instructions": "string",
          "location_type": "manual_entry",
          "location_hard_code": null,
          "created_at": "2019-10-16T19:29:33.397Z",
          "updated_at": "2019-10-16T19:29:33.397Z",
          "buffer": null,
          "appointment_reminders_schedule_id": null
        }
      },
      "type": "object",
      "properties": {
        "appointment_type": {
          "type": "object"
        }
      },
      "required": [
        "appointment_type"
      ]
    },
    "AppointmentTypesResponse3": {
      "title": "AppointmentTypesResponse3",
      "example": {
        "record": {
          "id": null,
          "account_id": 1,
          "name": "",
          "email_instructions": null,
          "location_type": null,
          "location_hard_code": null,
          "created_at": null,
          "updated_at": null,
          "buffer": null,
          "appointment_reminders_schedule_id": null
        },
        "errors": "Name can't be blank,Location type can't be blank"
      },
      "type": "object",
      "properties": {
        "record": {
          "type": "object"
        },
        "errors": {
          "type": "string"
        }
      },
      "required": [
        "record",
        "errors"
      ]
    },
    "AppointmentTypesResponse5": {
      "title": "AppointmentTypesResponse5",
      "example": {
        "id": 1,
        "account_id": 1,
        "name": "Office Hours",
        "email_instructions": "string",
        "location_type": "manual_entry",
        "location_hard_code": null,
        "created_at": "2019-10-16T19:29:33.397Z",
        "updated_at": "2019-10-16T19:29:33.397Z",
        "buffer": null,
        "appointment_reminders_schedule_id": null
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "account_id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "email_instructions": {
          "type": "string"
        },
        "location_type": {
          "type": "string"
        },
        "location_hard_code": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "buffer": {
          "type": "string"
        },
        "appointment_reminders_schedule_id": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "account_id",
        "name",
        "email_instructions",
        "location_type",
        "location_hard_code",
        "created_at",
        "updated_at",
        "buffer",
        "appointment_reminders_schedule_id"
      ]
    },
    "AppointmentTypesRequest1": {
      "title": "AppointmentTypesRequest1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email_instructions": {
          "type": "string"
        },
        "location_type": {
          "type": "integer",
          "format": "int32"
        },
        "location_hard_code": {
          "type": "string"
        }
      }
    },
    "AppointmentsResponse": {
      "title": "AppointmentsResponse",
      "example": {
        "appointments": [
          {
            "appointment": {
              "id": 3,
              "summary": "Appointment API",
              "description": "Notes:\n Appointment Description\n\n Contact: \nWalkin Customer \n\n Details: \nCustomer Information: \n Walkin Customer\n  Phone: 123 - walkin@somedomain.com",
              "customer_id": 1,
              "created_at": "2019-10-20T01:28:50.580Z",
              "updated_at": "2019-10-20T01:28:50.580Z",
              "start_at": "2019-10-21T01:28:00.000Z",
              "end_at": "2019-10-21T05:28:00.000Z",
              "duration": 4,
              "location": "In Shop",
              "ticket_id": null,
              "appointment_location_type": null,
              "start_at_label": "Sun 10-20-19 06:28 PM",
              "all_day": null,
              "ticket": null,
              "do_not_email": "1",
              "customer": {
                "id": 1,
                "firstname": "Walkin",
                "lastname": "Customer",
                "fullname": "Walkin Customer",
                "business_name": null,
                "email": "walkin@somedomain.com",
                "phone": "123",
                "mobile": null,
                "created_at": "2019-10-20T01:28:37.187Z",
                "updated_at": "2019-10-20T01:28:37.187Z",
                "pdf_url": null,
                "address": null,
                "address_2": null,
                "city": null,
                "state": null,
                "zip": null,
                "latitude": null,
                "longitude": null,
                "notes": null,
                "get_sms": false,
                "opt_out": false,
                "disabled": false,
                "no_email": true,
                "location_name": null,
                "location_id": null,
                "properties": {},
                "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=dxbkw6x44de91dum7fua",
                "tax_rate_id": null,
                "notification_email": null,
                "invoice_cc_emails": null,
                "invoice_term_id": null,
                "referred_by": null,
                "ref_customer_id": null,
                "business_and_full_name": "Walkin Customer",
                "business_then_name": "Walkin Customer",
                "contacts": []
              }
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "appointments": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "appointments"
      ]
    },
    "AppointmentsRequest": {
      "title": "AppointmentsRequest",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "user_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "ticket_id": {
          "type": "integer",
          "format": "int32"
        },
        "do_not_email": {
          "type": "boolean"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "start_at": {
          "type": "string",
          "format": "date-time"
        },
        "end_at": {
          "type": "string",
          "format": "date-time"
        },
        "location": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "email_customer": {
          "type": "boolean"
        },
        "appointment_duration": {
          "type": "string"
        },
        "appointment_type_id": {
          "type": "integer",
          "format": "int32"
        },
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "all_day": {
          "type": "boolean"
        }
      },
      "required": [
        "start_at",
        "summary"
      ]
    },
    "AppointmentsResponse2": {
      "title": "AppointmentsResponse2",
      "example": {
        "appointment": {
          "id": 3,
          "summary": "Appointment API",
          "description": "Notes:\n Appointment Description\n\n Contact: \nWalkin Customer \n\n Details: \nCustomer Information: \n Walkin Customer\n  Phone: 123 - walkin@somedomain.com",
          "customer_id": 1,
          "created_at": "2019-10-20T01:28:50.580Z",
          "updated_at": "2019-10-20T01:28:50.580Z",
          "start_at": "2019-10-21T01:28:00.000Z",
          "end_at": "2019-10-21T05:28:00.000Z",
          "duration": 4,
          "location": "In Shop",
          "ticket_id": null,
          "appointment_location_type": null,
          "start_at_label": "Sun 10-20-19 06:28 PM",
          "all_day": null,
          "ticket": null,
          "do_not_email": "1",
          "customer": {
            "id": 1,
            "firstname": "Walkin",
            "lastname": "Customer",
            "fullname": "Walkin Customer",
            "business_name": null,
            "email": "walkin@somedomain.com",
            "phone": "123",
            "mobile": null,
            "created_at": "2019-10-20T01:28:37.187Z",
            "updated_at": "2019-10-20T01:28:37.187Z",
            "pdf_url": null,
            "address": null,
            "address_2": null,
            "city": null,
            "state": null,
            "zip": null,
            "latitude": null,
            "longitude": null,
            "notes": null,
            "get_sms": false,
            "opt_out": false,
            "disabled": false,
            "no_email": true,
            "location_name": null,
            "location_id": null,
            "properties": {},
            "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=dxbkw6x44de91dum7fua",
            "tax_rate_id": null,
            "notification_email": null,
            "invoice_cc_emails": null,
            "invoice_term_id": null,
            "referred_by": null,
            "ref_customer_id": null,
            "business_and_full_name": "Walkin Customer",
            "business_then_name": "Walkin Customer",
            "contacts": []
          }
        }
      },
      "type": "object",
      "properties": {
        "appointment": {
          "type": "object"
        }
      },
      "required": [
        "appointment"
      ]
    },
    "AppointmentsResponse3": {
      "title": "AppointmentsResponse3",
      "example": {
        "success": false,
        "error": "Summary can't be blank,Start at can't be blank,End at can't be blank",
        "message": "Summary can't be blank,Start at can't be blank,End at can't be blank",
        "params": {
          "description": "Incomplete appointment"
        }
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "success",
        "error",
        "message",
        "params"
      ]
    },
    "AppointmentsResponse5": {
      "title": "AppointmentsResponse5",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "start_at": {
          "type": "string"
        },
        "end_at": {
          "type": "string"
        },
        "duration": {
          "type": "number",
          "format": "double"
        },
        "location": {
          "type": "string"
        },
        "ticket_id": {
          "type": "integer",
          "format": "int32"
        },
        "appointment_location_type": {
          "type": "string"
        },
        "start_at_label": {
          "type": "string"
        },
        "all_day": {
          "type": "boolean"
        },
        "ticket": {
          "type": "object"
        },
        "customer": {
          "$ref": "#/definitions/Customer"
        }
      }
    },
    "Customer": {
      "title": "Customer",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "fullname": {
          "type": "string"
        },
        "business_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "pdf_url": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address_2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "notes": {
          "type": "string"
        },
        "get_sms": {
          "type": "boolean"
        },
        "opt_out": {
          "type": "boolean"
        },
        "disabled": {
          "type": "boolean"
        },
        "no_email": {
          "type": "boolean"
        },
        "location_name": {
          "type": "string"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "type": "object"
        },
        "online_profile_url": {
          "type": "string"
        },
        "referred_by": {
          "type": "integer",
          "format": "int32"
        },
        "ref_customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "tax_rate_id": {
          "type": "string"
        },
        "notification_email": {
          "type": "string"
        },
        "invoice_cc_emails": {
          "type": "string"
        },
        "invoice_term_id": {
          "type": "string"
        },
        "business_and_full_name": {
          "type": "string"
        },
        "business_then_name": {
          "type": "string"
        },
        "contacts": {
          "type": "object"
        }
      }
    },
    "AppointmentsRequest1": {
      "title": "AppointmentsRequest1",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "user_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "ticket_id": {
          "type": "integer",
          "format": "int32"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "start_at": {
          "type": "string",
          "format": "date-time"
        },
        "end_at": {
          "type": "string",
          "format": "date-time"
        },
        "location": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "email_customer": {
          "type": "boolean"
        },
        "appointment_duration": {
          "type": "string"
        },
        "appointment_type_id": {
          "type": "integer",
          "format": "int32"
        },
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "all_day": {
          "type": "boolean"
        }
      },
      "required": [
        "start_at"
      ]
    },
    "CustomerAssetsResponse": {
      "title": "CustomerAssetsResponse",
      "example": {
        "assets": [
          {
            "id": 7,
            "name": "New Name",
            "customer_id": 1,
            "contact_id": null,
            "created_at": "2019-10-21T04:40:27.117Z",
            "updated_at": "2019-10-21T04:40:27.190Z",
            "properties": {
              "OS": 4,
              "Size": "Medium"
            },
            "asset_type": "Dodrio",
            "asset_serial": "NewSerial",
            "external_rmm_link": null,
            "customer": {
              "id": 1,
              "firstname": "Walkin",
              "lastname": "Customer",
              "fullname": "Walkin Customer",
              "business_name": null,
              "email": "walkin@somedomain.com",
              "phone": "123",
              "mobile": null,
              "created_at": "2019-10-21T04:40:14.156Z",
              "updated_at": "2019-10-21T04:40:14.156Z",
              "pdf_url": null,
              "address": null,
              "address_2": null,
              "city": null,
              "state": null,
              "zip": null,
              "latitude": null,
              "longitude": null,
              "notes": null,
              "get_sms": false,
              "opt_out": false,
              "disabled": false,
              "no_email": true,
              "location_id": null,
              "properties": {},
              "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=j2apoteiivxcuygw1nvc",
              "tax_rate_id": null,
              "notification_email": null,
              "invoice_cc_emails": null,
              "invoice_term_id": null,
              "referred_by": null,
              "ref_customer_id": null,
              "business_and_full_name": "Walkin Customer",
              "business_then_name": "Walkin Customer"
            },
            "rmm_links": [],
            "rmm_store": {
              "id": 4,
              "asset_id": 7,
              "account_id": 1,
              "triggers": {
                "bsod_triggered": "false",
                "time_triggered": "false",
                "no_av_triggered": "false",
                "defrag_triggered": "false",
                "firewall_triggered": "false",
                "app_crash_triggered": "false",
                "low_hd_space_triggered": "false",
                "smart_failure_triggered": "false",
                "device_manager_triggered": "false",
                "agent_offline_triggered": "false"
              },
              "windows_updates": {},
              "emsisoft": {},
              "general": {},
              "created_at": "2019-10-21T04:40:27.201Z",
              "updated_at": "2019-10-21T04:40:27.201Z",
              "override_alert_agent_offline_mins": null,
              "override_alert_agent_rearm_after_mins": null,
              "override_low_hd_threshold": null,
              "override_autoresolve_offline_alert": null
            },
            "address": {
              "id": 1,
              "name": "Home",
              "customer_id": 1,
              "address_type_id": 2,
              "address1": "123 main st",
              "address2": "address2",
              "city": "city",
              "state": "state",
              "zip": "11111",
              "latitude": null,
              "longitude": null,
              "created_at": "2019-10-21T04:40:27.201Z",
              "updated_at": "2019-10-21T04:40:27.201Z",
              "account_id": 1
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "assets"
      ]
    },
    "CustomerAssetsRequest": {
      "title": "CustomerAssetsRequest",
      "type": "object",
      "properties": {
        "asset_type_name": {
          "type": "string"
        },
        "asset_type_id": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "asset_serial": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "CustomerAssetsResponse2": {
      "title": "CustomerAssetsResponse2",
      "example": {
        "asset": {
          "id": 7,
          "name": "New Name",
          "customer_id": 1,
          "contact_id": null,
          "created_at": "2019-10-21T04:40:27.117Z",
          "updated_at": "2019-10-21T04:40:27.190Z",
          "properties": {
            "OS": 4,
            "Size": "Medium"
          },
          "asset_type": "Dodrio",
          "asset_serial": "NewSerial",
          "external_rmm_link": null,
          "customer": {
            "id": 1,
            "firstname": "Walkin",
            "lastname": "Customer",
            "fullname": "Walkin Customer",
            "business_name": null,
            "email": "walkin@somedomain.com",
            "phone": "123",
            "mobile": null,
            "created_at": "2019-10-21T04:40:14.156Z",
            "updated_at": "2019-10-21T04:40:14.156Z",
            "pdf_url": null,
            "address": null,
            "address_2": null,
            "city": null,
            "state": null,
            "zip": null,
            "latitude": null,
            "longitude": null,
            "notes": null,
            "get_sms": false,
            "opt_out": false,
            "disabled": false,
            "no_email": true,
            "location_id": null,
            "properties": {},
            "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=j2apoteiivxcuygw1nvc",
            "tax_rate_id": null,
            "notification_email": null,
            "invoice_cc_emails": null,
            "invoice_term_id": null,
            "referred_by": null,
            "ref_customer_id": null,
            "business_and_full_name": "Walkin Customer",
            "business_then_name": "Walkin Customer"
          },
          "rmm_links": [],
          "rmm_store": {
            "id": 4,
            "asset_id": 7,
            "account_id": 1,
            "triggers": {
              "bsod_triggered": "false",
              "time_triggered": "false",
              "no_av_triggered": "false",
              "defrag_triggered": "false",
              "firewall_triggered": "false",
              "app_crash_triggered": "false",
              "low_hd_space_triggered": "false",
              "smart_failure_triggered": "false",
              "device_manager_triggered": "false",
              "agent_offline_triggered": "false"
            },
            "windows_updates": {},
            "emsisoft": {},
            "general": {},
            "created_at": "2019-10-21T04:40:27.201Z",
            "updated_at": "2019-10-21T04:40:27.201Z",
            "override_alert_agent_offline_mins": null,
            "override_alert_agent_rearm_after_mins": null,
            "override_low_hd_threshold": null,
            "override_autoresolve_offline_alert": null
          },
          "address": {
            "id": 1,
            "name": "Home",
            "customer_id": 1,
            "address_type_id": 2,
            "address1": "123 main st",
            "address2": "address2",
            "city": "city",
            "state": "state",
            "zip": "11111",
            "latitude": null,
            "longitude": null,
            "created_at": "2019-10-21T04:40:27.201Z",
            "updated_at": "2019-10-21T04:40:27.201Z",
            "account_id": 1
          }
        }
      },
      "type": "object",
      "properties": {
        "asset": {
          "type": "object"
        }
      },
      "required": [
        "asset"
      ]
    },
    "CustomerAssetsResponse3": {
      "title": "CustomerAssetsResponse3",
      "example": {
        "success": false,
        "message": [
          "Asset type can't be blank",
          "Name You must have an asset type first, please go create one"
        ],
        "params": {
          "name": "No type"
        }
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "success",
        "message",
        "params"
      ]
    },
    "CustomerAssetsResponse5": {
      "title": "CustomerAssetsResponse5",
      "type": "object",
      "properties": {
        "type": {},
        "properties": {
          "$ref": "#/definitions/Properties"
        }
      }
    },
    "Properties": {
      "title": "Properties",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "asset_id": {
          "type": "integer",
          "format": "int32"
        },
        "account_id": {
          "type": "integer",
          "format": "int32"
        },
        "type": {},
        "properties": {},
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "override_alert_agent_offline_mins": {},
        "override_alert_agent_rearm_after_mins": {},
        "override_low_hd_threshold": {},
        "override_autoresolve_offline_alert": {},
        "override_low_hd_thresholds": {}
      }
    },
    "CustomerAssetsResponse7": {
      "title": "CustomerAssetsResponse7",
      "example": {
        "success": false,
        "message": [
          "Asset type can't be blank"
        ]
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success",
        "message"
      ]
    },
    "CalleridResponse": {
      "title": "CalleridResponse",
      "example": {
        "data": {
          "name": "Walking Customer",
          "ticket_status": "Open"
        }
      },
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "required": [
        "data"
      ]
    },
    "ContactsResponse": {
      "title": "ContactsResponse",
      "example": {
        "contacts": [
          {
            "id": 1,
            "name": "Boba Fett",
            "address1": "8653 Ivan Flat",
            "address2": "Apt. 436",
            "city": "Tuanside",
            "state": "Delaware",
            "zip": "02293",
            "email": "jarviscorwin@hanefeeney.io",
            "phone": "657.325.3258 x330",
            "mobile": "(133) 358-5295",
            "latitude": 67.92905002829,
            "longitude": 91.6028665875294,
            "customer_id": 1,
            "account_id": 1,
            "notes": "Talk Jabba. (Tell that to Jabba.)",
            "created_at": "2019-10-22T08:47:09.723Z",
            "updated_at": "2019-10-22T08:47:09.723Z",
            "vendor_id": null,
            "properties": {},
            "opt_out": false,
            "extension": null
          }
        ],
        "meta": {
          "total_pages": 1,
          "total_entries": 1,
          "per_page": 50,
          "page": 1
        }
      },
      "type": "object",
      "properties": {
        "contacts": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": [
        "contacts",
        "meta"
      ]
    },
    "ContactsResponse1": {
      "title": "ContactsResponse1",
      "example": {
        "error": "Not authorized. Please ask account admin to update your group permissions."
      },
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      },
      "required": [
        "error"
      ]
    },
    "ContactsRequest": {
      "title": "ContactsRequest",
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        }
      },
      "required": [
        "customer_id"
      ]
    },
    "ContactsResponse3": {
      "title": "ContactsResponse3",
      "example": {
        "id": 1,
        "name": "Boba Fett",
        "address1": "8653 Ivan Flat",
        "address2": "Apt. 436",
        "city": "Tuanside",
        "state": "Delaware",
        "zip": "02293",
        "email": "jarviscorwin@hanefeeney.io",
        "phone": "657.325.3258 x330",
        "mobile": "(133) 358-5295",
        "latitude": 67.92905002829,
        "longitude": 91.6028665875294,
        "customer_id": 1,
        "account_id": 1,
        "notes": "Talk Jabba. (Tell that to Jabba.)",
        "created_at": "2019-10-22T08:47:09.723Z",
        "updated_at": "2019-10-22T08:47:09.723Z",
        "vendor_id": null,
        "properties": {},
        "opt_out": false,
        "extension": null
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "account_id": {
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "vendor_id": {
          "type": "string"
        },
        "properties": {
          "type": "object"
        },
        "opt_out": {
          "type": "boolean"
        },
        "extension": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "address1",
        "address2",
        "city",
        "state",
        "zip",
        "email",
        "phone",
        "mobile",
        "latitude",
        "longitude",
        "customer_id",
        "account_id",
        "notes",
        "created_at",
        "updated_at",
        "vendor_id",
        "properties",
        "opt_out",
        "extension"
      ]
    },
    "ContactsResponse5": {
      "title": "ContactsResponse5",
      "example": {
        "message": "Not found"
      },
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "ContactsResponse6": {
      "title": "ContactsResponse6",
      "example": {
        "record": {
          "id": null,
          "name": "Bad Email",
          "address1": null,
          "address2": null,
          "city": null,
          "state": null,
          "zip": null,
          "email": "xxx",
          "phone": null,
          "mobile": null,
          "latitude": null,
          "longitude": null,
          "customer_id": 1,
          "account_id": 1,
          "notes": null,
          "created_at": null,
          "updated_at": null,
          "vendor_id": null,
          "properties": {},
          "opt_out": false,
          "extension": null,
          "processed_phone": null,
          "processed_mobile": null
        },
        "errors": "Email is not an email"
      },
      "type": "object",
      "properties": {
        "record": {
          "type": "object"
        },
        "errors": {
          "type": "string"
        }
      },
      "required": [
        "record",
        "errors"
      ]
    },
    "ContactsResponse8": {
      "title": "ContactsResponse8",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitud": {
          "type": "number",
          "format": "double"
        },
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "account_id": {
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "vendor_id": {
          "type": "number",
          "format": "double"
        },
        "properties": {
          "type": "object"
        },
        "opt_out": {
          "type": "boolean"
        },
        "extension": {
          "type": "string"
        }
      }
    },
    "ContactsRequest1": {
      "title": "ContactsRequest1",
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "ContractsResponse": {
      "title": "ContractsResponse",
      "example": {
        "contracts": [
          {
            "id": 1,
            "account_id": 1,
            "customer_id": 1,
            "name": "Support Tier 1",
            "contract_amount": "30k",
            "start_date": "2019-10-23T00:00:00.000Z",
            "end_date": "2020-10-22T00:00:00.000Z",
            "primary_contact": null,
            "description": "Contract Description",
            "created_at": "2019-10-22T10:00:55.392Z",
            "updated_at": "2019-10-22T10:00:55.392Z",
            "status": "Opportunity",
            "likelihood": 30,
            "apply_to_all": false,
            "sla_id": null
          }
        ],
        "meta": {
          "total_pages": 1,
          "total_entries": 1,
          "per_page": 50,
          "page": 1
        }
      },
      "type": "object",
      "properties": {
        "contracts": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": [
        "contracts",
        "meta"
      ]
    },
    "ContractsRequest": {
      "title": "ContractsRequest",
      "type": "object",
      "properties": {
        "contract_amount": {
          "type": "string"
        },
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "start_date": {
          "type": "string",
          "format": "date-time"
        },
        "end_date": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "primary_contact": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "likelihood": {
          "type": "integer",
          "format": "int32"
        },
        "apply_to_all": {
          "type": "boolean"
        },
        "sla_id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "customer_id"
      ]
    },
    "ContractsResponse2": {
      "title": "ContractsResponse2",
      "example": {
        "id": 1,
        "account_id": 1,
        "customer_id": 1,
        "name": "Support Tier 1",
        "contract_amount": "30k",
        "start_date": "2019-10-23T00:00:00.000Z",
        "end_date": "2020-10-22T00:00:00.000Z",
        "primary_contact": null,
        "description": "Contract Description",
        "created_at": "2019-10-22T10:00:55.392Z",
        "updated_at": "2019-10-22T10:00:55.392Z",
        "status": "Opportunity",
        "likelihood": 30,
        "apply_to_all": false,
        "sla_id": null
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "account_id": {
          "type": "integer",
          "format": "int32"
        },
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "contract_amount": {
          "type": "string"
        },
        "start_date": {
          "type": "string"
        },
        "end_date": {
          "type": "string"
        },
        "primary_contact": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "likelihood": {
          "type": "integer",
          "format": "int32"
        },
        "apply_to_all": {
          "type": "boolean"
        },
        "sla_id": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "account_id",
        "customer_id",
        "name",
        "contract_amount",
        "start_date",
        "end_date",
        "primary_contact",
        "description",
        "created_at",
        "updated_at",
        "status",
        "likelihood",
        "apply_to_all",
        "sla_id"
      ]
    },
    "ContractsResponse3": {
      "title": "ContractsResponse3",
      "example": {
        "record": {
          "id": null,
          "account_id": 1,
          "customer_id": null,
          "name": "No Customer",
          "contract_amount": null,
          "start_date": null,
          "end_date": null,
          "primary_contact": null,
          "description": "No Customer",
          "created_at": null,
          "updated_at": null,
          "status": "Opportunity",
          "likelihood": 0,
          "apply_to_all": false,
          "sla_id": null
        },
        "errors": "Customer can't be blank"
      },
      "type": "object",
      "properties": {
        "record": {
          "type": "object"
        },
        "errors": {
          "type": "string"
        }
      },
      "required": [
        "record",
        "errors"
      ]
    },
    "CustomersResponse": {
      "title": "CustomersResponse",
      "example": {
        "customers": [
          {
            "id": 1,
            "firstname": "Walkin",
            "lastname": "Customer",
            "fullname": "Walkin Customer",
            "business_name": null,
            "email": "walkin@somedomain.com",
            "phone": "123",
            "mobile": null,
            "created_at": "2019-10-21T08:33:21.053Z",
            "updated_at": "2019-10-21T08:33:21.053Z",
            "pdf_url": null,
            "address": null,
            "address_2": null,
            "city": null,
            "state": null,
            "zip": null,
            "latitude": null,
            "longitude": null,
            "notes": null,
            "get_sms": false,
            "opt_out": false,
            "disabled": false,
            "no_email": true,
            "location_name": null,
            "location_id": null,
            "properties": {},
            "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=81lcr4ua1parftzvbgk9",
            "tax_rate_id": null,
            "notification_email": null,
            "invoice_cc_emails": null,
            "invoice_term_id": null,
            "referred_by": null,
            "ref_customer_id": null,
            "business_and_full_name": "Walkin Customer",
            "business_then_name": "Walkin Customer",
            "contacts": []
          }
        ],
        "meta": {
          "total_pages": 1,
          "total_entries": 1,
          "per_page": 100,
          "page": 1
        }
      },
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": [
        "customers",
        "meta"
      ]
    },
    "Customer1": {
      "title": "Customer1",
      "type": "object",
      "properties": {
        "business_name": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address_2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "get_sms": {
          "type": "boolean"
        },
        "opt_out": {
          "type": "boolean"
        },
        "no_email": {
          "type": "boolean"
        },
        "get_billing": {
          "type": "boolean"
        },
        "get_marketing": {
          "type": "boolean"
        },
        "get_reports": {
          "type": "boolean"
        },
        "ref_customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "referred_by": {
          "type": "string"
        },
        "tax_rate_id": {
          "type": "integer",
          "format": "int32"
        },
        "notification_email": {
          "type": "string"
        },
        "invoice_cc_emails": {
          "type": "string"
        },
        "invoice_term_id": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "type": "object"
        },
        "consent": {
          "type": "object"
        }
      }
    },
    "CustomersResponse2": {
      "title": "CustomersResponse2",
      "example": {
        "customer": {
          "id": 1,
          "firstname": "Walkin",
          "lastname": "Customer",
          "fullname": "Walkin Customer",
          "business_name": null,
          "email": "walkin@somedomain.com",
          "phone": "123",
          "mobile": null,
          "created_at": "2019-10-21T08:33:21.053Z",
          "updated_at": "2019-10-21T08:33:21.053Z",
          "pdf_url": null,
          "address": null,
          "address_2": null,
          "city": null,
          "state": null,
          "zip": null,
          "latitude": null,
          "longitude": null,
          "notes": null,
          "get_sms": false,
          "opt_out": false,
          "disabled": false,
          "no_email": true,
          "location_name": null,
          "location_id": null,
          "properties": {},
          "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=81lcr4ua1parftzvbgk9",
          "tax_rate_id": null,
          "notification_email": null,
          "invoice_cc_emails": null,
          "invoice_term_id": null,
          "referred_by": null,
          "ref_customer_id": null,
          "business_and_full_name": "Walkin Customer",
          "business_then_name": "Walkin Customer",
          "contacts": []
        }
      },
      "type": "object",
      "properties": {
        "customer": {
          "type": "object"
        }
      },
      "required": [
        "customer"
      ]
    },
    "CustomersResponse3": {
      "title": "CustomersResponse3",
      "example": {
        "success": false,
        "message": [
          "Email is not an email",
          "Email Only able to parse up to \"it is not an email\""
        ],
        "params": {
          "business_name": "Real Business",
          "firstname": "First",
          "lastname": "Last",
          "email": "it is not an email"
        }
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "success",
        "message",
        "params"
      ]
    },
    "CustomersResponse7": {
      "title": "CustomersResponse7",
      "example": {
        "success": false,
        "message": [
          "Email is not an email",
          "Email Only able to parse up to \"not an email\""
        ]
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success",
        "message"
      ]
    },
    "CustomersResponse8": {
      "title": "CustomersResponse8",
      "example": {
        "message": "Customer was deleted from the system."
      },
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "CustomersLatestResponse": {
      "title": "CustomersLatestResponse",
      "example": {
        "customer": {
          "id": 1,
          "firstname": "Walkin",
          "lastname": "Customer",
          "fullname": "Walkin Customer",
          "business_name": null,
          "email": "walkin@somedomain.com",
          "phone": "123",
          "mobile": null,
          "created_at": "2019-10-21T08:33:21.053Z",
          "updated_at": "2019-10-21T08:33:21.053Z",
          "pdf_url": null,
          "address": null,
          "address_2": null,
          "city": null,
          "state": null,
          "zip": null,
          "latitude": null,
          "longitude": null,
          "notes": null,
          "get_sms": false,
          "opt_out": false,
          "disabled": false,
          "no_email": true,
          "location_name": null,
          "location_id": null,
          "properties": {},
          "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=81lcr4ua1parftzvbgk9",
          "tax_rate_id": null,
          "notification_email": null,
          "invoice_cc_emails": null,
          "invoice_term_id": null,
          "referred_by": null,
          "ref_customer_id": null,
          "business_and_full_name": "Walkin Customer",
          "business_then_name": "Walkin Customer",
          "contacts": []
        }
      },
      "type": "object",
      "properties": {
        "customer": {
          "type": "object"
        }
      },
      "required": [
        "customer"
      ]
    },
    "CustomersAutocompleteResponse": {
      "title": "CustomersAutocompleteResponse",
      "example": {
        "customers": [
          {
            "id": 1,
            "firstname": "Walkin",
            "lastname": "Customer",
            "fullname": "Walkin Customer",
            "business_name": null,
            "email": "walkin@somedomain.com",
            "phone": "123",
            "mobile": null,
            "created_at": "2019-10-21T08:33:21.053Z",
            "updated_at": "2019-10-21T08:33:21.053Z",
            "pdf_url": null,
            "address": null,
            "address_2": null,
            "city": null,
            "state": null,
            "zip": null,
            "latitude": null,
            "longitude": null,
            "notes": null,
            "get_sms": false,
            "opt_out": false,
            "disabled": false,
            "no_email": true,
            "location_name": null,
            "location_id": null,
            "properties": {},
            "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=81lcr4ua1parftzvbgk9",
            "tax_rate_id": null,
            "notification_email": null,
            "invoice_cc_emails": null,
            "invoice_term_id": null,
            "referred_by": null,
            "ref_customer_id": null,
            "business_and_full_name": "Walkin Customer",
            "business_then_name": "Walkin Customer",
            "contacts": []
          }
        ]
      },
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "customers"
      ]
    },
    "EstimatesResponse": {
      "title": "EstimatesResponse",
      "example": {
        "estimates": [
          {
            "id": 1,
            "customer_id": 1,
            "customer_business_then_name": "Walkin Customer",
            "number": "MyString",
            "status": "Fresh",
            "created_at": "2019-10-22T11:45:33.866Z",
            "updated_at": "2019-10-22T11:45:33.866Z",
            "date": "2013-10-08T14:16:10.000Z",
            "subtotal": "9.99",
            "total": "9.99",
            "tax": "9.99",
            "ticket_id": null,
            "pdf_url": null,
            "location_id": null,
            "invoice_id": null,
            "employee": "MyString"
          }
        ],
        "meta": {
          "total_pages": 1,
          "page": 1
        }
      },
      "type": "object",
      "properties": {
        "estimates": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": [
        "estimates",
        "meta"
      ]
    },
    "EstimatesRequest": {
      "title": "EstimatesRequest",
      "type": "object",
      "properties": {
        "number": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "note": {
          "type": "string"
        },
        "status": {
          "description": "Valid values are Fresh, Draft, Approved, Declined.",
          "type": "string"
        },
        "ticket_id": {
          "type": "integer",
          "format": "int32"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "line_items": {
          "description": "Array of Line Items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LineItem": {
      "title": "LineItem",
      "type": "object",
      "properties": {
        "item": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "product_id": {
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EstimatesResponse2": {
      "title": "EstimatesResponse2",
      "example": {
        "estimate": {
          "id": 1,
          "customer_id": 1,
          "customer_business_then_name": "Walkin Customer",
          "number": "MyString",
          "status": "Fresh",
          "created_at": "2019-10-22T11:45:33.866Z",
          "updated_at": "2019-10-22T11:45:33.866Z",
          "date": "2013-10-08T14:16:10.000Z",
          "subtotal": "9.99",
          "total": "9.99",
          "tax": "9.99",
          "ticket_id": null,
          "pdf_url": null,
          "location_id": null,
          "invoice_id": null,
          "employee": "MyString"
        }
      },
      "type": "object",
      "properties": {
        "estimate": {
          "type": "object"
        }
      },
      "required": [
        "estimate"
      ]
    },
    "EstimatesResponse3": {
      "title": "EstimatesResponse3",
      "example": {
        "customer_id": [
          "can't be blank"
        ],
        "date": [
          "can't be blank"
        ]
      },
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "date": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "customer_id",
        "date"
      ]
    },
    "EstimatesRequest1": {
      "title": "EstimatesRequest1",
      "type": "object",
      "properties": {
        "number": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "note": {
          "type": "string"
        },
        "status": {
          "description": "Valid values are Fresh, Draft, Approved, Declined.",
          "type": "string"
        },
        "ticket_id": {
          "type": "integer",
          "format": "int32"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EstimatesResponse7": {
      "title": "EstimatesResponse7",
      "example": {
        "date": [
          "can't be blank"
        ]
      },
      "type": "object",
      "properties": {
        "date": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "date"
      ]
    },
    "EstimatesResponse8": {
      "title": "EstimatesResponse8",
      "example": {
        "message": "1: We deleted # 123"
      },
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "EstimatesPrintResponse": {
      "title": "EstimatesPrintResponse",
      "example": {
        "message": "We queued up a print job"
      },
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "EstimatesEmailResponse": {
      "title": "EstimatesEmailResponse",
      "example": {
        "message": "We queued up a print job"
      },
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "LineItem1": {
      "title": "LineItem1",
      "type": "object",
      "properties": {
        "upc_code": {
          "type": "string"
        },
        "product_id": {
          "type": "integer",
          "format": "int32"
        },
        "item": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "quantity": {
          "type": "number",
          "format": "double"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "cost": {
          "type": "number",
          "format": "double"
        },
        "discount_percent": {
          "type": "number",
          "format": "double"
        },
        "taxable": {
          "type": "boolean"
        },
        "tax_note": {
          "type": "string"
        },
        "tax_rate_id": {
          "type": "integer",
          "format": "int32"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "product_category": {
          "type": "string"
        }
      }
    },
    "EstimatesLineItemsResponse": {
      "title": "EstimatesLineItemsResponse",
      "example": {
        "estimate": {
          "account_id": 1,
          "id": 11,
          "updated_at": "2019-10-25T11:31:02.793Z",
          "customer_id": 1,
          "employee": "MyString",
          "payment_type": "MyString",
          "number": "MyString",
          "labor": "9.99",
          "total": "0.0",
          "subtotal": "0.0",
          "tax": "0.0",
          "paid": false,
          "date": "2013-10-08T14:16:10.000Z",
          "status_date": "2013-10-08T14:16:10.000Z",
          "status_changed_by": null,
          "notax": false,
          "ticket_id": null,
          "note": "MyText",
          "category": "MyString",
          "hardwarecost": "0.0",
          "location_id": null,
          "pdf": {
            "url": null
          },
          "signature_data": "MyText",
          "signature_name": "MyString",
          "created_at": "2019-10-25T11:31:02.688Z",
          "invoice_id": null,
          "contact_id": null,
          "tax_rate_id": 1,
          "converted_at": null,
          "last_emailed": null,
          "status": "Fresh",
          "disabled": false,
          "signature_date": null,
          "multi_tax": null,
          "name": null
        },
        "line_item": {
          "id": 1,
          "created_at": "2019-10-25T11:31:02.763Z",
          "updated_at": "2019-10-25T11:31:02.763Z",
          "invoice_id": null,
          "item": "Manual Item",
          "name": "Item Name",
          "cost": "0.0",
          "price": "0.0",
          "quantity": "1.0",
          "product_id": null,
          "taxable": true,
          "discount_percent": null,
          "position": 1,
          "invoice_bundle_id": null,
          "discount_dollars": null
        }
      },
      "type": "object",
      "properties": {
        "estimate": {
          "type": "object"
        },
        "line_item": {
          "type": "object"
        }
      },
      "required": [
        "estimate",
        "line_item"
      ]
    },
    "EstimatesLineItemsResponse1": {
      "title": "EstimatesLineItemsResponse1",
      "example": {
        "errors": "validation error: Item can't be blank"
      },
      "type": "object",
      "properties": {
        "errors": {
          "type": "string"
        }
      },
      "required": [
        "errors"
      ]
    },
    "EstimatesConvertToInvoiceResponse": {
      "title": "EstimatesConvertToInvoiceResponse",
      "example": {
        "invoice": {
          "id": 1,
          "customer_id": 1,
          "customer_business_then_name": "Walkin Customer",
          "number": "1001",
          "created_at": "2019-10-25T11:53:10.575Z",
          "updated_at": "2019-10-25T11:53:10.609Z",
          "date": "2019-10-25T00:00:00.000Z",
          "due_date": "2019-10-25T00:00:00.000Z",
          "subtotal": "0.0",
          "total": "0.0",
          "tax": "0.0",
          "verified_paid": false,
          "tech_marked_paid": false,
          "ticket_id": null,
          "pdf_url": null,
          "is_paid": false,
          "location_id": null,
          "po_number": null,
          "contact_id": null,
          "note": null,
          "hardwarecost": "0.0"
        }
      },
      "type": "object",
      "properties": {
        "invoice": {
          "type": "object"
        }
      },
      "required": [
        "invoice"
      ]
    },
    "EstimatesConvertToInvoiceResponse1": {
      "title": "EstimatesConvertToInvoiceResponse1",
      "example": {
        "error": "Validation failed: Item can't be blank, Name can't be blank"
      },
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      },
      "required": [
        "error"
      ]
    },
    "EstimatesLineItemsResponse2": {
      "title": "EstimatesLineItemsResponse2",
      "example": {
        "line_item": {
          "id": 3,
          "created_at": "2019-10-25T12:43:19.817Z",
          "updated_at": "2019-10-25T12:43:19.839Z",
          "invoice_id": null,
          "item": "New Updated Item",
          "name": "Some big thingy",
          "cost": "10.0",
          "price": "64.99",
          "quantity": "1.0",
          "product_id": null,
          "taxable": true,
          "discount_percent": null,
          "position": 1,
          "invoice_bundle_id": null,
          "discount_dollars": null
        }
      },
      "type": "object",
      "properties": {
        "line_item": {
          "type": "object"
        }
      },
      "required": [
        "line_item"
      ]
    },
    "EstimatesLineItemsResponse3": {
      "title": "EstimatesLineItemsResponse3",
      "example": {
        "item": [
          "can't be blank"
        ]
      },
      "type": "object",
      "properties": {
        "item": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "item"
      ]
    },
    "EstimatesLineItemsResponse4": {
      "title": "EstimatesLineItemsResponse4",
      "example": {
        "estimate": {
          "id": 1,
          "customer_id": 1,
          "customer_business_then_name": "Walkin Customer",
          "number": "MyString",
          "status": "Fresh",
          "created_at": "2019-10-22T11:45:33.866Z",
          "updated_at": "2019-10-22T11:45:33.866Z",
          "date": "2013-10-08T14:16:10.000Z",
          "subtotal": "9.99",
          "total": "9.99",
          "tax": "9.99",
          "ticket_id": null,
          "pdf_url": null,
          "location_id": null,
          "invoice_id": null,
          "employee": "MyString"
        }
      },
      "type": "object",
      "properties": {
        "estimate": {
          "type": "object"
        }
      },
      "required": [
        "estimate"
      ]
    },
    "InvoicesResponse": {
      "title": "InvoicesResponse",
      "example": {
        "invoices": [
          {
            "id": 6,
            "customer_id": 2,
            "customer_business_then_name": "Wonk Donk",
            "number": "4444",
            "created_at": "2019-11-06T08:24:20.821Z",
            "updated_at": "2019-11-06T08:24:20.821Z",
            "date": "2019-11-06T00:00:00.000Z",
            "due_date": "2019-11-06T00:00:00.000Z",
            "subtotal": "0.0",
            "total": "0.0",
            "tax": "0.0",
            "verified_paid": false,
            "tech_marked_paid": false,
            "ticket_id": 1,
            "pdf_url": null,
            "is_paid": false,
            "location_id": null,
            "po_number": null,
            "contact_id": null,
            "note": null,
            "hardwarecost": null,
            "user_id": null
          }
        ],
        "meta": {
          "total_pages": 1,
          "page": 1
        }
      },
      "type": "object",
      "properties": {
        "invoices": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": [
        "invoices",
        "meta"
      ]
    },
    "InvoicesRequest": {
      "title": "InvoicesRequest",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "balance_due": {
          "type": "integer",
          "format": "int32"
        },
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "customer_business_then_name": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "due_date": {
          "type": "string",
          "format": "date"
        },
        "subtotal": {
          "type": "string"
        },
        "total": {
          "type": "string"
        },
        "tax": {
          "type": "string"
        },
        "verified_paid": {
          "type": "boolean"
        },
        "tech_marked_paid": {
          "type": "boolean"
        },
        "ticket_id": {
          "type": "integer",
          "format": "int32"
        },
        "pdf_url": {
          "type": "string"
        },
        "is_paid": {
          "type": "boolean"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "po_number": {
          "type": "string"
        },
        "contact_id": {
          "type": "integer",
          "format": "int32"
        },
        "note": {
          "type": "string"
        },
        "hardwarecost": {
          "type": "number",
          "format": "double"
        },
        "line_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem2"
          }
        }
      },
      "required": [
        "customer_id",
        "number",
        "date"
      ]
    },
    "LineItem2": {
      "title": "LineItem2",
      "type": "object",
      "properties": {
        "item": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "product_id": {
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "type": "number",
          "format": "double"
        },
        "cost": {
          "type": "number",
          "format": "double"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "discount_percent": {
          "type": "integer",
          "format": "int32"
        },
        "taxable": {
          "type": "boolean"
        },
        "upc_code": {
          "type": "string"
        },
        "tax_note": {
          "type": "string"
        },
        "wholesale": {
          "type": "number",
          "format": "double"
        },
        "invoice_bundle_id": {
          "type": "integer",
          "format": "int32"
        },
        "tax_rate_id": {
          "type": "integer",
          "format": "int32"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "InvoicesResponse2": {
      "title": "InvoicesResponse2",
      "example": {
        "invoice": {
          "id": 1,
          "customer_id": 1,
          "customer_business_then_name": "Walkin Customer",
          "number": "9999",
          "created_at": "2019-06-19T07:45:43.345Z",
          "updated_at": "2019-06-19T07:45:43.345Z",
          "date": "2019-06-19T00:00:00.000Z",
          "due_date": "2019-06-19T00:00:00.000Z",
          "subtotal": "0.0",
          "total": "0.0",
          "tax": "0.0",
          "verified_paid": false,
          "tech_marked_paid": false,
          "ticket_id": null,
          "pdf_url": null,
          "is_paid": false,
          "location_id": null,
          "po_number": null,
          "contact_id": null,
          "note": null,
          "hardwarecost": null,
          "user_id": 1
        }
      },
      "type": "object",
      "properties": {
        "invoice": {
          "type": "object"
        }
      },
      "required": [
        "invoice"
      ]
    },
    "InvoicesResponse4": {
      "title": "InvoicesResponse4",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "date_received": {
          "type": "string",
          "format": "date-time"
        },
        "customer_business_then_name": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "due_date": {
          "type": "string",
          "format": "date"
        },
        "subtotal": {
          "type": "string"
        },
        "total": {
          "type": "string"
        },
        "tax": {
          "type": "string"
        },
        "verified_paid": {
          "type": "boolean"
        },
        "tech_marked_paid": {
          "type": "boolean"
        },
        "ticket_id": {
          "type": "integer",
          "format": "int32"
        },
        "pdf_url": {
          "type": "string"
        },
        "is_paid": {
          "type": "boolean"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "po_number": {
          "type": "string"
        },
        "contact_id": {
          "type": "integer",
          "format": "int32"
        },
        "note": {
          "type": "string"
        },
        "hardwarecost": {
          "type": "number",
          "format": "double"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "customer": {
          "$ref": "#/definitions/Customer2"
        },
        "line_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem3"
          }
        },
        "payments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        }
      }
    },
    "Customer2": {
      "title": "Customer2",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "fullname": {
          "type": "string"
        },
        "business_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "pdf_url": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address_2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "get_sms": {
          "type": "boolean"
        },
        "opt_out": {
          "type": "boolean"
        },
        "disabled": {
          "type": "boolean"
        },
        "no_email": {
          "type": "boolean"
        },
        "location_name": {
          "type": "string"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "type": "object"
        },
        "online_profile_url": {
          "type": "string"
        },
        "tax_rate_id": {
          "type": "integer",
          "format": "int32"
        },
        "notification_email": {
          "type": "string"
        },
        "invoice_cc_emails": {
          "type": "string"
        },
        "invoice_term_id": {
          "type": "integer",
          "format": "int32"
        },
        "referred_by": {
          "type": "string"
        },
        "ref_customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "business_and_full_name": {
          "type": "string"
        },
        "business_then_name": {
          "type": "string"
        },
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contact"
          }
        }
      }
    },
    "Contact": {
      "title": "Contact",
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "LineItem3": {
      "title": "LineItem3",
      "type": "object",
      "properties": {
        "item": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Payment": {
      "title": "Payment",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "InvoicesRequest1": {
      "title": "InvoicesRequest1",
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "customer_business_then_name": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "due_date": {
          "type": "string",
          "format": "date"
        },
        "subtotal": {
          "type": "string"
        },
        "total": {
          "type": "string"
        },
        "tax": {
          "type": "string"
        },
        "ticket_id": {
          "type": "integer",
          "format": "int32"
        },
        "pdf_url": {
          "type": "string"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "po_number": {
          "type": "string"
        },
        "contact_id": {
          "type": "integer",
          "format": "int32"
        },
        "note": {
          "type": "string"
        },
        "hardwarecost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "LineItem21": {
      "title": "LineItem21",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "line_discount_percent": {
          "type": "integer",
          "format": "int32"
        },
        "discount_dollars": {
          "type": "string"
        },
        "item": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "cost": {
          "type": "number",
          "format": "double"
        },
        "taxable": {
          "type": "boolean"
        }
      }
    },
    "ItemsResponse": {
      "title": "ItemsResponse",
      "example": {
        "items": [
          {
            "id": 1,
            "requestedon": "2019-09-28T13:18:39.513Z",
            "ticketnum": "123",
            "parturl": "https://amazon.com/",
            "shipping": null,
            "deststore": null,
            "orderedby": null,
            "orderedon": null,
            "trackingnum": "12345",
            "receivedon": null,
            "price": "0.0",
            "account_id": 1,
            "description": null,
            "destination_location_id": null,
            "from_location_id": null,
            "from_name": null,
            "received_at": null,
            "user_id": null,
            "created_at": "2019-10-28T14:18:39.515Z",
            "updated_at": "2019-10-28T14:18:39.515Z",
            "due_at": null,
            "ticket_id": null,
            "logistic_state": null,
            "product_id": null,
            "quantity": null,
            "round_trip": false,
            "trip_leg": null,
            "retail_cents": null,
            "taxable": true,
            "converted": false,
            "notes": null,
            "refurb_id": null,
            "invoice_id": null
          }
        ],
        "meta": {
          "total_pages": 1,
          "page": 1
        }
      },
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": [
        "items",
        "meta"
      ]
    },
    "LeadsResponse": {
      "title": "LeadsResponse",
      "example": {
        "leads": [
          {
            "id": 1,
            "first_name": "Susy",
            "last_name": "Ratke",
            "email": "walkin@somedomain.com",
            "phone": "",
            "mobile": "",
            "created_at": "2019-10-23T06:49:14.560Z",
            "updated_at": "2019-10-23T06:49:14.560Z",
            "address": "",
            "city": "",
            "state": "",
            "zip": "",
            "ticket_subject": null,
            "ticket_description": null,
            "ticket_problem_type": null,
            "ticket_id": null,
            "customer_id": 1,
            "contact_id": null,
            "mailbox_id": null,
            "mailbox_name": null,
            "business_then_name": "Klocko-Stracke",
            "has_attachments": false,
            "message_read": false,
            "status": "New",
            "user_id": null,
            "location_id": null
          }
        ],
        "meta": {
          "total_pages": 1,
          "total_entries": 1,
          "per_page": 25,
          "page": 1
        }
      },
      "type": "object",
      "properties": {
        "leads": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": [
        "leads",
        "meta"
      ]
    },
    "LeadsRequest": {
      "title": "LeadsRequest",
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "business_name": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "converted": {
          "type": "boolean"
        },
        "message_read": {
          "type": "boolean"
        },
        "disabled": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "ticket_description": {
          "type": "string"
        },
        "ticket_problem_type": {
          "type": "string"
        },
        "ticket_subject": {
          "type": "string"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "from_check_in": {
          "type": "boolean"
        },
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "ticket_id": {
          "type": "integer",
          "format": "int32"
        },
        "hidden_notes": {
          "type": "string"
        },
        "contact_id": {
          "type": "integer",
          "format": "int32"
        },
        "appointment_time": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "ticket_type_id": {
          "type": "integer",
          "format": "int32"
        },
        "mailbox_id": {
          "type": "integer",
          "format": "int32"
        },
        "opportunity_start_date": {
          "type": "string",
          "format": "date-time"
        },
        "opportunity_amount_dollars": {
          "type": "number",
          "format": "double"
        },
        "likelihood": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "type": "object"
        },
        "ticket_properties": {
          "type": "object"
        },
        "customer_purchase_id": {
          "type": "integer",
          "format": "int32"
        },
        "signature_date": {
          "type": "string",
          "format": "date-time"
        },
        "signature_name": {
          "type": "string"
        },
        "signature_data": {
          "type": "string"
        },
        "appointment_type_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LeadsResponse2": {
      "title": "LeadsResponse2",
      "example": {
        "lead": {
          "id": 1,
          "first_name": "Susy",
          "last_name": "Ratke",
          "email": "walkin@somedomain.com",
          "phone": "",
          "mobile": "",
          "created_at": "2019-10-23T06:49:14.560Z",
          "updated_at": "2019-10-23T06:49:14.560Z",
          "address": "",
          "city": "",
          "state": "",
          "zip": "",
          "ticket_subject": null,
          "ticket_description": null,
          "ticket_problem_type": null,
          "ticket_id": null,
          "customer_id": 1,
          "contact_id": null,
          "mailbox_id": null,
          "mailbox_name": null,
          "business_then_name": "Klocko-Stracke",
          "has_attachments": false,
          "message_read": false,
          "status": "New",
          "user_id": null,
          "location_id": null
        }
      },
      "type": "object",
      "properties": {
        "lead": {
          "type": "object"
        }
      },
      "required": [
        "lead"
      ]
    },
    "LeadsResponse3": {
      "title": "LeadsResponse3",
      "example": {
        "success": false,
        "message": [
          "Ticket description can't be blank"
        ],
        "params": {
          "from_check_in": true
        }
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "success",
        "message",
        "params"
      ]
    },
    "LineItemsResponse": {
      "title": "LineItemsResponse",
      "example": {
        "line_items": [
          {
            "id": 1,
            "created_at": "2019-10-28T14:38:47.864Z",
            "updated_at": "2019-10-28T14:38:47.864Z",
            "invoice_id": 1,
            "item": "Test Item",
            "name": "Some big thingy",
            "cost": "10.0",
            "price": "64.99",
            "quantity": "1.0",
            "product_id": null,
            "taxable": true,
            "discount_percent": null,
            "position": 1,
            "invoice_bundle_id": null,
            "discount_dollars": null
          }
        ],
        "meta": {
          "total_pages": 1,
          "total_entries": 1,
          "per_page": 100,
          "page": 1
        }
      },
      "type": "object",
      "properties": {
        "line_items": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": [
        "line_items",
        "meta"
      ]
    },
    "NewTicketFormsResponse": {
      "title": "NewTicketFormsResponse",
      "example": {
        "new_ticket_forms": [
          {
            "id": 1,
            "name": "Phone Repair",
            "default": false,
            "disabled": false,
            "data": {
              "customer_details": {
                "fields": {
                  "firstname": "require",
                  "lastname": "require",
                  "business_name": "show",
                  "email": "show",
                  "phone": "show",
                  "address": "hide",
                  "referred_by": "show",
                  "tax_rate_id": "hide",
                  "get_sms": "hide",
                  "opt_out": "hide",
                  "no_email": "hide",
                  "send_portal_invitation": "hide",
                  "notification_email": "hide",
                  "invoice_cc_emails": "hide",
                  "invoice_term_id": "hide",
                  "custom_fields": "show"
                },
                "defaults": {
                  "placeholder": ""
                },
                "position": "1"
              },
              "ticket_details": {
                "fields": {
                  "subject": "require",
                  "description": "require",
                  "user_id": "show",
                  "priority": "hide",
                  "due_date": "hide",
                  "problem_type": "require",
                  "notify_emails": "hide",
                  "category": "hide",
                  "address_id": "hide",
                  "contract_id": "hide",
                  "sla_id": "hide",
                  "ticket_type_id": "show",
                  "do_not_email": "show",
                  "isapproved": "hide",
                  "pre_diagnosed": "hide"
                },
                "defaults": {
                  "placeholder": "",
                  "isapproved": "true",
                  "pre_diagnosed": "true"
                },
                "disabled": [
                  "subject",
                  "problem_type"
                ],
                "position": "2"
              },
              "worksheets": {
                "position": "3"
              },
              "related_assets": {
                "position": "4"
              }
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "new_ticket_forms": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "new_ticket_forms"
      ]
    },
    "NewTicketFormsResponse2": {
      "title": "NewTicketFormsResponse2",
      "example": {
        "new_ticket_form": {
          "id": 1,
          "name": "Phone Repair",
          "default": false,
          "disabled": false,
          "data": {
            "customer_details": {
              "fields": {
                "firstname": "require",
                "lastname": "require",
                "business_name": "show",
                "email": "show",
                "phone": "show",
                "address": "hide",
                "referred_by": "show",
                "tax_rate_id": "hide",
                "get_sms": "hide",
                "opt_out": "hide",
                "no_email": "hide",
                "send_portal_invitation": "hide",
                "notification_email": "hide",
                "invoice_cc_emails": "hide",
                "invoice_term_id": "hide",
                "custom_fields": "show"
              },
              "defaults": {
                "placeholder": ""
              },
              "position": "1"
            },
            "ticket_details": {
              "fields": {
                "subject": "require",
                "description": "require",
                "user_id": "show",
                "priority": "hide",
                "due_date": "hide",
                "problem_type": "require",
                "notify_emails": "hide",
                "category": "hide",
                "address_id": "hide",
                "contract_id": "hide",
                "sla_id": "hide",
                "ticket_type_id": "show",
                "do_not_email": "show",
                "isapproved": "hide",
                "pre_diagnosed": "hide"
              },
              "defaults": {
                "placeholder": "",
                "isapproved": "true",
                "pre_diagnosed": "true"
              },
              "disabled": [
                "subject",
                "problem_type"
              ],
              "position": "2"
            },
            "worksheets": {
              "position": "3"
            },
            "related_assets": {
              "position": "4"
            }
          }
        }
      },
      "type": "object",
      "properties": {
        "new_ticket_form": {
          "type": "object"
        }
      },
      "required": [
        "new_ticket_form"
      ]
    },
    "NewTicketFormsProcessFormRequest": {
      "title": "NewTicketFormsProcessFormRequest",
      "type": "object",
      "properties": {
        "customer_details": {
          "$ref": "#/definitions/CustomerDetails"
        },
        "ticket_details": {
          "$ref": "#/definitions/TicketDetails"
        },
        "appointments": {
          "$ref": "#/definitions/Appointments"
        }
      }
    },
    "CustomerDetails": {
      "title": "CustomerDetails",
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string"
        },
        "properties": {
          "type": "object"
        },
        "lastname": {
          "type": "string"
        },
        "business_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "get_sms": {
          "type": "boolean"
        },
        "opt_out": {
          "type": "boolean"
        },
        "no_email": {
          "type": "boolean"
        }
      }
    },
    "TicketDetails": {
      "title": "TicketDetails",
      "type": "object",
      "properties": {
        "properties": {
          "type": "object"
        },
        "subject": {
          "type": "string"
        },
        "problem_type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "do_not_email": {
          "type": "boolean"
        }
      }
    },
    "Appointments": {
      "title": "Appointments",
      "type": "object",
      "properties": {
        "properties": {
          "type": "object"
        },
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "start_at": {
          "type": "string",
          "format": "date-time"
        },
        "end_at": {
          "type": "string"
        }
      }
    },
    "NewTicketFormsProcessFormResponse": {
      "title": "NewTicketFormsProcessFormResponse",
      "example": {
        "ticket": {
          "id": 1,
          "customer_id": 2,
          "subject": "Ticket Subject",
          "status": "New",
          "problem_type": "Hardware",
          "created_at": "2019-10-29T12:05:24.322Z",
          "updated_at": "2019-10-29T12:05:24.382Z",
          "category": "Standard",
          "referredby": null,
          "isapproved": false,
          "memory": null,
          "upgradeoffered": false,
          "password": null,
          "cancelled": false,
          "power_adapter": false,
          "start_at": null,
          "end_at": null,
          "user_id": 1,
          "account_id": 1,
          "checkbox_results": null,
          "textbox_results": null,
          "due_date": "2019-11-01T12:05:24.314Z",
          "number": 4201,
          "location_id": null,
          "pdf": {
            "url": null
          },
          "signature_name": null,
          "signature_data": "",
          "gevent_id": null,
          "intake_form_pdf": {
            "url": null
          },
          "contact_id": null,
          "properties": {},
          "ticket_type_id": null,
          "priority": null,
          "notify_emails": null,
          "disabled": false,
          "ticket_recurring_schedule_id": null,
          "time_to_resolve_minutes": null,
          "original_customer_id": 2,
          "original_ticket_id": null,
          "sla_id": null,
          "contract_id": null,
          "address_id": null,
          "creator_id": null,
          "signature_date": null,
          "resolved_at": null,
          "all_notify_emails": null,
          "outtake_form_name": null,
          "outtake_form_data": null,
          "outtake_form_date": null,
          "custom_fields_cache": " ",
          "with_initial_issue_body": null,
          "with_items_any": null
        },
        "invoice": null,
        "redirect": "/tickets/1",
        "message": "Ticket created.."
      },
      "type": "object",
      "properties": {
        "ticket": {
          "type": "object"
        },
        "invoice": {
          "type": "string"
        },
        "redirect": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "ticket",
        "invoice",
        "redirect",
        "message"
      ]
    },
    "NewTicketFormsProcessFormResponse1": {
      "title": "NewTicketFormsProcessFormResponse1",
      "example": {
        "success": false,
        "errors": {
          "appointments": {
            "summary": [
              "can't be blank"
            ],
            "start_at": [
              "can't be blank"
            ],
            "end_at": [
              "can't be blank"
            ]
          }
        }
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "errors": {
          "type": "object"
        }
      },
      "required": [
        "success",
        "errors"
      ]
    },
    "PaymentMethodsResponse": {
      "title": "PaymentMethodsResponse",
      "example": {
        "payment_methods": [
          {
            "id": 1,
            "name": "Credit Card",
            "created_at": "2019-10-28T09:55:44.304Z",
            "updated_at": "2019-10-28T09:55:44.304Z",
            "uses_card_processing": false
          },
          {
            "id": 2,
            "name": "Cash",
            "created_at": "2019-10-28T09:55:44.307Z",
            "updated_at": "2019-10-28T09:55:44.307Z",
            "uses_card_processing": false
          },
          {
            "id": 3,
            "name": "Check",
            "created_at": "2019-10-28T09:55:44.309Z",
            "updated_at": "2019-10-28T09:55:44.309Z",
            "uses_card_processing": false
          },
          {
            "id": 4,
            "name": "Offline CC",
            "created_at": "2019-10-28T09:55:44.312Z",
            "updated_at": "2019-10-28T09:55:44.312Z",
            "uses_card_processing": false
          },
          {
            "id": 5,
            "name": "Quick",
            "created_at": "2019-10-28T09:55:44.316Z",
            "updated_at": "2019-10-28T09:55:44.316Z",
            "uses_card_processing": false
          },
          {
            "id": 6,
            "name": "Other",
            "created_at": "2019-10-28T09:55:44.319Z",
            "updated_at": "2019-10-28T09:55:44.319Z",
            "uses_card_processing": false
          }
        ]
      },
      "type": "object",
      "properties": {
        "payment_methods": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "payment_methods"
      ]
    },
    "CustomersPaymentProfilesResponse": {
      "title": "CustomersPaymentProfilesResponse",
      "example": {
        "payment_profiles": [
          {
            "id": 1,
            "customer_id": 1,
            "expiration": "MyString",
            "customer_external_id": null,
            "used_gateway": "authorize_net",
            "payment_profile_id": 1,
            "last_four": "MyString",
            "created_at": "2019-10-25T07:11:31.903Z",
            "updated_at": "2019-10-25T07:11:31.903Z"
          }
        ]
      },
      "type": "object",
      "properties": {
        "payment_profiles": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "payment_profiles"
      ]
    },
    "CustomersPaymentProfilesRequest": {
      "title": "CustomersPaymentProfilesRequest",
      "type": "object",
      "properties": {
        "customer_external_id": {
          "description": "Payment Gateway's Customer token",
          "type": "string"
        },
        "payment_profile_id": {
          "description": "Payment Gateway's stored payment profile token",
          "type": "string"
        },
        "expiration": {
          "type": "string"
        },
        "last_four": {
          "type": "string"
        }
      }
    },
    "CustomersPaymentProfilesResponse1": {
      "title": "CustomersPaymentProfilesResponse1",
      "example": {
        "payment_profile": {
          "id": 1,
          "customer_id": 1,
          "expiration": "MyString",
          "customer_external_id": null,
          "used_gateway": "authorize_net",
          "payment_profile_id": 1,
          "last_four": "MyString",
          "created_at": "2019-10-25T07:11:31.903Z",
          "updated_at": "2019-10-25T07:11:31.903Z"
        }
      },
      "type": "object",
      "properties": {
        "payment_profile": {
          "type": "object"
        }
      },
      "required": [
        "payment_profile"
      ]
    },
    "CustomersPaymentProfilesResponse2": {
      "title": "CustomersPaymentProfilesResponse2",
      "example": {
        "message": "Account not configured to use integrated processing."
      },
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "CustomersPaymentProfilesRequest1": {
      "title": "CustomersPaymentProfilesRequest1",
      "type": "object",
      "properties": {
        "expiration": {
          "type": "string"
        },
        "last_four": {
          "type": "string"
        }
      }
    },
    "CustomersPaymentProfilesResponse5": {
      "title": "CustomersPaymentProfilesResponse5",
      "example": {
        "success": true
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "required": [
        "success"
      ]
    },
    "PaymentsResponse": {
      "title": "PaymentsResponse",
      "example": {
        "payments": [
          {
            "id": 1,
            "created_at": "2019-10-28T07:00:00.000Z",
            "updated_at": "2019-10-28T10:18:14.061Z",
            "success": true,
            "payment_amount": 100,
            "invoice_ids": [
              null
            ],
            "ref_num": "11006",
            "applied_at": "2019-10-26T00:00:00.000Z",
            "payment_method": "Check",
            "transaction_response": null,
            "signature_date": null,
            "customer": {
              "id": 1,
              "firstname": "Walkin",
              "lastname": "Customer",
              "fullname": "Walkin Customer",
              "business_name": null,
              "email": "walkin@somedomain.com",
              "phone": "123",
              "mobile": null,
              "created_at": "2019-10-28T10:17:58.224Z",
              "updated_at": "2019-10-28T10:17:58.224Z",
              "pdf_url": null,
              "address": null,
              "address_2": null,
              "city": null,
              "state": null,
              "zip": null,
              "latitude": null,
              "longitude": null,
              "notes": null,
              "get_sms": false,
              "opt_out": false,
              "disabled": false,
              "no_email": true,
              "location_name": null,
              "location_id": null,
              "properties": {},
              "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=xw6sk8693f35nzgcb66o",
              "tax_rate_id": null,
              "notification_email": null,
              "invoice_cc_emails": null,
              "invoice_term_id": null,
              "referred_by": null,
              "ref_customer_id": null,
              "business_and_full_name": "Walkin Customer",
              "business_then_name": "Walkin Customer",
              "contacts": []
            }
          }
        ],
        "meta": {
          "total_pages": 1,
          "page": 1
        }
      },
      "type": "object",
      "properties": {
        "payments": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": [
        "payments",
        "meta"
      ]
    },
    "PaymentsRequest": {
      "title": "PaymentsRequest",
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "invoice_id": {
          "type": "integer",
          "format": "int32"
        },
        "invoice_number": {
          "type": "string"
        },
        "amount_cents": {
          "type": "integer",
          "format": "int32"
        },
        "address_street": {
          "type": "string"
        },
        "address_city": {
          "type": "string"
        },
        "address_zip": {
          "type": "string"
        },
        "payment_method": {
          "type": "string"
        },
        "ref_num": {
          "type": "string"
        },
        "register_id": {
          "type": "integer",
          "format": "int32"
        },
        "signature_name": {
          "type": "string"
        },
        "signature_data": {
          "type": "string"
        },
        "signature_date": {
          "type": "string",
          "format": "date-time"
        },
        "credit_card_number": {
          "type": "string"
        },
        "date_month": {
          "type": "string"
        },
        "date_year": {
          "type": "string"
        },
        "cvv": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "apply_payments": {
          "description": "Object where a key is an Invoice ID and a value is a payment amount to be applied to the invoice.",
          "type": "object"
        }
      }
    },
    "PaymentsResponse2": {
      "title": "PaymentsResponse2",
      "example": {
        "payment": {
          "id": 3,
          "created_at": "2019-10-28T12:45:24.315Z",
          "updated_at": "2019-10-28T12:45:24.315Z",
          "success": true,
          "payment_amount": 10,
          "invoice_ids": [
            1
          ],
          "ref_num": null,
          "applied_at": "2019-10-28T00:00:00.000Z",
          "payment_method": null,
          "transaction_response": null,
          "tickets": []
        }
      },
      "type": "object",
      "properties": {
        "payment": {
          "type": "object"
        }
      },
      "required": [
        "payment"
      ]
    },
    "CustomersPhonesResponse": {
      "title": "CustomersPhonesResponse",
      "example": {
        "phones": [
          {
            "id": 2,
            "label": "Mobile",
            "number": "111222333",
            "customer_id": 1,
            "created_at": "2019-10-28T15:07:49.764Z",
            "updated_at": "2019-10-28T15:07:49.764Z",
            "extension": null
          },
          {
            "id": 1,
            "label": "Phone",
            "number": "123",
            "customer_id": 1,
            "created_at": "2019-10-28T15:07:32.225Z",
            "updated_at": "2019-10-28T15:07:32.225Z",
            "extension": null
          }
        ]
      },
      "type": "object",
      "properties": {
        "phones": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "phones"
      ]
    },
    "Phone": {
      "title": "Phone",
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        }
      }
    },
    "CustomersPhonesResponse1": {
      "title": "CustomersPhonesResponse1",
      "example": {
        "id": 4,
        "label": null,
        "number": "222000222",
        "customer_id": 1,
        "created_at": "2019-10-28T15:07:50.138Z",
        "updated_at": "2019-10-28T15:07:50.138Z",
        "extension": null
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "label",
        "number",
        "customer_id",
        "created_at",
        "updated_at",
        "extension"
      ]
    },
    "CustomersPhonesResponse2": {
      "title": "CustomersPhonesResponse2",
      "example": {
        "success": false,
        "message": [
          "Number can't be blank"
        ],
        "params": {
          "customer_id": "1",
          "number": ""
        }
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "success",
        "message",
        "params"
      ]
    },
    "PortalUsersResponse": {
      "title": "PortalUsersResponse",
      "example": {
        "portal_users": [
          {
            "id": 1,
            "email": "katelyn@okuneva.name",
            "account_id": 1,
            "customer_id": 1,
            "contact_id": 1,
            "created_at": "2019-10-25T13:36:47.165Z",
            "updated_at": "2019-10-25T13:36:47.165Z",
            "portal_group_id": 4
          }
        ],
        "meta": {
          "total_pages": 1,
          "total_entries": 1,
          "per_page": 100,
          "page": 1
        }
      },
      "type": "object",
      "properties": {
        "portal_users": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": [
        "portal_users",
        "meta"
      ]
    },
    "PortalUser": {
      "title": "PortalUser",
      "type": "object",
      "properties": {
        "contact_id": {
          "type": "integer",
          "format": "int32"
        },
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "password": {
          "type": "string"
        },
        "password_confirmation": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "portal_group_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PortalUsersResponse2": {
      "title": "PortalUsersResponse2",
      "example": {
        "id": 1,
        "email": "katelyn@okuneva.name",
        "account_id": 1,
        "customer_id": 1,
        "contact_id": 1,
        "created_at": "2019-10-25T13:36:47.165Z",
        "updated_at": "2019-10-25T13:36:47.165Z",
        "portal_group_id": 4
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "email": {
          "type": "string"
        },
        "account_id": {
          "type": "integer",
          "format": "int32"
        },
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "contact_id": {
          "type": "integer",
          "format": "int32"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "portal_group_id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "id",
        "email",
        "account_id",
        "customer_id",
        "contact_id",
        "created_at",
        "updated_at",
        "portal_group_id"
      ]
    },
    "PortalUsersResponse3": {
      "title": "PortalUsersResponse3",
      "example": {
        "success": false,
        "message": [
          "Email can't be blank",
          "Password confirmation doesn't match Password"
        ],
        "params": {
          "customer_id": 1,
          "password": "does not match",
          "password_confirmation": "confirmation"
        }
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "success",
        "message",
        "params"
      ]
    },
    "PortalUsersCreateInvitationRequest": {
      "title": "PortalUsersCreateInvitationRequest",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PortalUsersCreateInvitationResponse": {
      "title": "PortalUsersCreateInvitationResponse",
      "example": {
        "success": true,
        "message": "All set, we BCC'd you on that invitation."
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "success",
        "message"
      ]
    },
    "ProductsProductSerialsResponse": {
      "title": "ProductsProductSerialsResponse",
      "type": "object",
      "properties": {
        "product_serials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSerial"
          }
        }
      }
    },
    "ProductSerial": {
      "title": "ProductSerial",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "product_location_quantity_id": {
          "type": "integer",
          "format": "int32"
        },
        "line_item_id": {
          "type": "integer",
          "format": "int32"
        },
        "serial_number": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "instance_price_cost": {
          "type": "number",
          "format": "double"
        },
        "instance_price_retail": {
          "type": "number",
          "format": "double"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProductsProductSerialsRequest": {
      "title": "ProductsProductSerialsRequest",
      "type": "object",
      "properties": {
        "condition": {
          "type": "string"
        },
        "price_cost_cents": {
          "type": "integer",
          "format": "int32"
        },
        "price_retail_cents": {
          "type": "integer",
          "format": "int32"
        },
        "serial_number": {
          "type": "string"
        }
      }
    },
    "ProductsProductSerialsResponse1": {
      "title": "ProductsProductSerialsResponse1",
      "example": {
        "product_serial": {
          "id": 1,
          "created_at": "2019-10-24T07:32:07.656Z",
          "updated_at": "2019-10-24T07:32:07.656Z",
          "product_location_quantity_id": null,
          "line_item_id": null,
          "serial_number": "abcde345332z1",
          "status": "In Stock",
          "instance_price_cost": 0.01,
          "instance_price_retail": 0.01,
          "location_id": null
        }
      },
      "type": "object",
      "properties": {
        "product_serial": {
          "type": "object"
        }
      },
      "required": [
        "product_serial"
      ]
    },
    "ProductsProductSerialsResponse2": {
      "title": "ProductsProductSerialsResponse2",
      "example": {
        "success": false,
        "message": [
          "Serial number scientific-notation not allowed, may have been introduced by a spreadsheet program inferring Numerical from a csv."
        ]
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success",
        "message"
      ]
    },
    "ProductsProductSerialsRequest1": {
      "title": "ProductsProductSerialsRequest1",
      "type": "object",
      "properties": {
        "condition": {
          "type": "string"
        },
        "price_cost_cents": {
          "type": "integer",
          "format": "int32"
        },
        "price_retail_cents": {
          "type": "integer",
          "format": "int32"
        },
        "serial_number": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "ProductsProductSerialsAttachToLineItemRequest": {
      "title": "ProductsProductSerialsAttachToLineItemRequest",
      "type": "object",
      "properties": {
        "record_type": {
          "$ref": "#/definitions/RecordType"
        },
        "line_item_id": {
          "type": "integer",
          "format": "int32"
        },
        "product_serial_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "RecordType": {
      "title": "RecordType",
      "type": "string",
      "enum": [
        "TransferLineItem",
        "LineItem",
        "ReturnLineItem",
        "TicketLineItem",
        "RefurbLineItem"
      ]
    },
    "ProductsProductSerialsAttachToLineItemResponse": {
      "title": "ProductsProductSerialsAttachToLineItemResponse",
      "example": {
        "status": "attached"
      },
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "required": [
        "status"
      ]
    },
    "ProductsProductSerialsAttachToLineItemResponse1": {
      "title": "ProductsProductSerialsAttachToLineItemResponse1",
      "example": {
        "status": "attached",
        "errors": "One of the serial numbers has already been used. Please try again."
      },
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "errors": {
          "type": "string"
        }
      },
      "required": [
        "status",
        "errors"
      ]
    },
    "ProductsResponse": {
      "title": "ProductsResponse",
      "example": {
        "products": [
          {
            "id": 1,
            "price_cost": 0.01,
            "price_retail": 0.01,
            "condition": null,
            "description": "Description #1",
            "maintain_stock": false,
            "name": "Product #1",
            "quantity": 100,
            "warranty": null,
            "sort_order": null,
            "reorder_at": null,
            "disabled": false,
            "taxable": true,
            "product_category": null,
            "category_path": null,
            "upc_code": null,
            "discount_percent": null,
            "warranty_template_id": null,
            "qb_item_id": 1,
            "desired_stock_level": null,
            "price_wholesale": 0,
            "notes": null,
            "tax_rate_id": null,
            "physical_location": null,
            "serialized": false,
            "vendor_ids": [],
            "long_description": null,
            "location_quantities": [],
            "photos": []
          }
        ]
      },
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "products"
      ]
    },
    "ProductsRequest": {
      "title": "ProductsRequest",
      "type": "object",
      "properties": {
        "price_cost": {
          "type": "number",
          "format": "double"
        },
        "price_retail": {
          "type": "number",
          "format": "double"
        },
        "condition": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "maintain_stock": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "warranty": {
          "type": "string"
        },
        "sort_order": {
          "type": "integer",
          "format": "int32"
        },
        "reorder_at": {
          "type": "integer",
          "format": "int32"
        },
        "disabled": {
          "type": "boolean"
        },
        "taxable": {
          "type": "boolean"
        },
        "product_category": {
          "type": "string"
        },
        "upc_code": {
          "type": "string"
        },
        "discount_percent": {
          "type": "number",
          "format": "double"
        },
        "warranty_template_id": {
          "type": "integer",
          "format": "int32"
        },
        "qb_item_id": {
          "type": "integer",
          "format": "int32"
        },
        "desired_stock_level": {
          "type": "integer",
          "format": "int32"
        },
        "price_wholesale": {
          "type": "number",
          "format": "double"
        },
        "notes": {
          "type": "string"
        },
        "tax_rate_id": {
          "type": "integer",
          "format": "int32"
        },
        "vendor_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "physical_location": {
          "type": "string"
        },
        "serialized": {
          "type": "boolean"
        },
        "category_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "product_skus_attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSkusAttribute"
          }
        }
      },
      "required": [
        "description",
        "name"
      ]
    },
    "ProductSkusAttribute": {
      "title": "ProductSkusAttribute",
      "type": "object",
      "properties": {
        "vendor_id": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ProductsResponse2": {
      "title": "ProductsResponse2",
      "example": {
        "product": {
          "id": 1,
          "price_cost": 0.01,
          "price_retail": 0.01,
          "condition": null,
          "description": "Description #1",
          "maintain_stock": false,
          "name": "Product #1",
          "quantity": 100,
          "warranty": null,
          "sort_order": null,
          "reorder_at": null,
          "disabled": false,
          "taxable": true,
          "product_category": null,
          "category_path": null,
          "upc_code": null,
          "discount_percent": null,
          "warranty_template_id": null,
          "qb_item_id": 1,
          "desired_stock_level": null,
          "price_wholesale": 0,
          "notes": null,
          "tax_rate_id": null,
          "physical_location": null,
          "serialized": false,
          "vendor_ids": [],
          "long_description": null,
          "location_quantities": [],
          "photos": []
        }
      },
      "type": "object",
      "properties": {
        "product": {
          "type": "object"
        }
      },
      "required": [
        "product"
      ]
    },
    "ProductsResponse3": {
      "title": "ProductsResponse3",
      "example": {
        "success": false,
        "message": [
          "Name can't be blank",
          "Description can't be blank"
        ],
        "params": {
          "name": "",
          "maintain_stock": false
        }
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "success",
        "message",
        "params"
      ]
    },
    "ProductsResponse7": {
      "title": "ProductsResponse7",
      "example": {
        "success": false,
        "message": [
          "Name can't be blank"
        ]
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success",
        "message"
      ]
    },
    "ProductsBarcodeResponse": {
      "title": "ProductsBarcodeResponse",
      "example": {
        "product": {
          "id": 1,
          "price_cost": 0.01,
          "price_retail": 0.01,
          "condition": null,
          "description": "Description #1",
          "maintain_stock": false,
          "name": "Product #1",
          "quantity": 100,
          "warranty": null,
          "sort_order": null,
          "reorder_at": null,
          "disabled": false,
          "taxable": true,
          "product_category": null,
          "category_path": null,
          "upc_code": null,
          "discount_percent": null,
          "warranty_template_id": null,
          "qb_item_id": 1,
          "desired_stock_level": null,
          "price_wholesale": 0,
          "notes": null,
          "tax_rate_id": null,
          "physical_location": null,
          "serialized": false,
          "vendor_ids": [],
          "long_description": null,
          "location_quantities": [],
          "photos": []
        }
      },
      "type": "object",
      "properties": {
        "product": {
          "type": "object"
        }
      },
      "required": [
        "product"
      ]
    },
    "ProductsCategoriesResponse": {
      "title": "ProductsCategoriesResponse",
      "example": {
        "categories": [
          {
            "id": 1,
            "account_id": 1,
            "ancestry": null,
            "name": "Root Category",
            "description": "Root Category",
            "device_product_id": null,
            "names_depth_cache": "Root Category"
          }
        ]
      },
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "categories"
      ]
    },
    "Files": {
      "title": "Files",
      "type": "object",
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Files1"
          }
        }
      }
    },
    "Files1": {
      "title": "Files1",
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        }
      }
    },
    "ProductsAddImagesResponse": {
      "title": "ProductsAddImagesResponse",
      "example": {
        "message": "Success! Those will be added shortly in background workers."
      },
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "ProductsAddImagesResponse1": {
      "title": "ProductsAddImagesResponse1",
      "example": {
        "error": "Please pass 'url' & 'filename' or 'files([{}])' parameter."
      },
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      },
      "required": [
        "error"
      ]
    },
    "ProductsDeleteImageResponse": {
      "title": "ProductsDeleteImageResponse",
      "example": {
        "message": "Success! Image removed."
      },
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "ProductsLocationQuantitiesRequest": {
      "title": "ProductsLocationQuantitiesRequest",
      "type": "object",
      "properties": {
        "location_quantity_id": {
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProductsLocationQuantitiesResponse": {
      "title": "ProductsLocationQuantitiesResponse",
      "example": {
        "product_id": 15,
        "id": 1,
        "quantity": 100,
        "price_cost_cents": null,
        "price_retail_cents": null,
        "location_id": 1,
        "tax_rate_id": null,
        "created_at": "2019-10-25T10:08:05.205Z",
        "updated_at": "2019-10-25T10:08:05.227Z",
        "reorder_at": null,
        "desired_stock_level": 0
      },
      "type": "object",
      "properties": {
        "product_id": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "price_cost_cents": {
          "type": "string"
        },
        "price_retail_cents": {
          "type": "string"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "tax_rate_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "reorder_at": {
          "type": "string"
        },
        "desired_stock_level": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "product_id",
        "id",
        "quantity",
        "price_cost_cents",
        "price_retail_cents",
        "location_id",
        "tax_rate_id",
        "created_at",
        "updated_at",
        "reorder_at",
        "desired_stock_level"
      ]
    },
    "PurchaseOrdersResponse": {
      "title": "PurchaseOrdersResponse",
      "example": {
        "purchase_orders": [
          {
            "id": 1,
            "account_subdomain": "testsubdomainwi1",
            "created_at": "2019-11-15T16:44:28.521Z",
            "updated_at": "2019-11-15T16:44:28.530Z",
            "expected_date": "2013-04-07T01:07:34.000Z",
            "number": "MyString",
            "other": 0.01,
            "shipping": 0.01,
            "shipping_notes": "MyText",
            "status": "MyString",
            "total": 0.02,
            "user_id": 0,
            "vendor_id": 1,
            "location_id": null,
            "due_date": "2019-11-22T00:00:00.000Z",
            "paid_date": "2019-11-15T00:00:00.000Z",
            "delivery_tracking": "yourdevivery.com/tracking/link/1",
            "vendor": {
              "id": 1,
              "name": "C & S Wholesalers",
              "rep_first_name": "Bill",
              "rep_last_name": "Sales",
              "email": "info@candswholes.com",
              "phone": "603-344-5555",
              "account_number": null,
              "created_at": "2019-11-15T16:44:28.494Z",
              "updated_at": "2019-11-15T16:44:28.494Z",
              "address": "44 Billings Circle",
              "city": "Keene",
              "state": "NH",
              "zip": "03455",
              "website": "www.candswholes.com",
              "notes": "Trucks"
            },
            "location": null,
            "line_items": []
          }
        ]
      },
      "type": "object",
      "properties": {
        "purchase_orders": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "purchase_orders"
      ]
    },
    "PurchaseOrdersRequest": {
      "title": "PurchaseOrdersRequest",
      "type": "object",
      "properties": {
        "discount_percent": {
          "type": "integer",
          "format": "int32"
        },
        "expected_date": {
          "type": "string",
          "format": "date-time"
        },
        "general_notes": {
          "type": "string"
        },
        "other_cents": {
          "type": "integer",
          "format": "int32"
        },
        "shipping_cents": {
          "type": "integer",
          "format": "int32"
        },
        "shipping_notes": {
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "vendor_id": {
          "type": "integer",
          "format": "int32"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "due_date": {
          "type": "string",
          "format": "date-time"
        },
        "paid_date": {
          "type": "string",
          "format": "date-time"
        },
        "order_date": {
          "type": "string",
          "format": "date-time"
        },
        "delivery_tracking": {
          "type": "string"
        }
      }
    },
    "PurchaseOrdersResponse2": {
      "title": "PurchaseOrdersResponse2",
      "example": {
        "purchase_order": {
          "id": 1,
          "account_subdomain": "testsubdomainwi1",
          "created_at": "2019-11-15T16:44:28.521Z",
          "updated_at": "2019-11-15T16:44:28.530Z",
          "expected_date": "2013-04-07T01:07:34.000Z",
          "number": "MyString",
          "other": 0.01,
          "shipping": 0.01,
          "shipping_notes": "MyText",
          "status": "MyString",
          "total": 0.02,
          "user_id": 0,
          "vendor_id": 1,
          "location_id": null,
          "due_date": "2019-11-22T00:00:00.000Z",
          "paid_date": "2019-11-15T00:00:00.000Z",
          "delivery_tracking": "yourdevivery.com/tracking/link/1",
          "vendor": {
            "id": 1,
            "name": "C & S Wholesalers",
            "rep_first_name": "Bill",
            "rep_last_name": "Sales",
            "email": "info@candswholes.com",
            "phone": "603-344-5555",
            "account_number": null,
            "created_at": "2019-11-15T16:44:28.494Z",
            "updated_at": "2019-11-15T16:44:28.494Z",
            "address": "44 Billings Circle",
            "city": "Keene",
            "state": "NH",
            "zip": "03455",
            "website": "www.candswholes.com",
            "notes": "Trucks"
          },
          "location": null,
          "line_items": []
        }
      },
      "type": "object",
      "properties": {
        "purchase_order": {
          "type": "object"
        }
      },
      "required": [
        "purchase_order"
      ]
    },
    "PurchaseOrdersReceiveRequest": {
      "title": "PurchaseOrdersReceiveRequest",
      "type": "object",
      "properties": {
        "line_item_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PurchaseOrdersReceiveResponse": {
      "title": "PurchaseOrdersReceiveResponse",
      "example": {
        "purchase_order": {
          "id": 1,
          "account_subdomain": "testsubdomainwi1",
          "created_at": "2019-11-15T16:44:28.521Z",
          "updated_at": "2019-11-15T16:44:28.530Z",
          "expected_date": "2013-04-07T01:07:34.000Z",
          "number": "MyString",
          "other": 0.01,
          "shipping": 0.01,
          "shipping_notes": "MyText",
          "status": "MyString",
          "total": 0.02,
          "user_id": 0,
          "vendor_id": 1,
          "location_id": null,
          "due_date": "2019-11-22T00:00:00.000Z",
          "paid_date": "2019-11-15T00:00:00.000Z",
          "delivery_tracking": "yourdevivery.com/tracking/link/1",
          "vendor": {
            "id": 1,
            "name": "C & S Wholesalers",
            "rep_first_name": "Bill",
            "rep_last_name": "Sales",
            "email": "info@candswholes.com",
            "phone": "603-344-5555",
            "account_number": null,
            "created_at": "2019-11-15T16:44:28.494Z",
            "updated_at": "2019-11-15T16:44:28.494Z",
            "address": "44 Billings Circle",
            "city": "Keene",
            "state": "NH",
            "zip": "03455",
            "website": "www.candswholes.com",
            "notes": "Trucks"
          },
          "location": null,
          "line_items": []
        }
      },
      "type": "object",
      "properties": {
        "purchase_order": {
          "type": "object"
        }
      },
      "required": [
        "purchase_order"
      ]
    },
    "PurchaseOrdersCreatePoLineItemRequest": {
      "title": "PurchaseOrdersCreatePoLineItemRequest",
      "type": "object",
      "properties": {
        "product_id": {
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PurchaseOrdersCreatePoLineItemResponse": {
      "title": "PurchaseOrdersCreatePoLineItemResponse",
      "example": {
        "po_line_item": {
          "id": 2,
          "purchase_order_id": 7,
          "product_id": 2,
          "quantity": 10,
          "cost_cents": 1,
          "total_cents": 10,
          "created_at": "2019-10-30T12:00:11.764Z",
          "updated_at": "2019-10-30T12:00:11.764Z",
          "received": false,
          "position": null,
          "received_quantity": 10,
          "parent_po_line_item_id": null,
          "old_cost_cents": null
        }
      },
      "type": "object",
      "properties": {
        "po_line_item": {
          "type": "object"
        }
      },
      "required": [
        "po_line_item"
      ]
    },
    "PurchaseOrdersCreatePoLineItemResponse1": {
      "title": "PurchaseOrdersCreatePoLineItemResponse1",
      "example": {
        "errors": "Error adding that item  - please ensure that the item you are trying to add is set to ‘Maintain Stock’."
      },
      "type": "object",
      "properties": {
        "errors": {
          "type": "string"
        }
      },
      "required": [
        "errors"
      ]
    },
    "RmmAlertsResponse": {
      "title": "RmmAlertsResponse",
      "example": {
        "rmm_alerts": [
          {
            "id": 1,
            "customer_id": 0,
            "ticket_number": null,
            "ticket_status": null,
            "computer_name": "MyString",
            "properties": {},
            "resolved": false,
            "check_id": 1,
            "status": "MyString",
            "formatted_output": "MyText",
            "description": "MyText",
            "created_at": "2019-10-31T08:22:35.058Z",
            "updated_at": "2019-10-31T08:22:35.058Z",
            "asset_id": 1
          }
        ],
        "meta": {
          "total_pages": 1,
          "page": 1
        }
      },
      "type": "object",
      "properties": {
        "rmm_alerts": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": [
        "rmm_alerts",
        "meta"
      ]
    },
    "RmmAlertsRequest": {
      "title": "RmmAlertsRequest",
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "asset_id": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "resolved": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/Properties2"
        }
      }
    },
    "Properties2": {
      "title": "Properties2",
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "hidden": {
          "type": "boolean"
        },
        "sms_body": {
          "type": "string"
        },
        "do_not_email": {
          "type": "boolean"
        },
        "tech": {
          "type": "string"
        }
      }
    },
    "RmmAlertsResponse2": {
      "title": "RmmAlertsResponse2",
      "example": {
        "success": true,
        "alert": {
          "id": 3,
          "account_id": 1,
          "customer_id": 1,
          "computer_name": null,
          "properties": {},
          "resolved": false,
          "check_id": null,
          "status": null,
          "formatted_output": null,
          "description": "RMM Alert Description",
          "created_at": "2020-08-04T12:19:25.754Z",
          "updated_at": "2020-08-04T12:19:25.754Z",
          "ticket_id": null,
          "asset_id": 2
        }
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "alert": {
          "type": "object"
        }
      },
      "required": [
        "success",
        "alert"
      ]
    },
    "RmmAlertsMuteResponse": {
      "title": "RmmAlertsMuteResponse",
      "example": {
        "success": "true"
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ]
    },
    "RmmAlertsResponse4": {
      "title": "RmmAlertsResponse4",
      "example": {
        "rmm_alert": {
          "id": 1,
          "customer_id": 0,
          "ticket_number": null,
          "ticket_status": null,
          "computer_name": "MyString",
          "properties": {},
          "resolved": false,
          "check_id": 1,
          "status": "MyString",
          "formatted_output": "MyText",
          "description": "MyText",
          "created_at": "2019-10-31T08:22:35.058Z",
          "updated_at": "2019-10-31T08:22:35.058Z",
          "asset_id": 1
        }
      },
      "type": "object",
      "properties": {
        "rmm_alert": {
          "type": "object"
        }
      },
      "required": [
        "rmm_alert"
      ]
    },
    "RmmAlertsResponse5": {
      "title": "RmmAlertsResponse5",
      "example": {
        "success": "true"
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ]
    },
    "SchedulesResponse": {
      "title": "SchedulesResponse",
      "example": {
        "schedules": [
          {
            "id": 1,
            "account_id": 1,
            "customer_id": 1,
            "email_customer": false,
            "frequency": "Daily",
            "name": "MyString",
            "next_run": "2016-01-01T00:00:00.000Z",
            "snail_mail": false,
            "charge_mop": false,
            "subtotal": 0,
            "invoice_unbilled_ticket_charges": false,
            "paused": false,
            "last_invoice_paid": null,
            "lines": []
          }
        ]
      },
      "type": "object",
      "properties": {
        "schedules": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "schedules"
      ]
    },
    "Schedule": {
      "title": "Schedule",
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "email_customer": {
          "type": "boolean"
        },
        "frequency": {
          "$ref": "#/definitions/Frequency"
        },
        "name": {
          "type": "string"
        },
        "next_run": {
          "type": "string",
          "format": "date"
        },
        "snail_mail": {
          "type": "boolean"
        },
        "charge_mop": {
          "type": "boolean"
        },
        "invoice_unbilled_ticket_charges": {
          "type": "boolean"
        },
        "paused": {
          "type": "boolean"
        }
      }
    },
    "Frequency": {
      "title": "Frequency",
      "type": "string",
      "enum": [
        "Daily",
        "Monthly",
        "Weekly",
        "Biweekly",
        "Quarterly",
        "Semi-Annually",
        "Annually",
        "Biennially",
        "Triennially"
      ]
    },
    "SchedulesResponse2": {
      "title": "SchedulesResponse2",
      "example": {
        "schedule": {
          "id": 1,
          "account_id": 1,
          "customer_id": 1,
          "email_customer": false,
          "frequency": "Daily",
          "name": "MyString",
          "next_run": "2016-01-01T00:00:00.000Z",
          "snail_mail": false,
          "charge_mop": false,
          "subtotal": 0,
          "invoice_unbilled_ticket_charges": false,
          "paused": false,
          "last_invoice_paid": null,
          "lines": []
        }
      },
      "type": "object",
      "properties": {
        "schedule": {
          "type": "object"
        }
      },
      "required": [
        "schedule"
      ]
    },
    "SchedulesResponse3": {
      "title": "SchedulesResponse3",
      "example": {
        "error": [
          "Frequency Must be a valid selection",
          "Frequency can't be blank",
          "Next run can't be blank",
          "Name can't be blank",
          "Customer can't be blank"
        ]
      },
      "type": "object",
      "properties": {
        "error": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "error"
      ]
    },
    "ScheduleLineItem": {
      "title": "ScheduleLineItem",
      "type": "object",
      "properties": {
        "product_id": {
          "type": "integer",
          "format": "int32"
        },
        "cost_cents": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "type": "number",
          "format": "double"
        },
        "retail_cents": {
          "type": "integer",
          "format": "int32"
        },
        "one_time_charge": {
          "type": "boolean"
        },
        "taxable": {
          "type": "boolean"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "asset_type_id": {
          "type": "integer",
          "format": "int32"
        },
        "contact_field_type_id": {
          "type": "integer",
          "format": "int32"
        },
        "contact_field_answer_id": {
          "type": "integer",
          "format": "int32"
        },
        "recurring_type_id": {
          "$ref": "#/definitions/RecurringTypeId"
        },
        "saved_asset_search_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RecurringTypeId": {
      "title": "RecurringTypeId",
      "type": "integer",
      "format": "int32",
      "enum": [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6"
      ]
    },
    "SchedulesAddLineItemResponse": {
      "title": "SchedulesAddLineItemResponse",
      "example": {
        "schedule_line_item": {
          "id": 1,
          "cost_cents": 0,
          "description": "Description",
          "name": "Name",
          "position": 0,
          "product_id": null,
          "quantity": "0.0",
          "retail_cents": 0,
          "schedule_id": 11,
          "taxable": false,
          "user_id": 1,
          "price_cost": 0,
          "price_retail": 0,
          "product_category": null,
          "asset_type_id": null,
          "recurring_type_id": null,
          "device_ids": [],
          "one_time_charge": false
        }
      },
      "type": "object",
      "properties": {
        "schedule_line_item": {
          "type": "object"
        }
      },
      "required": [
        "schedule_line_item"
      ]
    },
    "SchedulesAddLineItemResponse1": {
      "title": "SchedulesAddLineItemResponse1",
      "example": {
        "error": [
          "Name can't be blank"
        ]
      },
      "type": "object",
      "properties": {
        "error": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "error"
      ]
    },
    "SchedulesLineItemsResponse": {
      "title": "SchedulesLineItemsResponse",
      "example": {
        "schedule_line_item": {
          "id": 3,
          "cost_cents": 1,
          "description": "MyText",
          "name": "Updated Name",
          "position": 1,
          "product_id": 1,
          "quantity": "9.99",
          "retail_cents": 1,
          "schedule_id": 15,
          "taxable": false,
          "user_id": 1,
          "price_cost": 0.01,
          "price_retail": 0.01,
          "product_category": null,
          "asset_type_id": null,
          "recurring_type_id": null,
          "device_ids": [],
          "one_time_charge": false
        }
      },
      "type": "object",
      "properties": {
        "schedule_line_item": {
          "type": "object"
        }
      },
      "required": [
        "schedule_line_item"
      ]
    },
    "SchedulesLineItemsResponse1": {
      "title": "SchedulesLineItemsResponse1",
      "example": {
        "error": [
          "Name can't be blank"
        ]
      },
      "type": "object",
      "properties": {
        "error": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "error"
      ]
    },
    "SearchResponse": {
      "title": "SearchResponse",
      "example": {
        "quick_result": null,
        "results": [
          {
            "table": {
              "_id": 1,
              "_type": "customer",
              "_index": "customers",
              "_source": {
                "table": {
                  "firstname": "Walkin",
                  "lastname": "Customer",
                  "email": "walkin@somedomain.com",
                  "business_name": null,
                  "phones": [
                    {
                      "id": 1,
                      "label": "Phone",
                      "number": "123",
                      "customer_id": 1,
                      "created_at": "2019-11-01T09:13:58.626Z",
                      "updated_at": "2019-11-01T09:13:58.626Z",
                      "extension": null
                    }
                  ]
                }
              }
            }
          }
        ],
        "error": null
      },
      "type": "object",
      "properties": {
        "quick_result": {
          "type": "string"
        },
        "results": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "quick_result",
        "results",
        "error"
      ]
    },
    "SettingsResponse": {
      "title": "SettingsResponse",
      "example": {
        "customers": {
          "required_fields": null,
          "customer_fields": [],
          "customer_field_answers": []
        },
        "assets": {
          "asset_types": [],
          "asset_type_fields": [],
          "asset_type_field_answers": []
        },
        "locale": {
          "iso_code": "en",
          "currency_symbol": "$",
          "date_format": "mm-dd-yy",
          "time_format": "hh:mm tt",
          "time_zone": "America/Los_Angeles",
          "time_offset": "-08:00"
        },
        "ticket": {
          "ticket_types": [],
          "ticket_type_fields": [],
          "ticket_type_field_answers": [],
          "problem_types": [
            "Virus",
            "TuneUp",
            "Hardware",
            "Software",
            "Other"
          ],
          "priorities": [
            "",
            "0 Urgent",
            "1 High",
            "2 Normal",
            "3 Low"
          ]
        },
        "business_hours_enabled": true,
        "business_hours": [
          {
            "day": "Sunday",
            "start": "09:00",
            "end": "17:00",
            "closed": false
          },
          {
            "day": "Monday",
            "start": "09:00",
            "end": "17:00",
            "closed": false
          },
          {
            "day": "Tuesday",
            "start": "09:00",
            "end": "17:00",
            "closed": false
          },
          {
            "day": "Wednesday",
            "start": "09:00",
            "end": "17:00",
            "closed": false
          },
          {
            "day": "Thursday",
            "start": "09:00",
            "end": "17:00",
            "closed": false
          },
          {
            "day": "Friday",
            "start": "09:00",
            "end": "17:00",
            "closed": false
          },
          {
            "day": "Saturday",
            "start": "09:00",
            "end": "17:00",
            "closed": false
          }
        ],
        "default_holiday_calendar": "USA",
        "msp_addon": null
      },
      "type": "object",
      "properties": {
        "customers": {
          "type": "object"
        },
        "assets": {
          "type": "object"
        },
        "locale": {
          "type": "object"
        },
        "ticket": {
          "type": "object"
        },
        "business_hours_enabled": {
          "type": "boolean"
        },
        "business_hours": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "default_holiday_calendar": {
          "type": "string"
        },
        "msp_addon": {
          "type": "string"
        }
      },
      "required": [
        "customers",
        "assets",
        "locale",
        "ticket",
        "business_hours_enabled",
        "business_hours",
        "default_holiday_calendar",
        "msp_addon"
      ]
    },
    "SettingsTabsResponse": {
      "title": "SettingsTabsResponse",
      "example": {
        "tabs": {
          "msp_dashboard": true,
          "customers": true,
          "assets": false,
          "alerts": false,
          "contracts": false,
          "invoices": true,
          "customer_purchases": false,
          "refurbs": false,
          "estimates": true,
          "tickets": true,
          "parts": true,
          "products": true,
          "purchase_orders": false,
          "field_jobs": true,
          "kabuto_policies": true,
          "scripts": true,
          "sales": true,
          "leads": true,
          "domo": false,
          "marketr": true,
          "recur": false,
          "reports": false,
          "wiki": false,
          "app_center": false,
          "pax8": false
        }
      },
      "type": "object",
      "properties": {
        "tabs": {
          "type": "object"
        }
      },
      "required": [
        "tabs"
      ]
    },
    "SettingsPrintingResponse": {
      "title": "SettingsPrintingResponse",
      "example": {
        "messaging_channel": "100000000000000000001",
        "registers": []
      },
      "type": "object",
      "properties": {
        "messaging_channel": {
          "type": "string"
        },
        "registers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "messaging_channel",
        "registers"
      ]
    },
    "TicketTimersResponse": {
      "title": "TicketTimersResponse",
      "example": {
        "ticket_timers": [
          {
            "id": 1,
            "ticket_id": 1,
            "user_id": 1,
            "start_time": "2013-08-06T13:41:15.000Z",
            "end_time": "2013-08-06T14:41:15.000Z",
            "recorded": false,
            "created_at": "2019-11-05T15:18:43.727Z",
            "updated_at": "2019-11-05T15:18:43.727Z",
            "billable": false,
            "notes": null,
            "toggl_id": null,
            "product_id": null,
            "comment_id": null,
            "ticket_line_item_id": null,
            "active_duration": null
          }
        ],
        "meta": {
          "total_pages": 1,
          "page": 1
        }
      },
      "type": "object",
      "properties": {
        "ticket_timers": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": [
        "ticket_timers",
        "meta"
      ]
    },
    "TicketsResponse": {
      "title": "TicketsResponse",
      "example": {
        "tickets": [
          {
            "id": 1,
            "number": 1,
            "subject": "Some major problem",
            "created_at": "2019-11-04T08:59:31.034Z",
            "customer_id": 1,
            "customer_business_then_name": "Walkin Customer",
            "due_date": "2019-11-04T08:59:31.016Z",
            "resolved_at": null,
            "start_at": null,
            "end_at": null,
            "location_id": null,
            "problem_type": "Virus",
            "status": "New",
            "ticket_type_id": null,
            "properties": {},
            "user_id": null,
            "updated_at": "2019-11-04T08:59:31.034Z",
            "pdf_url": null,
            "priority": null,
            "comments": [],
            "user": null
          }
        ],
        "meta": {
          "total_pages": 1,
          "page": 1
        }
      },
      "type": "object",
      "properties": {
        "tickets": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": [
        "tickets",
        "meta"
      ]
    },
    "Ticket": {
      "title": "Ticket",
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "ticket_type_id": {
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "due_date": {
          "type": "string",
          "format": "date"
        },
        "start_at": {
          "type": "string",
          "format": "date-time"
        },
        "end_at": {
          "type": "string",
          "format": "date-time"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "problem_type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "type": "object"
        },
        "asset_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "signature_name": {
          "type": "string"
        },
        "signature_data": {
          "type": "string"
        },
        "sla_id": {
          "type": "integer",
          "format": "int32"
        },
        "contact_id": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "string"
        },
        "outtake_form_data": {
          "type": "string"
        },
        "outtake_form_date": {
          "type": "string",
          "format": "date-time"
        },
        "outtake_form_name": {
          "type": "string"
        },
        "comments_attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommentsAttribute"
          }
        }
      }
    },
    "CommentsAttribute": {
      "title": "CommentsAttribute",
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "hidden": {
          "type": "boolean"
        },
        "sms_body": {
          "type": "string"
        },
        "do_not_email": {
          "type": "boolean"
        },
        "tech": {
          "type": "string"
        }
      }
    },
    "TicketsResponse2": {
      "title": "TicketsResponse2",
      "example": {
        "ticket": {
          "id": 3,
          "number": 2012,
          "subject": "Ticket Subject",
          "created_at": "2019-11-04T14:55:01.883Z",
          "customer_id": 1,
          "customer_business_then_name": "Walkin Customer",
          "due_date": "2025-10-10T08:00:00.000Z",
          "start_at": null,
          "end_at": "2025-10-10T18:45:00.000Z",
          "location_id": null,
          "problem_type": "Virus",
          "status": "New",
          "properties": {
            "Device Type": "Hard Drive",
            "Maker": "Text field"
          },
          "user_id": 1,
          "updated_at": "2019-11-04T14:55:01.928Z",
          "pdf_url": null,
          "intake_form_html": null,
          "signature_name": "Joe",
          "signature_date": null,
          "asset_ids": [
            1
          ],
          "priority": "High",
          "resolved_at": null,
          "outtake_form_name": null,
          "outtake_form_date": null,
          "outtake_form_html": null,
          "comments": [
            {
              "id": 1,
              "created_at": "2019-11-04T14:55:01.884Z",
              "updated_at": "2019-11-04T14:55:01.884Z",
              "ticket_id": 3,
              "subject": "Comment Subject",
              "body": "Comment Body",
              "tech": null,
              "hidden": true,
              "user_id": null
            }
          ],
          "attachments": [],
          "ticket_timers": [],
          "line_items": [],
          "worksheet_results": [],
          "assets": [
            {
              "id": 1,
              "name": "Vileplume",
              "customer_id": 1,
              "created_at": "2019-11-04T14:55:01.790Z",
              "updated_at": "2019-11-04T14:55:01.790Z",
              "properties": {},
              "asset_type": "Sandshrew",
              "asset_serial": null,
              "external_rmm_link": null,
              "customer": {
                "id": 1,
                "firstname": "Walkin",
                "lastname": "Customer",
                "fullname": "Walkin Customer",
                "business_name": null,
                "email": "walkin@somedomain.com",
                "phone": "123",
                "mobile": null,
                "created_at": "2019-11-04T14:54:50.735Z",
                "updated_at": "2019-11-04T14:54:50.735Z",
                "pdf_url": null,
                "address": null,
                "address_2": null,
                "city": null,
                "state": null,
                "zip": null,
                "latitude": null,
                "longitude": null,
                "notes": null,
                "get_sms": false,
                "opt_out": false,
                "disabled": false,
                "no_email": true,
                "location_id": null,
                "properties": {},
                "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=3g85nj295ar5u4c9zq1o",
                "tax_rate_id": null,
                "notification_email": null,
                "invoice_cc_emails": null,
                "invoice_term_id": null,
                "referred_by": null,
                "ref_customer_id": null,
                "business_and_full_name": "Walkin Customer",
                "business_then_name": "Walkin Customer"
              },
              "rmm_links": [],
              "rmm_store": {
                "id": 1,
                "asset_id": 1,
                "account_id": 1,
                "triggers": {
                  "bsod_triggered": "false",
                  "time_triggered": "false",
                  "no_av_triggered": "false",
                  "defrag_triggered": "false",
                  "firewall_triggered": "false",
                  "app_crash_triggered": "false",
                  "low_hd_space_triggered": "false",
                  "smart_failure_triggered": "false",
                  "device_manager_triggered": "false",
                  "agent_offline_triggered": "false"
                },
                "windows_updates": {},
                "emsisoft": {},
                "general": {},
                "created_at": "2019-11-04T14:55:01.991Z",
                "updated_at": "2019-11-04T14:55:01.991Z",
                "override_alert_agent_offline_mins": null,
                "override_alert_agent_rearm_after_mins": null,
                "override_low_hd_threshold": null,
                "override_autoresolve_offline_alert": null
              }
            }
          ],
          "appointments": [],
          "ticket_fields": [
            {
              "id": 2,
              "name": "Maker",
              "field_type": "text_field",
              "required": null,
              "account_id": 1,
              "created_at": "2019-11-04T14:55:01.761Z",
              "updated_at": "2019-11-04T14:55:01.761Z",
              "ticket_type_id": 1,
              "hidden": false,
              "position": null,
              "answers": []
            },
            {
              "id": 1,
              "name": "Device Type",
              "field_type": "select_box",
              "required": null,
              "account_id": 1,
              "created_at": "2019-11-04T14:55:01.743Z",
              "updated_at": "2019-11-04T14:55:01.743Z",
              "ticket_type_id": 1,
              "hidden": false,
              "position": null,
              "answers": [
                {
                  "id": 1,
                  "ticket_field_id": 1,
                  "content": "Hard Drive",
                  "created_at": "2019-11-04T14:55:01.758Z",
                  "updated_at": "2019-11-04T14:55:01.758Z",
                  "account_id": null
                }
              ]
            }
          ],
          "ticket_answers": [
            {
              "id": 1,
              "ticket_field_id": 1,
              "content": "Hard Drive",
              "created_at": "2019-11-04T14:55:01.758Z",
              "updated_at": "2019-11-04T14:55:01.758Z",
              "account_id": null
            }
          ],
          "customer": {
            "id": 1,
            "firstname": "Walkin",
            "lastname": "Customer",
            "fullname": "Walkin Customer",
            "business_name": null,
            "email": "walkin@somedomain.com",
            "phone": "123",
            "mobile": null,
            "created_at": "2019-11-04T14:54:50.735Z",
            "updated_at": "2019-11-04T14:54:50.735Z",
            "pdf_url": null,
            "address": null,
            "address_2": null,
            "city": null,
            "state": null,
            "zip": null,
            "latitude": null,
            "longitude": null,
            "notes": null,
            "get_sms": false,
            "opt_out": false,
            "disabled": false,
            "no_email": true,
            "location_name": null,
            "location_id": null,
            "properties": {},
            "online_profile_url": "http://testsubdomainwi1.lvh.me//my_profile/v2/index?portal_key=cfrwzra6wo3ybuj598pa",
            "tax_rate_id": null,
            "notification_email": null,
            "invoice_cc_emails": null,
            "invoice_term_id": null,
            "referred_by": null,
            "ref_customer_id": null,
            "business_and_full_name": "Walkin Customer",
            "business_then_name": "Walkin Customer",
            "contacts": []
          },
          "contact": null,
          "user": {
            "id": 1,
            "email": "bat1man44128@man.com",
            "full_name": "Bat Man",
            "created_at": "2019-11-04T14:54:51.081Z",
            "updated_at": "2019-11-04T14:54:51.081Z",
            "group": "Admins",
            "admin": true,
            "color": "1e3e96"
          },
          "ticket_type": {
            "id": 1,
            "name": "Devices",
            "account_id": 1,
            "created_at": "2019-11-04T14:55:01.722Z",
            "updated_at": "2019-11-04T14:55:01.722Z",
            "disabled": false,
            "intake_terms": null,
            "skip_intake": false,
            "outtake_terms": null,
            "skip_outtake": false,
            "ticket_fields": [
              {
                "id": 2,
                "name": "Maker",
                "field_type": "text_field",
                "required": null,
                "account_id": 1,
                "created_at": "2019-11-04T14:55:01.761Z",
                "updated_at": "2019-11-04T14:55:01.761Z",
                "ticket_type_id": 1,
                "hidden": false,
                "position": null,
                "answers": []
              },
              {
                "id": 1,
                "name": "Device Type",
                "field_type": "select_box",
                "required": null,
                "account_id": 1,
                "created_at": "2019-11-04T14:55:01.743Z",
                "updated_at": "2019-11-04T14:55:01.743Z",
                "ticket_type_id": 1,
                "hidden": false,
                "position": null,
                "answers": [
                  {
                    "id": 1,
                    "ticket_field_id": 1,
                    "content": "Hard Drive",
                    "created_at": "2019-11-04T14:55:01.758Z",
                    "updated_at": "2019-11-04T14:55:01.758Z",
                    "account_id": null
                  }
                ]
              }
            ]
          }
        }
      },
      "type": "object",
      "properties": {
        "ticket": {
          "type": "object"
        }
      },
      "required": [
        "ticket"
      ]
    },
    "TicketsResponse3": {
      "title": "TicketsResponse3",
      "example": {
        "error": "Customer required field"
      },
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      },
      "required": [
        "error"
      ]
    },
    "TicketsResponse7": {
      "title": "TicketsResponse7",
      "example": {
        "success": false,
        "message": [
          "Subject can't be blank"
        ]
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success",
        "message"
      ]
    },
    "TicketsResponse8": {
      "title": "TicketsResponse8",
      "example": {
        "message": "Ticket was successfully deleted. "
      },
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "TicketsSettingsResponse": {
      "title": "TicketsSettingsResponse",
      "example": {
        "ticket_status_list": [
          "New",
          "In Progress",
          "Resolved",
          "Invoiced",
          "Waiting for Parts",
          "Waiting on Customer",
          "Scheduled",
          "Customer Reply"
        ],
        "default_labor_product_id": null,
        "ticket_timer_charge_by_default": null,
        "saved_searches": [],
        "ticket_types": [],
        "ticket_type_fields": [],
        "ticket_type_field_answers": [],
        "appointment_types": [],
        "users": [
          {
            "id": 1,
            "name": "Bat Man"
          }
        ],
        "dashboard_settings": null,
        "worksheet_templates": [],
        "require_ticket_type": null,
        "require_intake_form_with_ticket": null,
        "require_outtake_form_with_ticket": null,
        "ticket_workflow_default_id": null
      },
      "type": "object",
      "properties": {
        "ticket_status_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "default_labor_product_id": {
          "type": "string"
        },
        "ticket_timer_charge_by_default": {
          "type": "string"
        },
        "saved_searches": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ticket_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ticket_type_fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ticket_type_field_answers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "appointment_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "dashboard_settings": {
          "type": "string"
        },
        "worksheet_templates": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "require_ticket_type": {
          "type": "string"
        },
        "require_intake_form_with_ticket": {
          "type": "string"
        },
        "require_outtake_form_with_ticket": {
          "type": "string"
        },
        "ticket_workflow_default_id": {
          "type": "string"
        }
      },
      "required": [
        "ticket_status_list",
        "default_labor_product_id",
        "ticket_timer_charge_by_default",
        "saved_searches",
        "ticket_types",
        "ticket_type_fields",
        "ticket_type_field_answers",
        "appointment_types",
        "users",
        "dashboard_settings",
        "worksheet_templates",
        "require_ticket_type",
        "require_intake_form_with_ticket",
        "require_outtake_form_with_ticket",
        "ticket_workflow_default_id"
      ]
    },
    "TicketsCommentRequest": {
      "title": "TicketsCommentRequest",
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "tech": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "hidden": {
          "type": "boolean"
        },
        "sms_body": {
          "type": "string"
        },
        "do_not_email": {
          "type": "boolean"
        }
      }
    },
    "TicketsCommentResponse": {
      "title": "TicketsCommentResponse",
      "example": {
        "comment": {
          "id": 2,
          "created_at": "2019-11-05T09:13:33.422Z",
          "updated_at": "2019-11-05T09:13:33.422Z",
          "ticket_id": 13,
          "subject": "Comment Subject",
          "body": "Comment Body",
          "tech": "Joe",
          "hidden": true,
          "user_id": 1
        }
      },
      "type": "object",
      "properties": {
        "comment": {
          "type": "object"
        }
      },
      "required": [
        "comment"
      ]
    },
    "TicketsCommentResponse1": {
      "title": "TicketsCommentResponse1",
      "example": {
        "success": false,
        "message": [
          "Body can't be blank",
          "Subject can't be blank"
        ]
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success",
        "message"
      ]
    },
    "TicketsTimerEntryRequest": {
      "title": "TicketsTimerEntryRequest",
      "type": "object",
      "properties": {
        "start_at": {
          "type": "string",
          "format": "date-time"
        },
        "end_at": {
          "type": "string",
          "format": "date-time"
        },
        "duration_minutes": {
          "type": "integer",
          "format": "int32"
        },
        "user_id": {
          "description": "Current user by default",
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "type": "string"
        },
        "product_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TicketsTimerEntryResponse": {
      "title": "TicketsTimerEntryResponse",
      "example": {
        "id": 1,
        "ticket_id": 15,
        "user_id": 1,
        "start_time": "2019-11-05T12:15:59.000Z",
        "end_time": "2019-11-05T12:25:59.000Z",
        "recorded": false,
        "created_at": "2019-11-05T12:15:59.365Z",
        "updated_at": "2019-11-05T12:15:59.365Z",
        "billable": false,
        "notes": "API Timer",
        "toggl_id": null,
        "product_id": null,
        "comment_id": null,
        "ticket_line_item_id": null,
        "active_duration": 600
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "ticket_id": {
          "type": "integer",
          "format": "int32"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "start_time": {
          "type": "string"
        },
        "end_time": {
          "type": "string"
        },
        "recorded": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "billable": {
          "type": "boolean"
        },
        "notes": {
          "type": "string"
        },
        "toggl_id": {
          "type": "string"
        },
        "product_id": {
          "type": "string"
        },
        "comment_id": {
          "type": "string"
        },
        "ticket_line_item_id": {
          "type": "string"
        },
        "active_duration": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "id",
        "ticket_id",
        "user_id",
        "start_time",
        "end_time",
        "recorded",
        "created_at",
        "updated_at",
        "billable",
        "notes",
        "toggl_id",
        "product_id",
        "comment_id",
        "ticket_line_item_id",
        "active_duration"
      ]
    },
    "TicketsTimerEntryResponse1": {
      "title": "TicketsTimerEntryResponse1",
      "example": {
        "error": "no implicit conversion of nil into String"
      },
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      },
      "required": [
        "error"
      ]
    },
    "TicketsAddLineItemRequest": {
      "title": "TicketsAddLineItemRequest",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "upc_code": {
          "type": "string"
        },
        "product_id": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "quantity": {
          "type": "number",
          "format": "double"
        },
        "price_cost": {
          "type": "number",
          "format": "double"
        },
        "price_retail": {
          "type": "number",
          "format": "double"
        },
        "taxable": {
          "type": "boolean"
        }
      }
    },
    "TicketsAddLineItemResponse": {
      "title": "TicketsAddLineItemResponse",
      "example": {
        "id": 1,
        "ticket_id": 17,
        "user_id": 1,
        "product_id": null,
        "name": "Manual Item",
        "description": "No Product",
        "quantity": "1.0",
        "product_category": null,
        "upc_code": null,
        "taxable": true,
        "cost_cents": 1000,
        "retail_cents": 1500,
        "created_at": "2019-11-05T11:46:20.347Z",
        "updated_at": "2019-11-05T11:46:20.347Z",
        "converted": false,
        "item_id": null,
        "position": 2,
        "estimate_line_item_id": null,
        "old_price": null,
        "line_discount_percent": null,
        "discount_dollars": null,
        "original_ticket_line_item_id": null,
        "price_cost": 10,
        "price_retail": 15
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "ticket_id": {
          "type": "integer",
          "format": "int32"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "product_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "quantity": {
          "type": "string"
        },
        "product_category": {
          "type": "string"
        },
        "upc_code": {
          "type": "string"
        },
        "taxable": {
          "type": "boolean"
        },
        "cost_cents": {
          "type": "integer",
          "format": "int32"
        },
        "retail_cents": {
          "type": "integer",
          "format": "int32"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "converted": {
          "type": "boolean"
        },
        "item_id": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "estimate_line_item_id": {
          "type": "string"
        },
        "old_price": {
          "type": "string"
        },
        "line_discount_percent": {
          "type": "string"
        },
        "discount_dollars": {
          "type": "string"
        },
        "original_ticket_line_item_id": {
          "type": "string"
        },
        "price_cost": {
          "type": "integer",
          "format": "int32"
        },
        "price_retail": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "id",
        "ticket_id",
        "user_id",
        "product_id",
        "name",
        "description",
        "quantity",
        "product_category",
        "upc_code",
        "taxable",
        "cost_cents",
        "retail_cents",
        "created_at",
        "updated_at",
        "converted",
        "item_id",
        "position",
        "estimate_line_item_id",
        "old_price",
        "line_discount_percent",
        "discount_dollars",
        "original_ticket_line_item_id",
        "price_cost",
        "price_retail"
      ]
    },
    "TicketsAddLineItemResponse1": {
      "title": "TicketsAddLineItemResponse1",
      "example": {
        "errors": "Name can't be blank, Description can't be blank",
        "params": {}
      },
      "type": "object",
      "properties": {
        "errors": {
          "type": "string"
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "errors",
        "params"
      ]
    },
    "TicketsAttachFileUrlResponse": {
      "title": "TicketsAttachFileUrlResponse",
      "example": {
        "message": "Processing - refresh ticket in a moment to see if it worked."
      },
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "TicketsAttachFileUrlResponse1": {
      "title": "TicketsAttachFileUrlResponse1",
      "example": {
        "error": "Missing files param - or not an array like [{'url':'http://foo','filename': 'test'}]"
      },
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      },
      "required": [
        "error"
      ]
    },
    "TicketsRemoveLineItemRequest": {
      "title": "TicketsRemoveLineItemRequest",
      "type": "object",
      "properties": {
        "ticket_line_item_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TicketsRemoveLineItemResponse": {
      "title": "TicketsRemoveLineItemResponse",
      "example": {
        "success": true,
        "message": ""
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "success",
        "message"
      ]
    },
    "TicketsUpdateLineItemRequest": {
      "title": "TicketsUpdateLineItemRequest",
      "type": "object",
      "properties": {
        "ticket_line_item_id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "upc_code": {
          "type": "string"
        },
        "product_id": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "quantity": {
          "type": "number",
          "format": "double"
        },
        "price_cost": {
          "type": "number",
          "format": "double"
        },
        "price_retail": {
          "type": "number",
          "format": "double"
        },
        "taxable": {
          "type": "boolean"
        }
      }
    },
    "TicketsUpdateLineItemResponse": {
      "title": "TicketsUpdateLineItemResponse",
      "example": {
        "ticket_line_item": {
          "id": 3,
          "ticket_id": 23,
          "user_id": null,
          "product_id": null,
          "name": "Updated Line Name",
          "description": "Description",
          "quantity": "1.0",
          "product_category": null,
          "upc_code": null,
          "taxable": true,
          "cost_cents": null,
          "retail_cents": 10000,
          "created_at": "2019-11-05T14:20:25.673Z",
          "updated_at": "2019-11-05T14:20:25.692Z",
          "converted": false,
          "item_id": null,
          "position": 3,
          "estimate_line_item_id": null,
          "old_price": null,
          "line_discount_percent": null,
          "discount_dollars": null,
          "original_ticket_line_item_id": null,
          "price_cost": 0,
          "price_retail": 100
        }
      },
      "type": "object",
      "properties": {
        "ticket_line_item": {
          "type": "object"
        }
      },
      "required": [
        "ticket_line_item"
      ]
    },
    "TicketsDeleteAttachmentRequest": {
      "title": "TicketsDeleteAttachmentRequest",
      "type": "object",
      "properties": {
        "attachment_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TicketsDeleteAttachmentResponse": {
      "title": "TicketsDeleteAttachmentResponse",
      "example": {
        "success": true
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "required": [
        "success"
      ]
    },
    "TimerEntryId": {
      "title": "TimerEntryId",
      "type": "object",
      "properties": {
        "timer_entry_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TicketsDeleteTimerEntryResponse": {
      "title": "TicketsDeleteTimerEntryResponse",
      "example": {
        "success": true
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "required": [
        "success"
      ]
    },
    "TicketsUpdateTimerEntryRequest": {
      "title": "TicketsUpdateTimerEntryRequest",
      "type": "object",
      "properties": {
        "timer_entry_id": {
          "type": "integer",
          "format": "int32"
        },
        "start_at": {
          "type": "string",
          "format": "date-time"
        },
        "duration_minutes": {
          "type": "integer",
          "format": "int32"
        },
        "user_id": {
          "description": "Current user by default",
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "type": "string"
        },
        "product_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TicketsUpdateTimerEntryResponse": {
      "title": "TicketsUpdateTimerEntryResponse",
      "example": {
        "ticket_id": 29,
        "id": 3,
        "notes": "Updated Notes",
        "user_id": 1,
        "toggl_id": null,
        "start_time": "2013-08-06T13:41:15.000Z",
        "end_time": "2013-08-06T14:41:15.000Z",
        "recorded": false,
        "created_at": "2019-11-05T14:58:58.047Z",
        "updated_at": "2019-11-05T14:58:58.062Z",
        "billable": false,
        "product_id": 2,
        "comment_id": null,
        "ticket_line_item_id": null,
        "active_duration": null
      },
      "type": "object",
      "properties": {
        "ticket_id": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "toggl_id": {
          "type": "string"
        },
        "start_time": {
          "type": "string"
        },
        "end_time": {
          "type": "string"
        },
        "recorded": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "billable": {
          "type": "boolean"
        },
        "product_id": {
          "type": "integer",
          "format": "int32"
        },
        "comment_id": {
          "type": "string"
        },
        "ticket_line_item_id": {
          "type": "string"
        },
        "active_duration": {
          "type": "string"
        }
      },
      "required": [
        "ticket_id",
        "id",
        "notes",
        "user_id",
        "toggl_id",
        "start_time",
        "end_time",
        "recorded",
        "created_at",
        "updated_at",
        "billable",
        "product_id",
        "comment_id",
        "ticket_line_item_id",
        "active_duration"
      ]
    },
    "TicketsChargeTimerEntryResponse": {
      "title": "TicketsChargeTimerEntryResponse",
      "example": {
        "ticket_id": 29,
        "id": 3,
        "notes": "Updated Notes",
        "user_id": 1,
        "toggl_id": null,
        "start_time": "2013-08-06T13:41:15.000Z",
        "end_time": "2013-08-06T14:41:15.000Z",
        "recorded": true,
        "created_at": "2019-11-05T14:58:58.047Z",
        "updated_at": "2019-11-05T14:58:58.062Z",
        "billable": false,
        "product_id": 2,
        "comment_id": null,
        "ticket_line_item_id": null,
        "active_duration": null
      },
      "type": "object",
      "properties": {
        "ticket_id": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "toggl_id": {
          "type": "string"
        },
        "start_time": {
          "type": "string"
        },
        "end_time": {
          "type": "string"
        },
        "recorded": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "billable": {
          "type": "boolean"
        },
        "product_id": {
          "type": "integer",
          "format": "int32"
        },
        "comment_id": {
          "type": "string"
        },
        "ticket_line_item_id": {
          "type": "string"
        },
        "active_duration": {
          "type": "string"
        }
      },
      "required": [
        "ticket_id",
        "id",
        "notes",
        "user_id",
        "toggl_id",
        "start_time",
        "end_time",
        "recorded",
        "created_at",
        "updated_at",
        "billable",
        "product_id",
        "comment_id",
        "ticket_line_item_id",
        "active_duration"
      ]
    },
    "TimelogsResponse": {
      "title": "TimelogsResponse",
      "example": {
        "timelogs": [
          {
            "id": 1,
            "in_at": "2019-11-01T12:50:26.882Z",
            "out_at": null,
            "account_id": 1,
            "user_id": 1,
            "in_note": null,
            "out_note": null,
            "created_at": "2019-11-01T12:50:26.934Z",
            "updated_at": "2019-11-01T12:50:26.934Z",
            "lunch": null,
            "manually_updated": null
          }
        ]
      },
      "type": "object",
      "properties": {
        "timelogs": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "timelogs"
      ]
    },
    "TimelogsRequest": {
      "title": "TimelogsRequest",
      "type": "object",
      "properties": {
        "lunch": {
          "type": "boolean"
        },
        "in_at": {
          "type": "string",
          "format": "date-time"
        },
        "out_at": {
          "type": "string",
          "format": "date-time"
        },
        "in_note": {
          "type": "string"
        },
        "out_note": {
          "type": "string"
        }
      }
    },
    "TimelogsResponse2": {
      "title": "TimelogsResponse2",
      "example": {
        "id": 1,
        "in_at": "2019-11-01T12:50:26.882Z",
        "out_at": null,
        "account_id": 1,
        "user_id": 1,
        "in_note": null,
        "out_note": null,
        "created_at": "2019-11-01T12:50:26.934Z",
        "updated_at": "2019-11-01T12:50:26.934Z",
        "lunch": null,
        "manually_updated": null
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "in_at": {
          "type": "string"
        },
        "out_at": {
          "type": "string"
        },
        "account_id": {
          "type": "integer",
          "format": "int32"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "in_note": {
          "type": "string"
        },
        "out_note": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "lunch": {
          "type": "string"
        },
        "manually_updated": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "in_at",
        "out_at",
        "account_id",
        "user_id",
        "in_note",
        "out_note",
        "created_at",
        "updated_at",
        "lunch",
        "manually_updated"
      ]
    },
    "TimelogsLastResponse": {
      "title": "TimelogsLastResponse",
      "example": {
        "id": 1,
        "in_at": "2019-11-01T12:50:26.882Z",
        "out_at": null,
        "account_id": 1,
        "user_id": 1,
        "in_note": null,
        "out_note": null,
        "created_at": "2019-11-01T12:50:26.934Z",
        "updated_at": "2019-11-01T12:50:26.934Z",
        "lunch": null,
        "manually_updated": null
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "in_at": {
          "type": "string"
        },
        "out_at": {
          "type": "string"
        },
        "account_id": {
          "type": "integer",
          "format": "int32"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "in_note": {
          "type": "string"
        },
        "out_note": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "lunch": {
          "type": "string"
        },
        "manually_updated": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "in_at",
        "out_at",
        "account_id",
        "user_id",
        "in_note",
        "out_note",
        "created_at",
        "updated_at",
        "lunch",
        "manually_updated"
      ]
    },
    "UserDevicesRequest": {
      "title": "UserDevicesRequest",
      "type": "object",
      "properties": {
        "device_uuid": {
          "type": "string"
        },
        "device_name": {
          "type": "string"
        },
        "registration_token_gcm": {
          "type": "string"
        },
        "system_name": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "screen_size": {
          "type": "string"
        }
      }
    },
    "UserDevicesResponse": {
      "title": "UserDevicesResponse",
      "example": {
        "user_id": 1,
        "registration_token_gcm": "new_token",
        "id": 5,
        "device_uuid": "u12345",
        "account_id": null,
        "name": null,
        "device_name": null,
        "system_name": null,
        "model": null,
        "screen_size": null,
        "disabled": false,
        "created_at": "2019-11-04T08:18:32.476Z",
        "updated_at": "2019-11-04T08:18:32.490Z"
      },
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "registration_token_gcm": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "device_uuid": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "device_name": {
          "type": "string"
        },
        "system_name": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "screen_size": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      },
      "required": [
        "user_id",
        "registration_token_gcm",
        "id",
        "device_uuid",
        "account_id",
        "name",
        "device_name",
        "system_name",
        "model",
        "screen_size",
        "disabled",
        "created_at",
        "updated_at"
      ]
    },
    "UserDevicesResponse1": {
      "title": "UserDevicesResponse1",
      "example": {
        "message": "Missing params device_uuid"
      },
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "UserDevicesRequest1": {
      "title": "UserDevicesRequest1",
      "type": "object",
      "properties": {
        "registration_token_gcm": {
          "type": "string"
        }
      }
    },
    "MeResponse": {
      "title": "MeResponse",
      "example": {
        "user_token": "3746f72b-9852-4d1a-84e9-eedb5c50abcd",
        "user_email": "joedoe@example.com",
        "user_name": "Joe Doe",
        "user_id": 1,
        "admin": true,
        "can_use_app": true,
        "two_factor_required": false,
        "subdomain": "testsubdomainwi1",
        "default_location": null,
        "enable_multi_locations": false,
        "locations_allowed": [],
        "permissions": {
          "asset": {
            "read": true,
            "write": true,
            "delete": true
          },
          "customer": {
            "read": true,
            "write": true,
            "delete": true
          },
          "ticket": {
            "read": true,
            "write": true,
            "delete": true
          },
          "invoice": {
            "read": true,
            "write": true,
            "delete": true
          },
          "payment": {
            "read": true,
            "write": true,
            "delete": true
          },
          "worksheet": {
            "add": true,
            "manage": true,
            "delete": true
          },
          "script": {
            "execute": true
          }
        }
      },
      "type": "object",
      "properties": {
        "user_token": {
          "type": "string"
        },
        "user_email": {
          "type": "string"
        },
        "user_name": {
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "admin": {
          "type": "boolean"
        },
        "can_use_app": {
          "type": "boolean"
        },
        "two_factor_required": {
          "type": "boolean"
        },
        "subdomain": {
          "type": "string"
        },
        "default_location": {
          "type": "string"
        },
        "enable_multi_locations": {
          "type": "boolean"
        },
        "locations_allowed": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "permissions": {
          "type": "object"
        }
      },
      "required": [
        "user_token",
        "user_email",
        "user_name",
        "user_id",
        "admin",
        "can_use_app",
        "two_factor_required",
        "subdomain",
        "default_location",
        "enable_multi_locations",
        "locations_allowed",
        "permissions"
      ]
    },
    "UsersResponse": {
      "title": "UsersResponse",
      "example": {
        "users": [
          [
            1,
            "Joe Doe"
          ]
        ]
      },
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {}
          }
        }
      },
      "required": [
        "users"
      ]
    },
    "OtpLoginRequest": {
      "title": "OtpLoginRequest",
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        }
      }
    },
    "OtpLoginResponse": {
      "title": "OtpLoginResponse",
      "example": {
        "login": true,
        "session_token": "1cbe0553-9fcd-4035-8e69-52792e16d489",
        "token_expiration": "2019-12-01T11:39:33.042Z",
        "instructions": "Save the session token somewhere safe and send that with the api_key for all future web requests. It goes in a header called Authorization2FAToken."
      },
      "type": "object",
      "properties": {
        "login": {
          "type": "boolean"
        },
        "session_token": {
          "type": "string"
        },
        "token_expiration": {
          "type": "string"
        },
        "instructions": {
          "type": "string"
        }
      },
      "required": [
        "login",
        "session_token",
        "token_expiration",
        "instructions"
      ]
    },
    "OtpLoginResponse1": {
      "title": "OtpLoginResponse1",
      "example": {
        "login": false,
        "instructions": "Your multi-factor authentication attempt failed for the 6th time, please open Syncro in browser and recover MFA."
      },
      "type": "object",
      "properties": {
        "login": {
          "type": "boolean"
        },
        "instructions": {
          "type": "string"
        }
      },
      "required": [
        "login",
        "instructions"
      ]
    },
    "UsersResponse2": {
      "title": "UsersResponse2",
      "example": {
        "user": {
          "id": 1,
          "email": "username@example.com",
          "full_name": "User Name",
          "created_at": "2019-11-01T11:39:20.554Z",
          "updated_at": "2019-11-01T11:39:20.554Z",
          "group": "Admins",
          "admin": true,
          "color": "55b932"
        }
      },
      "type": "object",
      "properties": {
        "user": {
          "type": "object"
        }
      },
      "required": [
        "user"
      ]
    },
    "VendorsResponse": {
      "title": "VendorsResponse",
      "example": {
        "vendors": [
          {
            "id": 1,
            "name": "Vendor Name",
            "rep_first_name": "Bill",
            "rep_last_name": "Sales",
            "email": "info@candswholes.com",
            "phone": "603-344-5555",
            "account_number": null,
            "created_at": "2019-11-05T16:11:12.409Z",
            "updated_at": "2019-11-05T16:11:12.409Z",
            "address": "44 Billings Circle",
            "city": "Keene",
            "state": "NH",
            "zip": "03455",
            "website": "www.candswholes.com",
            "notes": "White label trucks"
          }
        ]
      },
      "type": "object",
      "properties": {
        "vendors": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "vendors"
      ]
    },
    "Vendor": {
      "title": "Vendor",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "rep_first_name": {
          "type": "string"
        },
        "rep_last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "account_number": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "VendorsResponse2": {
      "title": "VendorsResponse2",
      "example": {
        "vendor": {
          "id": 1,
          "name": "Vendor Name",
          "rep_first_name": "Bill",
          "rep_last_name": "Sales",
          "email": "info@candswholes.com",
          "phone": "603-344-5555",
          "account_number": null,
          "created_at": "2019-11-05T16:11:12.409Z",
          "updated_at": "2019-11-05T16:11:12.409Z",
          "address": "44 Billings Circle",
          "city": "Keene",
          "state": "NH",
          "zip": "03455",
          "website": "www.candswholes.com",
          "notes": "White label trucks"
        }
      },
      "type": "object",
      "properties": {
        "vendor": {
          "type": "object"
        }
      },
      "required": [
        "vendor"
      ]
    },
    "VendorsResponse3": {
      "title": "VendorsResponse3",
      "example": {
        "success": false,
        "message": [
          "Email is not an email"
        ],
        "params": {
          "name": "Vendor1",
          "email": "broken_emailmail.com"
        }
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "success",
        "message",
        "params"
      ]
    },
    "VendorsResponse5": {
      "title": "VendorsResponse5",
      "type": "object",
      "properties": {
        "vendor": {
          "$ref": "#/definitions/Vendor1"
        }
      }
    },
    "Vendor1": {
      "title": "Vendor1",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "rep_first_name": {
          "type": "string"
        },
        "rep_last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "account_number": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "VendorsResponse7": {
      "title": "VendorsResponse7",
      "example": {
        "success": false,
        "message": [
          "Email is not an email"
        ]
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success",
        "message"
      ]
    },
    "WikiPagesResponse": {
      "title": "WikiPagesResponse",
      "example": {
        "wiki_pages": [
          {
            "id": 1,
            "account_id": 1,
            "name": "API Doc",
            "slug": "api-doc",
            "body": "a sample body",
            "interpolated_body": "a sample body"
          }
        ]
      },
      "type": "object",
      "properties": {
        "wiki_pages": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "wiki_pages"
      ]
    },
    "WikiPagesRequest": {
      "title": "WikiPagesRequest",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "customer_id": {
          "type": "integer",
          "format": "int32"
        },
        "asset_id": {
          "type": "integer",
          "format": "int32"
        },
        "visibility": {
          "type": "string"
        }
      }
    },
    "WikiPagesResponse2": {
      "title": "WikiPagesResponse2",
      "example": {
        "wiki_page": {
          "id": 1,
          "account_id": 1,
          "name": "API Doc",
          "slug": "api-doc",
          "body": "a sample body",
          "interpolated_body": "a sample body"
        }
      },
      "type": "object",
      "properties": {
        "wiki_page": {
          "type": "object"
        }
      },
      "required": [
        "wiki_page"
      ]
    },
    "WikiPagesResponse3": {
      "title": "WikiPagesResponse3",
      "example": {
        "success": false,
        "errors": [
          "Body can't be blank",
          "Name can't be blank"
        ],
        "params": {
          "name": ""
        }
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "success",
        "errors",
        "params"
      ]
    },
    "WikiPagesResponse5": {
      "title": "WikiPagesResponse5",
      "type": "object",
      "properties": {
        "wiki_page": {
          "$ref": "#/definitions/WikiPage"
        }
      }
    },
    "WikiPage": {
      "title": "WikiPage",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "account_id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "interpolated_body": {
          "type": "string"
        }
      }
    },
    "TicketsWorksheetResultsResponse": {
      "title": "TicketsWorksheetResultsResponse",
      "example": {
        "worksheet_results": [
          {
            "id": 1,
            "worksheet_template_id": 1,
            "name": "Worksheet Result from a Template",
            "public": true,
            "complete": null,
            "required": false,
            "field_list": [
              {
                "name": "section",
                "slug": "section",
                "id": 1,
                "position": 0,
                "history": []
              },
              {
                "name": "check",
                "slug": "check",
                "id": 2,
                "position": 1,
                "history": []
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "worksheet_results": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "worksheet_results"
      ]
    },
    "TicketsWorksheetResultsRequest": {
      "title": "TicketsWorksheetResultsRequest",
      "type": "object",
      "properties": {
        "worksheet_template_id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "TicketsWorksheetResultsResponse1": {
      "title": "TicketsWorksheetResultsResponse1",
      "example": {
        "worksheet_result": {
          "id": 1,
          "worksheet_template_id": 1,
          "name": "Worksheet Result from a Template",
          "public": true,
          "complete": null,
          "required": false,
          "field_list": [
            {
              "name": "section",
              "slug": "section",
              "id": 1,
              "position": 0,
              "history": []
            },
            {
              "name": "check",
              "slug": "check",
              "id": 2,
              "position": 1,
              "history": []
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "worksheet_result": {
          "type": "object"
        }
      },
      "required": [
        "worksheet_result"
      ]
    },
    "TicketsWorksheetResultsRequest1": {
      "title": "TicketsWorksheetResultsRequest1",
      "type": "object",
      "properties": {
        "worksheet_template_id": {
          "type": "integer",
          "format": "int32"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "complete": {
          "type": "boolean"
        },
        "public": {
          "type": "boolean"
        },
        "required": {
          "type": "boolean"
        },
        "answers": {
          "$ref": "#/definitions/Answers"
        }
      }
    },
    "Answers": {
      "title": "Answers",
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    }
  },
  "security": [],
  "tags": [
    {
      "name": "Appointment Type",
      "description": ""
    },
    {
      "name": "Appointment",
      "description": ""
    },
    {
      "name": "Asset",
      "description": ""
    },
    {
      "name": "Call",
      "description": ""
    },
    {
      "name": "Contact",
      "description": ""
    },
    {
      "name": "Contract",
      "description": ""
    },
    {
      "name": "Customer",
      "description": ""
    },
    {
      "name": "Estimate",
      "description": ""
    },
    {
      "name": "Invoice",
      "description": ""
    },
    {
      "name": "Invoice/Line item",
      "description": ""
    },
    {
      "name": "Item",
      "description": ""
    },
    {
      "name": "Lead",
      "description": ""
    },
    {
      "name": "Line Item",
      "description": ""
    },
    {
      "name": "New Ticket Form",
      "description": ""
    },
    {
      "name": "Payment Method",
      "description": ""
    },
    {
      "name": "Payment Profile",
      "description": ""
    },
    {
      "name": "Payment",
      "description": ""
    },
    {
      "name": "Phone",
      "description": ""
    },
    {
      "name": "Portal User",
      "description": ""
    },
    {
      "name": "Product Serial",
      "description": ""
    },
    {
      "name": "Product",
      "description": ""
    },
    {
      "name": "Purchase Order",
      "description": ""
    },
    {
      "name": "RMM Alert",
      "description": ""
    },
    {
      "name": "Schedule",
      "description": ""
    },
    {
      "name": "Search",
      "description": ""
    },
    {
      "name": "Setting",
      "description": ""
    },
    {
      "name": "Ticket Timer",
      "description": ""
    },
    {
      "name": "Ticket",
      "description": ""
    },
    {
      "name": "Timelog",
      "description": ""
    },
    {
      "name": "User Device",
      "description": ""
    },
    {
      "name": "User",
      "description": ""
    },
    {
      "name": "Vendor",
      "description": ""
    },
    {
      "name": "Wiki Page",
      "description": ""
    },
    {
      "name": "Worksheet Result",
      "description": ""
    }
  ],
  "externalDocs": {
    "url": "https://help.syncromsp.com/hc/en-us/articles/115002529993-Syncro-REST-API-Build-custom-extensions-apps-addons",
    "description": "Additional API Docs"
  }
}
